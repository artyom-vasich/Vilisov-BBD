{"version":3,"sources":["libs/engines/3d/models/Astronaut.glb","libs/engines/3d/models/VoxelGuy.glb","libs/engines/3d/models/Woman.glb","libs/engines/3d/models/tree.glb","libs/engines/3d/textures/blackgrid.jpg","libs/engines/3d/models/coin.glb","libs/engines/3d/three.js","libs/engines/3d/Unit.js","libs/utils/handlers/transitionHandler/timingFunctions.js","libs/utils/handlers/transitionHandler/index.js","libs/utils/isTouchDevice.js","libs/utils/handlers/inputHandler.js","libs/engines/3d/Scene.js","libs/engines/3d/modelLoader.js","libs/engines/3d/units/Character.js","libs/engines/3d/textureLoader.js","libs/engines/3d/units/Landscape.js","libs/engines/3d/units/Coins.js","libs/engines/3d/units/Lights.js","libs/engines/3d/units/Fog.js","libs/engines/3d/units/BloomPostprocessing/customUnrealBloomPass.js","libs/engines/3d/units/BloomPostprocessing/index.js","components/ThreeScene.js","components/TextArea.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","window","THREE","Unit","props","animate","frame","dispose","this","fns","t","k","easeIn","easeOut","easeInOut","TransitionsHandler","animateTransitions","unregisteredTransitions","transitions","forEach","transition","currentFrame","numberOfFrames","push","alpha","timingFuntion","timingFuntions","variable","copy","initialValue","clone","lerp","value","transitionToUnregister","onComplete","unregisterTransition","id","registerTransition","currentId","Number","MAX_SAFE_INTEGER","transitionId","transitionIndex","map","indexOf","splice","unregisterAllTransitions","length","noActiveTransitions","document","createEvent","e","inputVariables","mouse","alphaX","alphaY","moveFlags","up","code","pressed","down","left","right","sceneVariables","renderer","undefined","camera","scene","Scene","composer","controls","clock","Clock","frameNumber","units","unitsToggled","init","ViewerDiv","inputHandlerInit","W","clientWidth","H","clientHeight","WebGLRenderer","antialias","setClearColor","setSize","setPixelRatio","devicePixelRatio","shadowMap","enabled","appendChild","domElement","PerspectiveCamera","OrbitControls","position","z","update","EffectComposer","addPass","RenderPass","initUnits","frameId","requestAnimationFrame","disposeUnits","cancelAnimationFrame","resize","aspect","updateProjectionMatrix","Object","keys","unitName","input","maxFrameNumber","render","unit","disabled","children","remove","toggleUnits","classes","transitionHandler","options","zone","getElementById","mode","x","Math","round","innerWidth","y","innerHeight","joystickManager","nipplejs","create","processOnMove","move","set","offsetX","offsetY","processOnEnd","handleMouseMove","pageX","pageY","clamp","console","log","handleKeyDown","direction","key","keyCode","handleKeyUp","isTouchDevice","removeEventListener","addEventListener","model","a","Promise","res","rej","GLTFLoader","load","gltf","progress","loaded","total","error","minPosition","Vector3","maxPosition","xAxis","yAxis","nextPos","cameraAngle","Vector2","cameraToTarget","modelQuaternion","Quaternion","models","file","AstronautModel","scale","VoxelGuyModel","WomanModel","Character","loadModel","randomModel","random","modelLoader","gtlf","mixer","AnimationMixer","action","clipAction","animations","play","add","PI","updateMove","applyAxisAngle","collisionFlag","trees","Landscape","i","distanceTo","getDelta","quaternion","slerp","setFromAxisAngle","target","setY","getDirectionState","reduce","b","setX","setZ","TextureLoader","texture","textureLoader","planeTextureImage","planeTexture","wrapS","RepeatWrapping","wrapT","repeat","plane","Mesh","PlaneGeometry","MeshBasicMaterial","side","DoubleSide","rotateX","treeModel","treeMesh","dummy","Object3D","treePos","treeInstance","InstancedMesh","geometry","material","instanceMatrix","setUsage","DynamicDrawUsage","randomX","max","sign","randomZ","ArenaRadius","rotation","updateMatrix","setMatrixAt","matrix","needsUpdate","initialScale","finalScale","charachterPos","coinInitialPos","Coins","coinModel","coinMesh","coinInstance","middleOfArray","floor","coins","emmitCoin","setTimeout","coin","shownSprite","sprites","index","text","sprite","TextSprite","color","redrawInterval","textSize","minFontSize","maxFontSize","Array","from","Lowpoly","angle2","angle3","cos2","cos","cos3","light2","light3","light0","HemisphereLight","DirectionalLight","castShadow","sin","Fog","fog","UnrealBloomPass","resolution","strength","radius","threshold","Pass","call","clearColor","Color","pars","minFilter","LinearFilter","magFilter","format","RGBAFormat","renderTargetsHorizontal","renderTargetsVertical","nMips","resx","resy","renderTargetBright","WebGLRenderTarget","name","generateMipmaps","renderTargetHorizonal","renderTargetVertical","LuminosityHighPassShader","highPassShader","highPassUniforms","UniformsUtils","uniforms","materialHighPassFilter","ShaderMaterial","vertexShader","fragmentShader","defines","separableBlurMaterials","kernelSizeArray","getSeperableBlurMaterial","compositeMaterial","getCompositeMaterial","bloomTintColors","CopyShader","copyShader","copyUniforms","materialCopy","blending","AdditiveBlending","depthTest","depthWrite","transparent","needsSwap","oldClearColor","oldClearAlpha","basic","fsQuad","FullScreenQuad","prototype","assign","constructor","width","height","writeBuffer","readBuffer","deltaTime","maskActive","getClearColor","getClearAlpha","oldAutoClear","autoClear","state","buffers","stencil","setTest","renderToScreen","setRenderTarget","clear","inputRenderTarget","BlurDirectionX","BlurDirectionY","kernelRadius","BloomPostprocessing","pass","params","getSize","ThreeScene","componentWillUnmount","className","ref","viewerRef","param","onChange","slice","setState","FilmGrainPostprocessing","VignettePostprocessing","React","createRef","Lights","resizeObs","ResizeObserver","bind","observe","current","Component","TextArea","App","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b8659c26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Astronaut.cfa34173.glb\";","module.exports = __webpack_public_path__ + \"static/media/VoxelGuy.54dc6cca.glb\";","module.exports = __webpack_public_path__ + \"static/media/Woman.c9ed6341.glb\";","module.exports = __webpack_public_path__ + \"static/media/tree.46613934.glb\";","module.exports = __webpack_public_path__ + \"static/media/blackgrid.3d7d5793.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coin.e8a0d624.glb\";","import * as THREE from 'three'\n\nwindow.THREE = THREE\n\nexport default THREE","export default class Unit {\n  constructor(props) { this.props = props }\n  animate = frame => {}\n  dispose = () => {}\n}","let fns = {}\n\nfns.linear = t => t\nfns.easeInQuad = t => t * t\nfns.easeOutQuad = t => t * (2 - t)\nfns.easeInOutQuad = t => t < .5 ? 2 * (t ** 2) : -1 + (4 - 2 * t) * t\nfns.easeInCubic = t => t * t * t\nfns.easeOutCubic = t => (--t) * t * t + 1\nfns.easeInOutCubic = t => t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\nfns.easeInQuart = t => t * t * t * t\nfns.easeOutQuart = t => 1-(--t) * t * t * t\nfns.easeInOutQuart = t => t < .5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t\nfns.easeInQuint = t => t * t * t * t * t\nfns.easeOutQuint = t => 1 + (--t) * t * t * t * t\nfns.easeInOutQuint = t => t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t\n\nfns.easeIn = (t, k) => (t ** k)\nfns.easeOut = (t, k) => 1 - fns.easeIn(1 - t, k)\nfns.easeInOut = (t, k) => t < .5 ?\n  fns.easeIn(t * 2, k) / 2\n  :\n  1 - fns.easeIn((1 - t) * 2, k) / 2\n\nfns.easeIn2 = t => fns.easeIn(t, 1.5)\nfns.easeOut2 = t => fns.easeOut(t, 1.5)\nfns.easeInOut2 = t => fns.easeInOut(t, 1.5)\n\n\nexport default fns","import Unit from 'libs/engines/3d/Unit'\n\nimport timingFuntions from './timingFunctions'\n\nexport default class TransitionsHandler extends Unit {\n  constructor(props) {\n    super(props)\n    this.transitions = []\n    this.currentId = 0\n  }\n\n  animateTransitions = () => {\n    let unregisteredTransitions = []\n\n    this.transitions.forEach(transition => {\n      if (transition.currentFrame >= transition.numberOfFrames)\n        unregisteredTransitions.push(transition)\n      else {\n        // const alpha = 1 / (transition.numberOfFrames - transition.currentFrame)\n        const alpha = transition.currentFrame / transition.numberOfFrames\n        const timingFuntion = timingFuntions[transition.timingFuntion] || (t => t)\n\n        transition.variable.copy(transition.initialValue\n          .clone()\n          .lerp(transition.value, timingFuntion(alpha)))\n\n        transition.currentFrame++\n      }\n    })\n\n    unregisteredTransitions.forEach(transitionToUnregister => {\n      transitionToUnregister.onComplete && transitionToUnregister.onComplete()\n      this.unregisterTransition(transitionToUnregister.id)\n    })\n  }\n\n  registerTransition = props => {\n    this.transitions.push({\n      id: this.currentId = (this.currentId + 1) % Number.MAX_SAFE_INTEGER,\n      variable: props.variable,\n      value: props.value.clone(),\n      initialValue: props.variable.clone(),\n      numberOfFrames: props.numberOfFrames || 10,\n      currentFrame: 0,\n      timingFuntion: props.timingFuntion || \"none\",\n      onComplete: props.onComplete || (() => {}),\n    })\n\n    return this.currentId\n  }\n\n  unregisterTransition = transitionId => {\n    const transitionIndex = this.transitions\n      .map(transition => transition.id)\n      .indexOf(transitionId)\n\n    if (transitionIndex !== -1)\n      this.transitions.splice(transitionIndex, 1)\n  }\n\n  unregisterAllTransitions = () => this.transitions.length = 0\n\n  noActiveTransitions = () => this.transitions.length === 0\n\n}","export default () => {\n  try {  \n    document.createEvent(\"TouchEvent\")  \n    return true  \n  } catch (e) {  \n    return false  \n  }  \n}\n","import MouseSpeed from 'mouse-speed'\nimport nipplejs from 'nipplejs'\nimport clamp from 'clamp'\nimport THREE from 'libs/engines/3d/three'\nimport isTouchDevice from 'libs/utils/isTouchDevice'\n\n\nvar inputVariables = {\n  // scroll: {\n  //   alphaX: 0,\n  //   alphaY: 0,\n  // },\n  mouse: {\n    alphaX: 0,\n    alphaY: 0,\n  },\n  moveFlags: {\n    up: [\n      {\n        code: 87,\n        pressed: false,\n      },\n      {\n        code: 38,\n        pressed: false,\n      }\n    ],\n    down: [\n      {\n        code: 83,\n        pressed: false,\n      },\n      {\n        code: 40,\n        pressed: false,\n      }\n    ],\n    left: [\n      {\n        code: 68,\n        pressed: false,\n      },\n      {\n        code: 39,\n        pressed: false,\n      }\n    ],\n    right: [\n      {\n        code: 65,\n        pressed: false,\n      },\n      {\n        code: 37,\n        pressed: false,\n      }\n    ],\n  }\n  // cameraAngle: new THREE.Vector2(0, 0),\n  // move: new THREE.Vector3(0, 0, 0),\n}\n\n\nexport default class inputHandler {\n  constructor(props) {\n    this.props = props\n\n    this.input = inputVariables\n\n    if (isTouchDevice()) {  \n      // this.handleScroll()\n      // this.scrollUpdateInterval = setInterval(() => this.handleScroll(), 5)\n    }\n    else {\n      window.addEventListener('mousemove', this.handleMouseMove, false)\n      // this.speed = new MouseSpeed()\n      // this.speed.init(() => {\n      //   this.input.cameraAngle.setX((this.input.cameraAngle.x - Math.sign(this.speed.speedX) * Math.abs(this.speed.speedX) ** 1.5 / window.innerWidth / 2) % (Math.PI * 2))\n      //   this.input.cameraAngle.setY(clamp(this.input.cameraAngle.y + Math.sign(this.speed.speedY) * Math.abs(this.speed.speedY) ** 1.5 / window.innerHeight / 2, 0, Math.PI / 4))\n      // })\n\n      window.addEventListener('keydown', this.handleKeyDown, false)\n      window.addEventListener('keyup', this.handleKeyUp, false)\n    }\n  }\n\n  inputHandlerInit = () => {\n    const zoneJoystick = document.getElementById('zone-joystick')\n    var options = {\n      zone: zoneJoystick,\n      mode: 'static',\n      position: {\n        x: Math.round(window.innerWidth / 4 * 3),\n        y: Math.round(window.innerHeight / 5 * 4),\n      },\n      // size: 200,\n    }\n    this.joystickManager = nipplejs.create(options)\n\n    this.joystickManager.processOnMove = e => this.input.move.set(-e.offsetX / 1000, 0, -e.offsetY / 1000)\n    this.joystickManager.processOnEnd = e => this.input.move.set(0, 0, 0)\n\n    // this.joystickManager.on('added', (e, nipple) => {\n    //   nipple.on('start move end dir plain', e => {\n    //     console.log(e)\n    //     console.log(nipple)\n    //     // this.move.set()\n    //   })\n    // }).on('removed', (e, nipple) => {\n    //   nipple.off('start move end dir plain')\n    // })\n  }\n\n  // handleScroll = e => {\n  //   const threeSceneElement = document.getElementById(\"three-scene\")\n  //   const getBodyScrollTop = () => Math.max(-threeSceneElement.getBoundingClientRect().top, 0)\n\n  //   this.scroll.alphaY = clamp(getBodyScrollTop() / threeSceneElement.offsetHeight * .5, 0, .5)\n  // }\n  \n  handleMouseMove = e => {\n    if (!e.pageX || !e.pageY) {\n      console.log(\"no mouse found\")\n      return\n    }\n  \n    this.input.mouse.alphaX = -clamp(e.pageX / window.innerWidth - .5, -.5, .5)\n    this.input.mouse.alphaY = clamp(e.pageY / window.innerHeight - .5, -.5, .5)\n  }\n\n  handleKeyDown = e =>\n    Object.keys(this.input.moveFlags)\n      .forEach(direction =>\n        this.input.moveFlags[direction]\n          .forEach(key =>\n            key.pressed = (key.code === e.keyCode)))\n\n  handleKeyUp = e =>\n    Object.keys(this.input.moveFlags)\n      .forEach(direction =>\n        this.input.moveFlags[direction]\n          .forEach(key =>\n            key.pressed &= !(key.code === e.keyCode)))\n\n\n  dispose = () => {\n    if (isTouchDevice())\n      ;\n      // clearInterval(this.scrollUpdateInterval)\n    else\n      window.removeEventListener('mousemove', this.handleMouseMove, false)\n  }\n}","import THREE from 'libs/engines/3d/three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\nimport classes from 'multiple-extend'\n\nimport transitionHandler from 'libs/utils/handlers/transitionHandler'\nimport inputHandler from 'libs/utils/handlers/inputHandler'\n\n\nconst targetToCamera = -15\nconst maxFrameNumber = 5000\n\nvar sceneVariables = {\n  renderer: undefined,\n  camera: undefined,\n  scene: new THREE.Scene(),\n  composer: undefined,\n  controls: undefined,\n\n  clock: new THREE.Clock(),\n  frameNumber: 0,\n\n  units: {},\n  unitsToggled: false,\n}\n\n\nexport default class Scene extends\n  classes(transitionHandler, inputHandler) {\n\n  constructor(props) {\n    super(props)\n    this.scene = sceneVariables\n  }\n\n  init = ViewerDiv => {\n    this.inputHandlerInit()\n\n    const W = ViewerDiv.clientWidth\n    const H = ViewerDiv.clientHeight\n\n    //ADD RENDERER\n    this.scene.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\n    this.scene.renderer.setClearColor(0x000000, 0)\n    this.scene.renderer.setSize(W, H)\n    this.scene.renderer.setPixelRatio(window.devicePixelRatio)\n    this.scene.renderer.shadowMap.enabled = true\n\n    ViewerDiv.appendChild(this.scene.renderer.domElement)\n\n    //ADD CAMERA\n    this.scene.camera = new THREE.PerspectiveCamera(\n      75,\n      W / H,\n      0.1,\n      1000\n    )\n    this.scene.controls = new OrbitControls(this.scene.camera, this.scene.renderer.domElement)\n    this.scene.controls.enabled = false\n    this.scene.camera.position.z = targetToCamera\n    this.scene.controls.update()\n\n    this.scene.composer = new EffectComposer(this.scene.renderer)\n    this.scene.composer.addPass(new RenderPass(this.scene.scene, this.scene.camera))\n\n    this.initUnits()\n\n    if (!this.frameId)\n      this.frameId = requestAnimationFrame(this.animate)\n  }\n\n  dispose = () => {\n    this.disposeUnits()\n    cancelAnimationFrame(this.frameId)\n  }\n\n  resize = (W, H) => {\n    if (!this.scene.renderer || !this.scene.camera)\n      return\n\n    this.scene.camera.aspect = W / H\n    this.scene.camera.updateProjectionMatrix()\n\n    this.scene.renderer.setSize(W, H)\n    this.scene.renderer.setPixelRatio(window.devicePixelRatio)\n  }\n\n  animate = () => {\n    this.scene.frameNumber = (this.scene.frameNumber + 1) % maxFrameNumber\n\n    const {\n      composer,\n      controls,\n      units,\n    } = this.scene\n\n    Object.keys(units)\n      .forEach(unitName =>\n        units[unitName].animate({\n          THREE: THREE,\n          ...this.scene,\n          input: this.input,\n          maxFrameNumber: maxFrameNumber,\n        }))\n\n    controls.update()\n    composer.render()\n\n    this.frameId = window.requestAnimationFrame(this.animate)\n  }\n\n\n  initUnits = () => {\n    const props = {\n      THREE: THREE,\n      ...this.scene,\n      input: this.input,\n      maxFrameNumber: maxFrameNumber,\n    }\n\n    Object.keys(this.props.units)\n      .forEach(unitName => {\n        const unit = this.props.units[unitName]\n\n        if (!unit.disabled ^ this.scene.unitsToggled)\n        this.scene.units[unitName] = new unit.unit(props)\n      })\n  }\n\n  disposeUnits = () => {\n    const {\n      scene,\n      units,\n    } = this.scene\n\n    Object.keys(units)\n      .forEach(unitName => units[unitName].dispose())\n\n    //REDO THIS SHIT: units should unregister themselves\n    while(scene.children.length > 0)\n      scene.remove(scene.children[0])\n  }\n\n  toggleUnits = () => {\n    this.disposeUnits()\n    this.scene.unitsToggled = !this.scene.unitsToggled\n    this.initUnits()\n  }\n\n  // toggleUnit = unitName => {\n  //   // if (this.scene[unitName].enabled)\n  //   console.log(this.scene.scene.children)\n  // }\n}\n","import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\n\n\nexport default async model =>\n  new Promise((res, rej) =>\n    new GLTFLoader()\n      .load(\n        model,\n        gltf =>\n          res(gltf),\n        progress =>\n          console.log((progress.loaded / progress.total * 100) + '% loaded'),\n        error =>\n          rej(error),\n      )\n  )\n","import clamp from 'clamp'\nimport THREE from 'libs/engines/3d/three'\nimport Unit from 'libs/engines/3d/Unit'\nimport modelLoader from 'libs/engines/3d/modelLoader'\nimport AstronautModel from 'libs/engines/3d/models/Astronaut.glb'\nimport VoxelGuyModel from 'libs/engines/3d/models/VoxelGuy.glb'\nimport WomanModel from 'libs/engines/3d/models/Woman.glb'\n\n\nconst ArenaRadius = 300\nconst modelZOffset = -2\nconst minPosition = new THREE.Vector3(-ArenaRadius, -ArenaRadius, -ArenaRadius)\nconst maxPosition = new THREE.Vector3( ArenaRadius,  ArenaRadius,  ArenaRadius)\nconst xAxis = new THREE.Vector3(1, 0, 0)\nconst yAxis = new THREE.Vector3(0, 1, 0)\n// const zAxis = new THREE.Vector3(0, 0, 1)\n\nvar move = new THREE.Vector3(0, 0, 0)\nvar nextPos = new THREE.Vector3(0, 0, 0)\nvar cameraAngle = new THREE.Vector2(0, 0)\nvar cameraToTarget = new THREE.Vector3()\nvar modelQuaternion = new THREE.Quaternion()\n\nconst models = [\n  {\n    file: AstronautModel,\n    scale: 1.25,\n  },\n  {\n    file: VoxelGuyModel,\n    scale: 5,\n  },\n  {\n    file: WomanModel,\n    scale: 3,\n  },\n]\n\n\nexport default class Character extends Unit {\n  constructor(props) {\n    super(props)\n\n    this.loadModel()\n  }\n\n  loadModel = async () => {\n    const randomModel = models[Math.round(Math.random() * (models.length - 1))]\n\n    this.gtlf = await modelLoader(randomModel.file)\n    this.model = this.gtlf.scene\n    this.mixer = new THREE.AnimationMixer( this.gtlf.scene )\n    this.action = this.mixer.clipAction( this.gtlf.animations[ 0 ] )\n    console.log(this.action)\n    this.action.play()\n\n    this.model.scale.set(randomModel.scale, randomModel.scale, randomModel.scale)\n\n    this.props.scene.add(this.model)\n  }\n\n  animate = props => {\n    if (!this.model)\n      return\n\n    cameraAngle.set(\n      props.input.mouse.alphaX * Math.PI * 1.5,\n      props.input.mouse.alphaY * Math.PI / 12\n      // (cameraAngle.x + props.input.mouse.alphaX / 7) % (Math.PI * 2),\n      // clamp(cameraAngle.y + props.input.mouse.alphaY / 15, 0, Math.PI / 8)\n    )\n\n    this.updateMove(props.input)\n\n    nextPos.copy(this.model.position)\n      .add(move.clone()\n        .applyAxisAngle(yAxis, cameraAngle.x))\n    nextPos.clamp(minPosition, maxPosition)\n\n    let collisionFlag = false\n    const trees = props.units?.Landscape?.trees\n\n    if (trees)\n      for (let i = 0; i < trees.length && !collisionFlag; i++) {\n        const distance = nextPos.distanceTo(trees[i].position)\n\n        if (distance < trees[i].scale * 1.25)\n          collisionFlag = true\n      }\n\n    if (!collisionFlag) {\n      this.model.position.copy(nextPos)\n      if (move.length() > .01)\n        this.mixer.update(props.clock.getDelta())\n    }\n\n    this.model.quaternion.slerp(\n      modelQuaternion.setFromAxisAngle(yAxis, cameraAngle.x)\n      , .05)\n\n    cameraToTarget = (new THREE.Vector3(0, 0, -15))\n      .applyAxisAngle(xAxis, cameraAngle.y)\n      .applyAxisAngle(yAxis, cameraAngle.x)\n\n    this.props.controls.target.copy(this.model.position)\n    this.props.controls.target.setY(5)\n    this.props.camera.position.copy(this.props.controls.target.clone().add(cameraToTarget))\n  }\n\n  updateMove = input => {\n    const getDirectionState = direction =>\n      direction\n        .map(key => key.pressed)\n        .reduce((a, b) => a || b)\n      ? 1 : 0\n\n    move.setX(\n      (getDirectionState(input.moveFlags.right) - getDirectionState(input.moveFlags.left)) * .35)\n    move.setZ(\n      (getDirectionState(input.moveFlags.up) - getDirectionState(input.moveFlags.down)) * .35)\n  }\n\n\n  dispose = () => {}\n}\n","import THREE from 'libs/engines/3d/three'\n\n\nexport default async file =>\n  new Promise((res, rej) =>\n    new THREE.TextureLoader()\n      .load(file,\n        texture =>\n          res(texture),\n        progress => {},\n        error =>\n          rej(error)\n      )\n  )","import clamp from 'clamp'\nimport THREE from 'libs/engines/3d/three'\nimport Unit from 'libs/engines/3d/Unit'\nimport modelLoader from 'libs/engines/3d/modelLoader'\nimport textureLoader from 'libs/engines/3d/textureLoader'\n\nimport treeModel from 'libs/engines/3d/models/tree.glb'\nimport planeTextureImage from 'libs/engines/3d/textures/blackgrid.jpg'\n\n\nconst treeAmount = 75\nconst ArenaRadius = 300\nconst xAxis = new THREE.Vector3(1, 0, 0)\nconst yAxis = new THREE.Vector3(0, 1, 0)\n// const zAxis = new THREE.Vector3(0, 0, 1)\n\nexport default class Character extends Unit {\n  constructor(props) {\n    super(props)\n\n    this.loadModel()\n  }\n\n  loadModel = async () => {\n    var planeTexture = await textureLoader(planeTextureImage)\n    planeTexture.wrapS = THREE.RepeatWrapping\n    planeTexture.wrapT = THREE.RepeatWrapping\n    planeTexture.repeat.set( 27, 27 )\n    this.plane = new THREE.Mesh(\n      new THREE.PlaneGeometry( 2 * ArenaRadius, 2 * ArenaRadius, 1, 1 ),\n      new THREE.MeshBasicMaterial({\n        map: planeTexture,\n        side: THREE.DoubleSide,\n      })\n    )\n    this.plane.rotateX(Math.PI / 2)\n    this.props.scene.add( this.plane )\n\n    const treeMesh = (await modelLoader(treeModel)).scene\n    var dummy = new THREE.Object3D()\n    var treePos = new THREE.Vector3()\n\n    this.treeInstance = new THREE.InstancedMesh(treeMesh.children[0].geometry, treeMesh.children[0].material, treeAmount)\n    this.treeInstance.instanceMatrix.setUsage( THREE.DynamicDrawUsage )\n    this.props.scene.add(this.treeInstance)\n\n    this.trees = []\n    for (let i = 0; i < treeAmount; i++) {\n      let randomX = Math.max(Math.random(), .1) * Math.sign(Math.random() - .5)\n      let randomZ = Math.max(Math.random(), .1) * Math.sign(Math.random() - .5)\n\n      treePos\n        .set(\n          ArenaRadius * randomX,\n          ArenaRadius / 8 * Math.random(),\n          ArenaRadius * randomZ,\n        )\n\n      let scale = (1 + Math.random()) * 10\n      dummy.scale.set(scale, scale, scale)\n      dummy.position.copy(treePos)\n      this.trees.push({\n        position: (new THREE.Vector3()).copy(dummy.position),\n        scale: scale,\n      })\n      dummy.rotation.y = (-.5 + Math.random()) * Math.PI / 2\n      dummy.rotation.x = (.5 + Math.random()) * Math.PI / 2\n      dummy.updateMatrix()\n      this.treeInstance.setMatrixAt(i, dummy.matrix)\n    }\n\n    this.treeInstance.instanceMatrix.needsUpdate = true\n  }\n\n  animate = props => {}\n  dispose = () => {}\n}\n","import TextSprite from 'three.textsprite'\nimport THREE from 'libs/engines/3d/three'\nimport transitionHandler from 'libs/utils/handlers/transitionHandler'\nimport modelLoader from 'libs/engines/3d/modelLoader'\n\nimport coinModel from 'libs/engines/3d/models/coin.glb'\n\n\nconst coinAmount = 300\nconst ArenaRadius = 300\nconst initialScale = new THREE.Vector3(12, 12, 12)\nconst finalScale = new THREE.Vector3(.1, .1, .1)\n\nvar dummy = new THREE.Object3D()\nvar charachterPos = new THREE.Vector3()\n\n\nconst coinInitialPos = () =>\n  new THREE.Vector3(\n    (Math.random() - .5) * 2 * ArenaRadius * .7,\n    35,\n    (Math.random() - .5) * 2 * ArenaRadius * .7,\n  )\n\n\nexport default class Coins extends transitionHandler {\n  constructor(props) {\n    super(props)\n\n    this.sprites = [\n      \"🌅\",\n      \"🏆\",\n      \"✨\",\n      \"👌🏻\",\n      \"❤️\",\n      \"💋\",\n      \"🧠\",\n      \"🛹\",\n      \"💻\",\n      \"🇮🇱\",\n      \"🌙\",\n      \"🇷🇺\",\n      \"🔞\",\n      \"🥭\",\n      \"🦊\",\n      \"🛏\",\n      \"🐸\",\n      \"🏳️‍🌈\",\n      \"👨‍❤️‍💋‍👨\",\n      \"🎨\",\n      \"🎤\",\n      \"🥖\",\n      \"👑\",\n      \"🧬🏆💁🏻‍♂️\",\n      \"🕹\",\n      \"💡\",\n    ].map(text => {\n      let sprite = new TextSprite({\n        material: {\n          color: 0xFFFFFF,\n          // fog: false,\n        },\n        redrawInterval: false,\n        textSize: 3,\n        minFontSize: 128,\n        maxFontSize: 128,\n        texture: {\n          // fontFamily: `'RF-Dewi', sans-serif`,\n          // fontWeight: 700,\n          text: text,\n        },  \n      })\n      sprite.position.set(0, ArenaRadius * 2, 0)\n      props.scene.add(sprite)\n    \n      return sprite\n    })\n\n    this.coins = Array\n      .from(\n        {length: coinAmount},\n        (coin, index) => ({\n          index: index,\n          transitionId: undefined,\n          position: coinInitialPos(),\n          scale: initialScale.clone(),\n        })\n      )\n\n    this.loadModel()\n  }\n\n  loadModel = async () => {\n    const coinMesh = (await modelLoader(coinModel)).scene\n\n    this.coinInstance = new THREE.InstancedMesh(coinMesh.children[0].geometry, coinMesh.children[0].material, coinAmount)\n    this.coinInstance.instanceMatrix.setUsage( THREE.DynamicDrawUsage )\n    this.props.scene.add(this.coinInstance)\n\n    const middleOfArray = Math.floor(this.coins.length)\n    for (let i = 0; i < middleOfArray; i++)\n      this.emmitCoin(this.coins[i])\n    \n    setTimeout(() => {\n      for (let i = middleOfArray; i < this.coins.length; i++)\n        this.emmitCoin(this.coins[i])\n    }, 3000)\n  }\n\n  animate = props => {\n    if (!this.coinInstance)\n      return\n\n    this.animateTransitions()\n\n    charachterPos.copy(props.controls.target)\n    charachterPos.setY(charachterPos.y - 3)\n\n    this.coins.forEach(coin => {\n      //COLLISION\n      const distance = coin.position.distanceTo(charachterPos)\n\n      if (distance < 5) {\n        var shownSprite = this.sprites[Math.round(Math.random() * (this.sprites.length - 1))]\n        shownSprite.position.copy(charachterPos)\n        shownSprite.position.setY(shownSprite.position.y + 4)\n\n        this.registerTransition({\n          variable: shownSprite.position,\n          value: new THREE.Vector3(shownSprite.position.x, shownSprite.position.y + 3, shownSprite.position.z),\n          numberOfFrames: 25,\n          timingFuntion: 'easeOutQuad',\n          onComplete: () => shownSprite.position.setY(ArenaRadius * 2),\n        })\n\n        this.emmitCoin(coin)\n      }\n\n      //FALL AND ROTATION\n      dummy.position.copy(coin.position)\n      dummy.scale.copy(coin.scale)\n      switch ((coin.index) % 3) {\n        case 0:\n          dummy.rotation.x = (coin.index * 1000 + props.frameNumber * 100) / props.maxFrameNumber * Math.PI\n          break\n        case 1:\n          dummy.rotation.y = (coin.index * 1000 + props.frameNumber * 100) / props.maxFrameNumber * Math.PI\n          break\n        case 2:\n          dummy.rotation.z = (coin.index * 1000 + props.frameNumber * 100) / props.maxFrameNumber * Math.PI\n          break\n      }  \n\n      dummy.updateMatrix()\n      this.coinInstance.setMatrixAt(coin.index, dummy.matrix)\n    })\n    this.coinInstance.instanceMatrix.needsUpdate = true\n  }\n\n\n  emmitCoin = coin => {\n    coin.position.copy(coinInitialPos())\n    coin.scale.copy(initialScale)\n\n    this.unregisterTransition(coin.transitionId)\n\n    coin.transitionId = this.registerTransition({\n      variable: coin.position,\n      value: (new THREE.Vector3()).copy(coin.position).setY(1),\n      numberOfFrames: Math.round((.25 + Math.random()) * 250),\n      onComplete: () => {\n        coin.transitionId = this.registerTransition({\n          variable: coin.scale,\n          value: finalScale,\n          numberOfFrames: 150,\n          timingFuntion: 'easeInQuad',\n          onComplete: () => this.emmitCoin(coin)\n        })\n      }\n    })\n\n    dummy.position.copy(coin.position)\n    dummy.scale.copy(coin.scale)\n    dummy.updateMatrix()\n    this.coinInstance.setMatrixAt(coin.index, dummy.matrix)\n    this.coinInstance.instanceMatrix.needsUpdate = true\n  }\n}\n","import Unit from 'libs/engines/3d/Unit'\n\n\nconst lightDistanceToModel = 15\n\n\nexport default class Lowpoly extends Unit {\n  constructor(props) {\n    super(props)\n\n    const { scene, THREE } = props\n\n    this.light0 = new THREE.HemisphereLight( 0xffffff, 0x444444, 1.25 )\n    this.light0.position.set( 0, lightDistanceToModel, 0 )\n    scene.add( this.light0 )\n\n    // this.light1 = new THREE.HemisphereLight( 0xffffff, 0x444444, 0.95 )\n    // this.light1.position.set( 0, -lightDistanceToModel, 0 )\n    // scene.add( this.light1 )\n    \n    this.light2 = new THREE.DirectionalLight( 0xee55ee, 2.95 )\n    this.light2.position.set( lightDistanceToModel, 7, 0 )\n    this.light2.castShadow = true\n    scene.add( this.light2 )\n\n    this.light3 = new THREE.DirectionalLight( 0x77bbee, 2.95 )\n    this.light3.position.set( lightDistanceToModel * Math.cos(Math.PI * 2 / 3), 7, lightDistanceToModel * Math.sin(Math.PI * 2 / 3) )\n    this.light3.castShadow = true\n    scene.add( this.light3 )\n\n    // this.light4 = new THREE.DirectionalLight( 0x0088ff, 2.95 )\n    // this.light4.position.set( lightDistanceToModel * Math.cos(Math.PI * 4 / 3), 3, lightDistanceToModel * Math.sin(Math.PI * 4 / 3) )\n    // this.light4.castShadow = true\n    // scene.add( this.light4 )\n  }\n\n  animate = props => {\n    const angle2 = props.frameNumber * 10 / props.maxFrameNumber * Math.PI * 2\n    const angle3 = angle2 + Math.PI * 2 / 3\n    // const angle4 = angle3 + Math.PI * 2 / 3\n    const cos2 = Math.cos(angle2)\n    const cos3 = Math.cos(angle3)\n    // const cos4 = Math.cos(angle4)\n\n    this.light2.position.set(lightDistanceToModel * cos2, 3, lightDistanceToModel * ((1 - cos2 * cos2) ** .5))\n    this.light3.position.set(lightDistanceToModel * cos3, 3, lightDistanceToModel * ((1 - cos3 * cos3) ** .5))\n    // this.light4.position.set(lightDistanceToModel * cos4, 3, lightDistanceToModel * ((1 - cos4 * cos4) ** .5))\n  }\n\n  dispose = () => {}\n}\n","import Unit from 'libs/engines/3d/Unit'\n\n\nexport default class Fog extends Unit {\n  constructor(props) {\n    super(props)\n\n    const { scene, THREE } = props\n\n    this.fog = new THREE.Fog(0x444444, 35, 155)\n    scene.fog = this.fog\n  }\n\n  animate = props => {}\n  dispose = () => {}\n}\n","/**\n * @author spidersharma / http://eduperiment.com/\n */\n\nimport {\n\tAdditiveBlending,\n\tColor,\n\tLinearFilter,\n\tMeshBasicMaterial,\n\tRGBAFormat,\n\tShaderMaterial,\n\tUniformsUtils,\n\tVector2,\n\tVector3,\n\tWebGLRenderTarget\n} from \"three\";\nimport { Pass } from \"three/examples/jsm/postprocessing/Pass.js\";\nimport { CopyShader } from \"three/examples/jsm/shaders/CopyShader.js\";\nimport { LuminosityHighPassShader } from \"three/examples/jsm/shaders/LuminosityHighPassShader.js\";\n\n/**\n * UnrealBloomPass is inspired by the bloom pass of Unreal Engine. It creates a\n * mip map chain of bloom textures and blurs them with different radii. Because\n * of the weighted combination of mips, and because larger blurs are done on\n * higher mips, this effect provides good quality and performance.\n *\n * Reference:\n * - https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\n */\nvar UnrealBloomPass = function ( resolution, strength, radius, threshold ) {\n\n\tPass.call( this );\n\n\tthis.strength = ( strength !== undefined ) ? strength : 1;\n\tthis.radius = radius;\n\tthis.threshold = threshold;\n\tthis.resolution = ( resolution !== undefined ) ? new Vector2( resolution.x, resolution.y ) : new Vector2( 256, 256 );\n\n\t// create color only once here, reuse it later inside the render function\n\tthis.clearColor = new Color( 0, 0, 0 );\n\n\t// render targets\n\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\tthis.renderTargetsHorizontal = [];\n\tthis.renderTargetsVertical = [];\n\tthis.nMips = 5;\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tthis.renderTargetBright = new WebGLRenderTarget( resx, resy, pars );\n\tthis.renderTargetBright.texture.name = \"UnrealBloomPass.bright\";\n\tthis.renderTargetBright.texture.generateMipmaps = false;\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tvar renderTargetHorizonal = new WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetHorizonal.texture.name = \"UnrealBloomPass.h\" + i;\n\t\trenderTargetHorizonal.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsHorizontal.push( renderTargetHorizonal );\n\n\t\tvar renderTargetVertical = new WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetVertical.texture.name = \"UnrealBloomPass.v\" + i;\n\t\trenderTargetVertical.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsVertical.push( renderTargetVertical );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// luminosity high pass material\n\n\tif ( LuminosityHighPassShader === undefined )\n\t\tconsole.error( \"UnrealBloomPass relies on LuminosityHighPassShader\" );\n\n\tvar highPassShader = LuminosityHighPassShader;\n\tthis.highPassUniforms = UniformsUtils.clone( highPassShader.uniforms );\n\n\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = threshold;\n\tthis.highPassUniforms[ \"smoothWidth\" ].value = 0.01;\n\n\tthis.materialHighPassFilter = new ShaderMaterial( {\n\t\tuniforms: this.highPassUniforms,\n\t\tvertexShader: highPassShader.vertexShader,\n\t\tfragmentShader: highPassShader.fragmentShader,\n\t\tdefines: {}\n\t} );\n\n\t// Gaussian Blur Materials\n\tthis.separableBlurMaterials = [];\n\tvar kernelSizeArray = [ 3, 5, 7, 9, 11 ];\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tthis.separableBlurMaterials.push( this.getSeperableBlurMaterial( kernelSizeArray[ i ] ) );\n\n\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new Vector2( resx, resy );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// Composite material\n\tthis.compositeMaterial = this.getCompositeMaterial( this.nMips );\n\tthis.compositeMaterial.uniforms[ \"blurTexture1\" ].value = this.renderTargetsVertical[ 0 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture2\" ].value = this.renderTargetsVertical[ 1 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture3\" ].value = this.renderTargetsVertical[ 2 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture4\" ].value = this.renderTargetsVertical[ 3 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture5\" ].value = this.renderTargetsVertical[ 4 ].texture;\n\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = strength;\n\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = 0.1;\n\tthis.compositeMaterial.needsUpdate = true;\n\n\tvar bloomFactors = [ 1.0, 0.8, 0.6, 0.4, 0.2 ];\n\tthis.compositeMaterial.uniforms[ \"bloomFactors\" ].value = bloomFactors;\n\tthis.bloomTintColors = [ new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ),\n\t\t\t\t\t\t\t new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ) ];\n\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\n\n\t// copy material\n\tif ( CopyShader === undefined ) {\n\n\t\tconsole.error( \"UnrealBloomPass relies on CopyShader\" );\n\n\t}\n\n\tvar copyShader = CopyShader;\n\n\tthis.copyUniforms = UniformsUtils.clone( copyShader.uniforms );\n\tthis.copyUniforms[ \"opacity\" ].value = 1.0;\n\n\tthis.materialCopy = new ShaderMaterial( {\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: AdditiveBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\n\tthis.oldClearColor = new Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.basic = new MeshBasicMaterial();\n\n\tthis.fsQuad = new Pass.FullScreenQuad( null );\n\n};\n\nUnrealBloomPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: UnrealBloomPass,\n\n\tdispose: function () {\n\n\t\tfor ( var i = 0; i < this.renderTargetsHorizontal.length; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].dispose();\n\n\t\t}\n\n\t\tfor ( var i = 0; i < this.renderTargetsVertical.length; i ++ ) {\n\n\t\t\tthis.renderTargetsVertical[ i ].dispose();\n\n\t\t}\n\n\t\tthis.renderTargetBright.dispose();\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar resx = Math.round( width / 2 );\n\t\tvar resy = Math.round( height / 2 );\n\n\t\tthis.renderTargetBright.setSize( resx, resy );\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].setSize( resx, resy );\n\t\t\tthis.renderTargetsVertical[ i ].setSize( resx, resy );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new Vector2( resx, resy );\n\n\t\t\tresx = Math.round( resx / 2 );\n\t\t\tresy = Math.round( resy / 2 );\n\n\t\t}\n\n\t},\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( this.clearColor, 0 );\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( false );\n\n\t\t// Render input to screen\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\tthis.fsQuad.material = this.basic;\n\t\t\tthis.basic.map = readBuffer.texture;\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// 1. Extract Bright Areas\n\n\t\tthis.highPassUniforms[ \"tDiffuse\" ].value = readBuffer.texture;\n\t\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = this.threshold;\n\t\tthis.fsQuad.material = this.materialHighPassFilter;\n\n\t\trenderer.setRenderTarget( this.renderTargetBright );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// 2. Blur All the mips progressively\n\n\t\tvar inputRenderTarget = this.renderTargetBright;\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.fsQuad.material = this.separableBlurMaterials[ i ];\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = inputRenderTarget.texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = UnrealBloomPass.BlurDirectionX;\n\t\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = this.renderTargetsHorizontal[ i ].texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = UnrealBloomPass.BlurDirectionY;\n\t\t\trenderer.setRenderTarget( this.renderTargetsVertical[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tinputRenderTarget = this.renderTargetsVertical[ i ];\n\n\t\t}\n\n\t\t// Composite All the mips\n\n\t\tthis.fsQuad.material = this.compositeMaterial;\n\t\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = this.strength;\n\t\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = this.radius;\n\t\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\n\n\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ 0 ] );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// Blend it additively over the input texture\n\n\t\tthis.fsQuad.material = this.materialCopy;\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetsHorizontal[ 0 ].texture;\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( true );\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( readBuffer );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// Restore renderer settings\n\n\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t},\n\n\tgetSeperableBlurMaterial: function ( kernelRadius ) {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"KERNEL_RADIUS\": kernelRadius,\n\t\t\t\t\"SIGMA\": kernelRadius\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"colorTexture\": { value: null },\n\t\t\t\t\"texSize\": { value: new Vector2( 0.5, 0.5 ) },\n\t\t\t\t\"direction\": { value: new Vector2( 0.5, 0.5 ) }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"#include <common>\\\n\t\t\t\tvarying vec2 vUv;\\n\\\n\t\t\t\tuniform sampler2D colorTexture;\\n\\\n\t\t\t\tuniform vec2 texSize;\\\n\t\t\t\tuniform vec2 direction;\\\n\t\t\t\t\\\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\n\t\t\t\t}\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\n\t\t\t\t\tfloat fSigma = float(SIGMA);\\\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\n\t\t\t\t\t\tfloat x = float(i);\\\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\\\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\\\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\\\n\t\t\t\t\t\tweightSum += 2.0 * w;\\\n\t\t\t\t\t}\\\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 0.1);\\n\\\n\t\t\t\t}\"\n\t\t} );\n\n\t},\n\n\tgetCompositeMaterial: function ( nMips ) {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"NUM_MIPS\": nMips\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"blurTexture1\": { value: null },\n\t\t\t\t\"blurTexture2\": { value: null },\n\t\t\t\t\"blurTexture3\": { value: null },\n\t\t\t\t\"blurTexture4\": { value: null },\n\t\t\t\t\"blurTexture5\": { value: null },\n\t\t\t\t\"dirtTexture\": { value: null },\n\t\t\t\t\"bloomStrength\": { value: 1.0 },\n\t\t\t\t\"bloomFactors\": { value: null },\n\t\t\t\t\"bloomTintColors\": { value: null },\n\t\t\t\t\"bloomRadius\": { value: 0.0 }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"varying vec2 vUv;\\\n\t\t\t\tuniform sampler2D blurTexture1;\\\n\t\t\t\tuniform sampler2D blurTexture2;\\\n\t\t\t\tuniform sampler2D blurTexture3;\\\n\t\t\t\tuniform sampler2D blurTexture4;\\\n\t\t\t\tuniform sampler2D blurTexture5;\\\n\t\t\t\tuniform sampler2D dirtTexture;\\\n\t\t\t\tuniform float bloomStrength;\\\n\t\t\t\tuniform float bloomRadius;\\\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\n\t\t\t\t\\\n\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\n\t\t\t\t}\\\n\t\t\t\t\\\n\t\t\t\tvoid main() {\\\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\n\t\t\t\t}\"\n\t\t} );\n\n\t}\n\n} );\n\nUnrealBloomPass.BlurDirectionX = new Vector2( 1.0, 0.0 );\nUnrealBloomPass.BlurDirectionY = new Vector2( 0.0, 1.0 );\n\nexport { UnrealBloomPass };\n","import { UnrealBloomPass } from './customUnrealBloomPass'\nimport Unit from 'libs/engines/3d/Unit'\n\n\nexport default class BloomPostprocessing extends Unit {\n  constructor(props) {\n    super(props)\n\n    const {\n      renderer,\n      composer,\n      THREE,\n    } = props\n\n    this.params = [\n      .5,\n      1,\n      1,\n    ]\n    this.pass = new UnrealBloomPass(\n      new THREE.Vector2(renderer.getSize(new THREE.Vector2()).x, renderer.getSize(new THREE.Vector2()).y),\n      ...this.params\n    )\n    composer.addPass(this.pass)\n  }\n\n  animate = props => {\n    this.pass.strength = this.params[0]\n    this.pass.radius = this.params[1]\n    this.pass.threshold = this.params[2]\n  }\n  dispose = () => {}\n}\n","import React, { Component } from 'react'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nimport Scene from 'libs/engines/3d/Scene'\nimport Character from 'libs/engines/3d/units/Character'\nimport Landscape from 'libs/engines/3d/units/Landscape'\nimport Coins from 'libs/engines/3d/units/Coins'\nimport Lights from 'libs/engines/3d/units/Lights'\nimport Fog from 'libs/engines/3d/units/Fog'\nimport VignettePostprocessing from 'libs/engines/3d/units/VignettePostprocessing'\nimport FilmGrainPostprocessing from 'libs/engines/3d/units/FilmGrainPostprocessing'\nimport BloomPostprocessing from 'libs/engines/3d/units/BloomPostprocessing'\n// import EasterEgg from 'libs/engines/3d/units/EasterEgg'\n\n\nexport default class ThreeScene extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      FilmGrainPostprocessing: true,\n      BloomPostprocessing: true,\n      VignettePostprocessing: true,\n\n      params: [0, 0, 0]\n    }\n\n    this.viewerRef = new React.createRef()\n\n    this.scene = new Scene({\n      units: {\n        Character: {\n          unit: Character,\n          disabled: false,\n        },\n        Landscape: {\n          unit: Landscape,\n          disabled: false,\n        },\n        Coins: {\n          unit: Coins,\n          disabled: false,\n        },\n        Lights: {\n          unit: Lights,\n          disabled: false,\n        },\n        Fog: {\n          unit: Fog,\n          disabled: false,\n        },\n        // FilmGrainPostprocessing: {\n        //   unit: FilmGrainPostprocessing,\n        //   disabled: false,\n        // },\n        BloomPostprocessing: {\n          unit: BloomPostprocessing,\n          disabled: false,\n        },\n        // VignettePostprocessing: {\n        //   unit: VignettePostprocessing,\n        //   disabled: false,\n        // },\n        // EasterEgg: {\n        //   unit: EasterEgg,\n        //   disabled: false,\n        // },\n      }\n    })\n  }\n\n  componentDidMount() {\n    this.resizeObs = new ResizeObserver(this.resize.bind(this))\n      .observe(this.viewerRef.current)\n\n    this.scene.init(this.viewerRef.current)\n\n    setTimeout(() => this.setState({params: this.scene.scene.units.BloomPostprocessing.params}), 1250)\n  }\n\n  componentWillUnmount = () => {\n    this.scene.dispose()\n    // this.viewerRef.removeChild(this.renderer.domElement)\n  }\n\n  resize() {\n    const ViewerDiv = this.viewerRef && this.viewerRef.current\n    \n    if (!ViewerDiv)\n      return\n\n    this.scene.resize(ViewerDiv.clientWidth, ViewerDiv.clientHeight)\n  }\n\n  render = () =>\n    <>\n      <div\n        className=\"Viewer\"\n        ref={this.viewerRef}\n      >\n        <div id=\"zone-joystick\" />\n      </div>\n      <div className=\"buttons\">\n        {/* {Object.keys(this.state).map((key, index) =>\n          <div\n            className=\"buttons__item\"\n            onClick={() => {\n              // this.scene.toggleUnit(key)\n              this.scene.scene.composer.passes[index + 1].enabled = !this.state[key]\n              this.setState({[key]: !this.state[key]})\n            }}\n          >\n            {key} {this.state[key] ? \"on\" : \"off\"}\n          </div>\n        )} */}\n        {this.scene.scene.units.BloomPostprocessing &&\n          this.scene.scene.units.BloomPostprocessing.params.map((param, index) =>\n            <input\n              className=\"buttons__item\"\n              value={this.state.params[index]}\n              onChange={e => {\n                this.scene.scene.units.BloomPostprocessing.params[index] = e.target.value\n                let newParams = this.state.params.slice()\n                newParams[index] = e.target.value\n\n                this.setState({params: this.scene.scene.units.BloomPostprocessing.params})\n              }}\n            />\n        )}\n      </div>\n    </>\n}\n","import React, { Component } from 'react'\n\n\nexport default class TextArea extends Component {\n  constructor(props) {\n    super(props)\n  }\n  \n  render = () =>\n    <div className=\"text-area\">\n      <div className=\"text-area__left-column\">\n        <div className=\"text-area__left-column__text\">\n          что голодная смерть британца в тяжёлой депрессии может рассказать нам о том, как мы распоряжаемся ресурсами и будем распоряжаться ими в будущем? что такое безусловный базовый доход? как изменится ваша жизнь, получай вы каждый месяц зарплату только за то, что живёте? \n        </div>\n      </div>\n      <div className=\"text-area__right-column\">\n        <h1 className=\"h1\">\n          SITTING&nbsp;IN&nbsp;A<br />\n          ROOM.&nbsp;I&nbsp;AM.\n        </h1>\n      </div>\n    </div>\n}\n\n","import React from 'react'\n\nimport ThreeScene from './components/ThreeScene'\nimport TextArea from './components/TextArea'\n\nimport 'styles/index.sass'\n\n\nconst App = () =>\n  <>\n    <ThreeScene/>\n    <TextArea/>\n  </>\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}