{"version":3,"sources":["libs/engines/3d/models/Astronaut.glb","libs/engines/3d/models/VoxelGuy.glb","libs/engines/3d/models/Woman.glb","libs/engines/3d/models/tree.glb","libs/engines/3d/textures/blackgrid.jpg","libs/engines/3d/models/coin.glb","libs/engines/3d/three.js","libs/engines/3d/Unit.js","libs/utils/handlers/transitionHandler/timingFunctions.js","libs/utils/handlers/transitionHandler/index.js","libs/engines/3d/Scene.js","libs/utils/isTouchDevice.js","libs/engines/3d/modelLoader.js","libs/engines/3d/units/Character.js","libs/engines/3d/textureLoader.js","libs/engines/3d/units/Landscape.js","libs/engines/3d/units/Coins.js","libs/engines/3d/units/Lights.js","libs/engines/3d/units/Fog.js","libs/engines/3d/units/Controls.js","libs/engines/3d/units/BloomPostprocessing/customUnrealBloomPass.js","libs/engines/3d/units/BloomPostprocessing/index.js","components/ThreeScene.js","components/TextArea.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","window","THREE","Unit","props","animate","frame","dispose","this","fns","t","k","easeIn","easeOut","easeInOut","TransitionsHandler","animateTransitions","unregisteredTransitions","transitions","forEach","transition","currentFrame","numberOfFrames","push","alpha","timingFuntion","timingFuntions","variable","copy","initialValue","clone","lerp","value","transitionToUnregister","onComplete","unregisterTransition","id","registerTransition","currentId","Number","MAX_SAFE_INTEGER","transitionId","transitionIndex","map","indexOf","splice","unregisterAllTransitions","length","noActiveTransitions","sceneVariables","renderer","undefined","camera","scene","Scene","composer","controls","clock","Clock","frameNumber","units","unitsToggled","init","ViewerDiv","W","clientWidth","H","clientHeight","WebGLRenderer","antialias","setClearColor","setSize","setPixelRatio","devicePixelRatio","shadowMap","enabled","appendChild","domElement","PerspectiveCamera","OrbitControls","position","z","update","EffectComposer","addPass","RenderPass","initUnits","frameId","requestAnimationFrame","disposeUnits","cancelAnimationFrame","resize","aspect","updateProjectionMatrix","Object","keys","unitName","input","Controls","maxFrameNumber","render","unit","disabled","children","remove","toggleUnits","transitionHandler","document","createEvent","e","model","a","Promise","res","rej","GLTFLoader","load","gltf","progress","console","log","loaded","total","error","minPosition","Vector3","maxPosition","xAxis","yAxis","zAxis","nextPos","cameraAngle","Vector2","cameraToTarget","modelQuaternion","Quaternion","models","file","VoxelGuyModel","scale","AstronautModel","WomanModel","Character","loadModel","randomModel","Math","round","random","modelLoader","gtlf","mixer","AnimationMixer","action","clipAction","animations","play","set","add","isTouchDevice","move","angleTo","sign","x","PI","mouse","alphaX","alphaY","applyAxisAngle","clamp","collisionFlag","trees","Landscape","i","distanceTo","getDelta","quaternion","slerp","setFromAxisAngle","y","target","setY","TextureLoader","texture","textureLoader","planeTextureImage","planeTexture","wrapS","RepeatWrapping","wrapT","repeat","plane","Mesh","PlaneGeometry","MeshBasicMaterial","side","DoubleSide","rotateX","treeModel","treeMesh","dummy","Object3D","treePos","treeInstance","InstancedMesh","geometry","material","instanceMatrix","setUsage","DynamicDrawUsage","randomX","max","randomZ","ArenaRadius","rotation","updateMatrix","setMatrixAt","matrix","needsUpdate","initialScale","finalScale","charachterPos","coinInitialPos","Coins","coinModel","coinMesh","coinInstance","middleOfArray","floor","coins","emmitCoin","setTimeout","coin","shownSprite","sprites","index","text","sprite","TextSprite","color","redrawInterval","textSize","minFontSize","maxFontSize","Array","from","Lowpoly","angle2","angle3","cos2","cos","cos3","light2","light3","light0","HemisphereLight","DirectionalLight","sin","Fog","fog","initialThis","moveFlags","up","code","pressed","down","left","right","options","zone","getElementById","mode","innerWidth","innerHeight","joystickManager","nipplejs","create","on","data","force","angle","radian","getDirectionState","direction","key","reduce","b","normalize","multiplyScalar","handleMouseMove","pageX","pageY","handleKeyDown","keyCode","handleKeyUp","removeEventListener","addEventListener","UnrealBloomPass","resolution","strength","radius","threshold","Pass","call","clearColor","Color","pars","minFilter","LinearFilter","magFilter","format","RGBAFormat","renderTargetsHorizontal","renderTargetsVertical","nMips","resx","resy","renderTargetBright","WebGLRenderTarget","name","generateMipmaps","renderTargetHorizonal","renderTargetVertical","LuminosityHighPassShader","highPassShader","highPassUniforms","UniformsUtils","uniforms","materialHighPassFilter","ShaderMaterial","vertexShader","fragmentShader","defines","separableBlurMaterials","kernelSizeArray","getSeperableBlurMaterial","compositeMaterial","getCompositeMaterial","bloomTintColors","CopyShader","copyShader","copyUniforms","materialCopy","blending","AdditiveBlending","depthTest","depthWrite","transparent","needsSwap","oldClearColor","oldClearAlpha","basic","fsQuad","FullScreenQuad","prototype","assign","constructor","width","height","writeBuffer","readBuffer","deltaTime","maskActive","getClearColor","getClearAlpha","oldAutoClear","autoClear","state","buffers","stencil","setTest","renderToScreen","setRenderTarget","clear","inputRenderTarget","BlurDirectionX","BlurDirectionY","kernelRadius","BloomPostprocessing","pass","params","getSize","ThreeScene","componentWillUnmount","className","ref","viewerRef","param","onChange","slice","setState","FilmGrainPostprocessing","VignettePostprocessing","React","createRef","Lights","resizeObs","ResizeObserver","bind","observe","current","Component","TextArea","App","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.906ecf62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Astronaut.cfa34173.glb\";","module.exports = __webpack_public_path__ + \"static/media/VoxelGuy.54dc6cca.glb\";","module.exports = __webpack_public_path__ + \"static/media/Woman.c9ed6341.glb\";","module.exports = __webpack_public_path__ + \"static/media/tree.46613934.glb\";","module.exports = __webpack_public_path__ + \"static/media/blackgrid.3d7d5793.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coin.e8a0d624.glb\";","import * as THREE from 'three'\n\nwindow.THREE = THREE\n\nexport default THREE","export default class Unit {\n  constructor(props) { this.props = props }\n  animate = frame => {}\n  dispose = () => {}\n}","let fns = {}\n\nfns.linear = t => t\nfns.easeInQuad = t => t * t\nfns.easeOutQuad = t => t * (2 - t)\nfns.easeInOutQuad = t => t < .5 ? 2 * (t ** 2) : -1 + (4 - 2 * t) * t\nfns.easeInCubic = t => t * t * t\nfns.easeOutCubic = t => (--t) * t * t + 1\nfns.easeInOutCubic = t => t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\nfns.easeInQuart = t => t * t * t * t\nfns.easeOutQuart = t => 1-(--t) * t * t * t\nfns.easeInOutQuart = t => t < .5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t\nfns.easeInQuint = t => t * t * t * t * t\nfns.easeOutQuint = t => 1 + (--t) * t * t * t * t\nfns.easeInOutQuint = t => t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t\n\nfns.easeIn = (t, k) => (t ** k)\nfns.easeOut = (t, k) => 1 - fns.easeIn(1 - t, k)\nfns.easeInOut = (t, k) => t < .5 ?\n  fns.easeIn(t * 2, k) / 2\n  :\n  1 - fns.easeIn((1 - t) * 2, k) / 2\n\nfns.easeIn2 = t => fns.easeIn(t, 1.5)\nfns.easeOut2 = t => fns.easeOut(t, 1.5)\nfns.easeInOut2 = t => fns.easeInOut(t, 1.5)\n\n\nexport default fns","import Unit from 'libs/engines/3d/Unit'\n\nimport timingFuntions from './timingFunctions'\n\nexport default class TransitionsHandler extends Unit {\n  constructor(props) {\n    super(props)\n    this.transitions = []\n    this.currentId = 0\n  }\n\n  animateTransitions = () => {\n    let unregisteredTransitions = []\n\n    this.transitions.forEach(transition => {\n      if (transition.currentFrame >= transition.numberOfFrames)\n        unregisteredTransitions.push(transition)\n      else {\n        // const alpha = 1 / (transition.numberOfFrames - transition.currentFrame)\n        const alpha = transition.currentFrame / transition.numberOfFrames\n        const timingFuntion = timingFuntions[transition.timingFuntion] || (t => t)\n\n        transition.variable.copy(transition.initialValue\n          .clone()\n          .lerp(transition.value, timingFuntion(alpha)))\n\n        transition.currentFrame++\n      }\n    })\n\n    unregisteredTransitions.forEach(transitionToUnregister => {\n      transitionToUnregister.onComplete && transitionToUnregister.onComplete()\n      this.unregisterTransition(transitionToUnregister.id)\n    })\n  }\n\n  registerTransition = props => {\n    this.transitions.push({\n      id: this.currentId = (this.currentId + 1) % Number.MAX_SAFE_INTEGER,\n      variable: props.variable,\n      value: props.value.clone(),\n      initialValue: props.variable.clone(),\n      numberOfFrames: props.numberOfFrames || 10,\n      currentFrame: 0,\n      timingFuntion: props.timingFuntion || \"none\",\n      onComplete: props.onComplete || (() => {}),\n    })\n\n    return this.currentId\n  }\n\n  unregisterTransition = transitionId => {\n    const transitionIndex = this.transitions\n      .map(transition => transition.id)\n      .indexOf(transitionId)\n\n    if (transitionIndex !== -1)\n      this.transitions.splice(transitionIndex, 1)\n  }\n\n  unregisterAllTransitions = () => this.transitions.length = 0\n\n  noActiveTransitions = () => this.transitions.length === 0\n\n}","import THREE from 'libs/engines/3d/three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\n\nimport transitionHandler from 'libs/utils/handlers/transitionHandler'\n\n\nconst targetToCamera = -15\nconst maxFrameNumber = 5000\n\nvar sceneVariables = {\n  renderer: undefined,\n  camera: undefined,\n  scene: new THREE.Scene(),\n  composer: undefined,\n  controls: undefined,\n\n  clock: new THREE.Clock(),\n  frameNumber: 0,\n\n  units: {},\n  unitsToggled: false,\n}\n\n\nexport default class Scene extends transitionHandler {\n\n  constructor(props) {\n    super(props)\n    this.scene = sceneVariables\n  }\n\n  init = ViewerDiv => {\n    const W = ViewerDiv.clientWidth\n    const H = ViewerDiv.clientHeight\n\n    //ADD RENDERER\n    this.scene.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\n    this.scene.renderer.setClearColor(0x000000, 0)\n    this.scene.renderer.setSize(W, H)\n    this.scene.renderer.setPixelRatio(window.devicePixelRatio)\n    this.scene.renderer.shadowMap.enabled = true\n\n    ViewerDiv.appendChild(this.scene.renderer.domElement)\n\n    //ADD CAMERA\n    this.scene.camera = new THREE.PerspectiveCamera(\n      75,\n      W / H,\n      0.1,\n      1000\n    )\n    this.scene.controls = new OrbitControls(this.scene.camera, this.scene.renderer.domElement)\n    this.scene.controls.enabled = false\n    this.scene.camera.position.z = targetToCamera\n    this.scene.controls.update()\n\n    this.scene.composer = new EffectComposer(this.scene.renderer)\n    this.scene.composer.addPass(new RenderPass(this.scene.scene, this.scene.camera))\n\n    this.initUnits()\n\n    if (!this.frameId)\n      this.frameId = requestAnimationFrame(this.animate)\n  }\n\n  dispose = () => {\n    this.disposeUnits()\n    cancelAnimationFrame(this.frameId)\n  }\n\n  resize = (W, H) => {\n    if (!this.scene.renderer || !this.scene.camera)\n      return\n\n    this.scene.camera.aspect = W / H\n    this.scene.camera.updateProjectionMatrix()\n\n    this.scene.renderer.setSize(W, H)\n    this.scene.renderer.setPixelRatio(window.devicePixelRatio)\n  }\n\n  animate = () => {\n    this.scene.frameNumber = (this.scene.frameNumber + 1) % maxFrameNumber\n\n    const {\n      composer,\n      controls,\n      units,\n    } = this.scene\n\n    Object.keys(units)\n      .forEach(unitName =>\n        units[unitName].animate({\n          THREE: THREE,\n          ...this.scene,\n          input: this.scene.units.Controls,\n          maxFrameNumber: maxFrameNumber,\n        }))\n\n    controls.update()\n    composer.render()\n\n    this.frameId = window.requestAnimationFrame(this.animate)\n  }\n\n\n  initUnits = () => {\n    const props = {\n      THREE: THREE,\n      ...this.scene,\n      input: this.scene.units.Controls,\n      maxFrameNumber: maxFrameNumber,\n    }\n\n    Object.keys(this.props.units)\n      .forEach(unitName => {\n        const unit = this.props.units[unitName]\n\n        if (!unit.disabled ^ this.scene.unitsToggled) {\n          this.scene.units[unitName] = new unit.unit(props)\n          this.scene.units[unitName].init &&\n            this.scene.units[unitName].init()\n        }\n      })\n  }\n\n  disposeUnits = () => {\n    const {\n      scene,\n      units,\n    } = this.scene\n\n    Object.keys(units)\n      .forEach(unitName => units[unitName].dispose())\n\n    //REDO THIS SHIT: units should unregister themselves\n    while(scene.children.length > 0)\n      scene.remove(scene.children[0])\n  }\n\n  toggleUnits = () => {\n    this.disposeUnits()\n    this.scene.unitsToggled = !this.scene.unitsToggled\n    this.initUnits()\n  }\n\n  // toggleUnit = unitName => {\n  //   // if (this.scene[unitName].enabled)\n  //   console.log(this.scene.scene.children)\n  // }\n}\n","export default () => {\n  try {  \n    document.createEvent(\"TouchEvent\")  \n    return true  \n  } catch (e) {  \n    return false  \n  }  \n}\n","import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\n\n\nexport default async model =>\n  new Promise((res, rej) =>\n    new GLTFLoader()\n      .load(\n        model,\n        gltf =>\n          res(gltf),\n        progress =>\n          console.log((progress.loaded / progress.total * 100) + '% loaded'),\n        error =>\n          rej(error),\n      )\n  )\n","import THREE from 'libs/engines/3d/three'\nimport Unit from 'libs/engines/3d/Unit'\nimport isTouchDevice from 'libs/utils/isTouchDevice'\n\nimport modelLoader from 'libs/engines/3d/modelLoader'\nimport AstronautModel from 'libs/engines/3d/models/Astronaut.glb'\nimport VoxelGuyModel from 'libs/engines/3d/models/VoxelGuy.glb'\nimport WomanModel from 'libs/engines/3d/models/Woman.glb'\n\n\nconst ArenaRadius = 300\nconst modelZOffset = -2\nconst minPosition = new THREE.Vector3(-ArenaRadius, -ArenaRadius, -ArenaRadius)\nconst maxPosition = new THREE.Vector3( ArenaRadius,  ArenaRadius,  ArenaRadius)\nconst xAxis = new THREE.Vector3(1, 0, 0)\nconst yAxis = new THREE.Vector3(0, 1, 0)\nconst zAxis = new THREE.Vector3(0, 0, 1)\n\nvar nextPos = new THREE.Vector3(0, 0, 0)\nvar cameraAngle = new THREE.Vector2(0, 0)\nvar cameraToTarget = new THREE.Vector3()\nvar modelQuaternion = new THREE.Quaternion()\n\nconst models = [\n  {\n    file: VoxelGuyModel,\n    scale: 5,\n  },\n  {\n    file: AstronautModel,\n    scale: 1.25,\n  },\n  {\n    file: WomanModel,\n    scale: 3,\n  },\n]\n\n\nexport default class Character extends Unit {\n  constructor(props) {\n    super(props)\n\n    this.loadModel()\n  }\n\n  loadModel = async () => {\n    const randomModel = models[Math.round(Math.random() * (models.length - 1))]\n\n    this.gtlf = await modelLoader(randomModel.file)\n    this.model = this.gtlf.scene\n    this.mixer = new THREE.AnimationMixer( this.gtlf.scene )\n    this.action = this.mixer.clipAction( this.gtlf.animations[ 0 ] )\n    this.action.play()\n\n    this.model.scale.set(randomModel.scale, randomModel.scale, randomModel.scale)\n\n    this.props.scene.add(this.model)\n  }\n\n  animate = props => {\n    if (!this.model)\n      return\n\n    if (!isTouchDevice())\n      cameraAngle.set(\n        props.input.mouse.alphaX * Math.PI * 1.5,\n        props.input.mouse.alphaY * Math.PI / 12\n      )\n    else\n      cameraAngle.set(\n        props.input.move.z > 0 ?\n          props.input.move.angleTo(zAxis) / 1.5 * Math.sign(props.input.move.x)\n          :\n          (Math.PI - props.input.move.angleTo(zAxis)) / 1.5 * Math.sign(props.input.move.x),\n        -Math.PI / 16\n      )\n\n    nextPos.copy(this.model.position)\n      .add(props.input.move.clone()\n        .applyAxisAngle(yAxis, cameraAngle.x))\n    nextPos.clamp(minPosition, maxPosition)\n\n    let collisionFlag = false\n    const trees = props.units?.Landscape?.trees\n\n    if (trees)\n      for (let i = 0; i < trees.length && !collisionFlag; i++) {\n        const distance = nextPos.distanceTo(trees[i].position)\n\n        if (distance < trees[i].scale * 1.25)\n          collisionFlag = true\n      }\n\n    if (!collisionFlag) {\n      this.model.position.copy(nextPos)\n      if (props.input.move.length() > .01)\n        this.mixer.update(props.clock.getDelta())\n    }\n\n    this.model.quaternion.slerp(\n      modelQuaternion.setFromAxisAngle(yAxis, cameraAngle.x)\n      , .025)\n\n    cameraToTarget = (new THREE.Vector3(0, 0, -15))\n      .applyAxisAngle(xAxis, cameraAngle.y)\n      .applyAxisAngle(yAxis, cameraAngle.x)\n\n    this.props.controls.target.copy(this.model.position)\n    this.props.controls.target.setY(5)\n    this.props.camera.position.copy(this.props.controls.target.clone().add(cameraToTarget))\n  }\n\n  dispose = () => {}\n}\n","import THREE from 'libs/engines/3d/three'\n\n\nexport default async file =>\n  new Promise((res, rej) =>\n    new THREE.TextureLoader()\n      .load(file,\n        texture =>\n          res(texture),\n        progress => {},\n        error =>\n          rej(error)\n      )\n  )","import clamp from 'clamp'\nimport THREE from 'libs/engines/3d/three'\nimport Unit from 'libs/engines/3d/Unit'\nimport modelLoader from 'libs/engines/3d/modelLoader'\nimport textureLoader from 'libs/engines/3d/textureLoader'\n\nimport treeModel from 'libs/engines/3d/models/tree.glb'\nimport planeTextureImage from 'libs/engines/3d/textures/blackgrid.jpg'\n\n\nconst treeAmount = 75\nconst ArenaRadius = 300\nconst xAxis = new THREE.Vector3(1, 0, 0)\nconst yAxis = new THREE.Vector3(0, 1, 0)\n// const zAxis = new THREE.Vector3(0, 0, 1)\n\nexport default class Character extends Unit {\n  constructor(props) {\n    super(props)\n\n    this.loadModel()\n  }\n\n  loadModel = async () => {\n    var planeTexture = await textureLoader(planeTextureImage)\n    planeTexture.wrapS = THREE.RepeatWrapping\n    planeTexture.wrapT = THREE.RepeatWrapping\n    planeTexture.repeat.set( 27, 27 )\n    this.plane = new THREE.Mesh(\n      new THREE.PlaneGeometry( 2 * ArenaRadius, 2 * ArenaRadius, 1, 1 ),\n      new THREE.MeshBasicMaterial({\n        map: planeTexture,\n        side: THREE.DoubleSide,\n      })\n    )\n    this.plane.rotateX(Math.PI / 2)\n    this.props.scene.add( this.plane )\n\n    const treeMesh = (await modelLoader(treeModel)).scene\n    var dummy = new THREE.Object3D()\n    var treePos = new THREE.Vector3()\n\n    this.treeInstance = new THREE.InstancedMesh(treeMesh.children[0].geometry, treeMesh.children[0].material, treeAmount)\n    this.treeInstance.instanceMatrix.setUsage( THREE.DynamicDrawUsage )\n    this.props.scene.add(this.treeInstance)\n\n    this.trees = []\n    for (let i = 0; i < treeAmount; i++) {\n      let randomX = Math.max(Math.random(), .1) * Math.sign(Math.random() - .5)\n      let randomZ = Math.max(Math.random(), .1) * Math.sign(Math.random() - .5)\n\n      treePos\n        .set(\n          ArenaRadius * randomX,\n          ArenaRadius / 8 * Math.random(),\n          ArenaRadius * randomZ,\n        )\n\n      let scale = (1 + Math.random()) * 10\n      dummy.scale.set(scale, scale, scale)\n      dummy.position.copy(treePos)\n      this.trees.push({\n        position: (new THREE.Vector3()).copy(dummy.position),\n        scale: scale,\n      })\n      dummy.rotation.y = (-.5 + Math.random()) * Math.PI / 2\n      dummy.rotation.x = (.5 + Math.random()) * Math.PI / 2\n      dummy.updateMatrix()\n      this.treeInstance.setMatrixAt(i, dummy.matrix)\n    }\n\n    this.treeInstance.instanceMatrix.needsUpdate = true\n  }\n\n  animate = props => {}\n  dispose = () => {}\n}\n","import TextSprite from 'three.textsprite'\nimport THREE from 'libs/engines/3d/three'\nimport transitionHandler from 'libs/utils/handlers/transitionHandler'\nimport modelLoader from 'libs/engines/3d/modelLoader'\n\nimport coinModel from 'libs/engines/3d/models/coin.glb'\n\n\nconst coinAmount = 300\nconst ArenaRadius = 300\nconst initialScale = new THREE.Vector3(12, 12, 12)\nconst finalScale = new THREE.Vector3(.1, .1, .1)\n\nvar dummy = new THREE.Object3D()\nvar charachterPos = new THREE.Vector3()\n\n\nconst coinInitialPos = () =>\n  new THREE.Vector3(\n    (Math.random() - .5) * 2 * ArenaRadius * .7,\n    35,\n    (Math.random() - .5) * 2 * ArenaRadius * .7,\n  )\n\n\nexport default class Coins extends transitionHandler {\n  constructor(props) {\n    super(props)\n\n    this.sprites = [\n      \"🌅\",\n      \"✨\",\n      \"❤️\",\n      \"💋🐸\",\n      \"🧠👌🏻\",\n      \"🛹👙\",\n      \"💻\",\n      \"🇮🇱\",\n      \"💜🌙\",\n      \"🇷🇺⬆️\",\n      \"🦊🛏\",\n      \"🔞\",\n      \"🥭\",\n      \"🏳️‍🌈\",\n      \"👨‍👨‍👦📕\",\n      \"🎨🙅🏻‍♀️\",\n      \"😎👮🏾‍♂️\",\n      \"🎤💩\",\n      \"🥖\",\n      \"👑\",\n      \"🧬🏆\",\n      \"🕹\",\n      \"💡\",\n      \"✊🏾🔥\",\n      \"🦠🏡\",\n      \"🐞🧝🏼‍♀\",\n      \"🎭🚧\",\n      \"🐖👃🏻\",\n      \"🐍🚸\",\n      \"⏳😬\",\n    ].map(text => {\n      let sprite = new TextSprite({\n        material: {\n          color: 0xFFFFFF,\n          // fog: false,\n        },\n        redrawInterval: false,\n        textSize: 3,\n        minFontSize: 128,\n        maxFontSize: 128,\n        texture: {\n          // fontFamily: `'RF-Dewi', sans-serif`,\n          // fontWeight: 700,\n          text: text,\n        },  \n      })\n      sprite.position.set(0, ArenaRadius * 2, 0)\n      props.scene.add(sprite)\n    \n      return sprite\n    })\n\n    this.coins = Array\n      .from(\n        {length: coinAmount},\n        (coin, index) => ({\n          index: index,\n          transitionId: undefined,\n          position: coinInitialPos(),\n          scale: initialScale.clone(),\n        })\n      )\n\n    this.loadModel()\n  }\n\n  loadModel = async () => {\n    const coinMesh = (await modelLoader(coinModel)).scene\n\n    this.coinInstance = new THREE.InstancedMesh(coinMesh.children[0].geometry, coinMesh.children[0].material, coinAmount)\n    this.coinInstance.instanceMatrix.setUsage( THREE.DynamicDrawUsage )\n    this.props.scene.add(this.coinInstance)\n\n    const middleOfArray = Math.floor(this.coins.length)\n    for (let i = 0; i < middleOfArray; i++)\n      this.emmitCoin(this.coins[i])\n    \n    setTimeout(() => {\n      for (let i = middleOfArray; i < this.coins.length; i++)\n        this.emmitCoin(this.coins[i])\n    }, 3000)\n  }\n\n  animate = props => {\n    if (!this.coinInstance)\n      return\n\n    this.animateTransitions()\n\n    charachterPos.copy(props.controls.target)\n    charachterPos.setY(charachterPos.y - 3)\n\n    this.coins.forEach(coin => {\n      //COLLISION\n      const distance = coin.position.distanceTo(charachterPos)\n\n      if (distance < 5) {\n        var shownSprite = this.sprites[Math.round(Math.random() * (this.sprites.length - 1))]\n        shownSprite.position.copy(charachterPos)\n        shownSprite.position.setY(shownSprite.position.y + 4)\n\n        this.registerTransition({\n          variable: shownSprite.position,\n          value: new THREE.Vector3(shownSprite.position.x, shownSprite.position.y + 3, shownSprite.position.z),\n          numberOfFrames: 25,\n          timingFuntion: 'easeOutQuad',\n          onComplete: () => shownSprite.position.setY(ArenaRadius * 2),\n        })\n\n        this.emmitCoin(coin)\n      }\n\n      //FALL AND ROTATION\n      dummy.position.copy(coin.position)\n      dummy.scale.copy(coin.scale)\n      switch ((coin.index) % 3) {\n        case 0:\n          dummy.rotation.x = (coin.index * 1000 + props.frameNumber * 100) / props.maxFrameNumber * Math.PI\n          break\n        case 1:\n          dummy.rotation.y = (coin.index * 1000 + props.frameNumber * 100) / props.maxFrameNumber * Math.PI\n          break\n        case 2:\n          dummy.rotation.z = (coin.index * 1000 + props.frameNumber * 100) / props.maxFrameNumber * Math.PI\n          break\n      }  \n\n      dummy.updateMatrix()\n      this.coinInstance.setMatrixAt(coin.index, dummy.matrix)\n    })\n    this.coinInstance.instanceMatrix.needsUpdate = true\n  }\n\n\n  emmitCoin = coin => {\n    coin.position.copy(coinInitialPos())\n    coin.scale.copy(initialScale)\n\n    this.unregisterTransition(coin.transitionId)\n\n    coin.transitionId = this.registerTransition({\n      variable: coin.position,\n      value: (new THREE.Vector3()).copy(coin.position).setY(1),\n      numberOfFrames: Math.round((.25 + Math.random()) * 250),\n      onComplete: () => {\n        coin.transitionId = this.registerTransition({\n          variable: coin.scale,\n          value: finalScale,\n          numberOfFrames: 150,\n          timingFuntion: 'easeInQuad',\n          onComplete: () => this.emmitCoin(coin)\n        })\n      }\n    })\n\n    dummy.position.copy(coin.position)\n    dummy.scale.copy(coin.scale)\n    dummy.updateMatrix()\n    this.coinInstance.setMatrixAt(coin.index, dummy.matrix)\n    this.coinInstance.instanceMatrix.needsUpdate = true\n  }\n}\n","import Unit from 'libs/engines/3d/Unit'\n\n\nconst lightDistanceToModel = 15\n\n\nexport default class Lowpoly extends Unit {\n  constructor(props) {\n    super(props)\n\n    const { scene, THREE } = props\n\n    this.light0 = new THREE.HemisphereLight( 0xffffff, 0x444444, 1.25 )\n    this.light0.position.set( 0, lightDistanceToModel, 0 )\n    scene.add( this.light0 )\n\n    // this.light1 = new THREE.HemisphereLight( 0xffffff, 0x444444, 0.95 )\n    // this.light1.position.set( 0, -lightDistanceToModel, 0 )\n    // scene.add( this.light1 )\n    \n    this.light2 = new THREE.DirectionalLight( 0xee55ee, 2.95 )\n    this.light2.position.set( lightDistanceToModel, 7, 0 )\n    // this.light2.castShadow = true\n    scene.add( this.light2 )\n\n    this.light3 = new THREE.DirectionalLight( 0x77bbee, 2.95 )\n    this.light3.position.set( lightDistanceToModel * Math.cos(Math.PI * 2 / 3), 7, lightDistanceToModel * Math.sin(Math.PI * 2 / 3) )\n    // this.light3.castShadow = true\n    scene.add( this.light3 )\n\n    // this.light4 = new THREE.DirectionalLight( 0x0088ff, 2.95 )\n    // this.light4.position.set( lightDistanceToModel * Math.cos(Math.PI * 4 / 3), 3, lightDistanceToModel * Math.sin(Math.PI * 4 / 3) )\n    // this.light4.castShadow = true\n    // scene.add( this.light4 )\n  }\n\n  animate = props => {\n    const angle2 = props.frameNumber * 10 / props.maxFrameNumber * Math.PI * 2\n    const angle3 = angle2 + Math.PI * 2 / 3\n    // const angle4 = angle3 + Math.PI * 2 / 3\n    const cos2 = Math.cos(angle2)\n    const cos3 = Math.cos(angle3)\n    // const cos4 = Math.cos(angle4)\n\n    this.light2.position.set(lightDistanceToModel * cos2, 3, lightDistanceToModel * ((1 - cos2 * cos2) ** .5))\n    this.light3.position.set(lightDistanceToModel * cos3, 3, lightDistanceToModel * ((1 - cos3 * cos3) ** .5))\n    // this.light4.position.set(lightDistanceToModel * cos4, 3, lightDistanceToModel * ((1 - cos4 * cos4) ** .5))\n  }\n\n  dispose = () => {}\n}\n","import Unit from 'libs/engines/3d/Unit'\n\n\nexport default class Fog extends Unit {\n  constructor(props) {\n    super(props)\n\n    const { scene, THREE } = props\n\n    this.fog = new THREE.Fog(0x444444, 35, 155)\n    scene.fog = this.fog\n  }\n\n  animate = props => {}\n  dispose = () => {}\n}\n","import THREE from 'libs/engines/3d/three'\nimport Unit from 'libs/engines/3d/Unit'\nimport nipplejs from 'nipplejs'\nimport clamp from 'clamp'\nimport isTouchDevice from 'libs/utils/isTouchDevice'\n\n\nconst yAxis = new THREE.Vector3(0, 1, 0)\n\nconst initialThis = {\n  // scroll: {\n  //   alphaX: 0,\n  //   alphaY: 0,\n  // },\n  mouse: {\n    alphaX: 0,\n    alphaY: 0,\n  },\n\n  move: new THREE.Vector3(),\n  moveFlags: {\n    up: [\n      {\n        code: 87,\n        pressed: false,\n      },\n      {\n        code: 38,\n        pressed: false,\n      }\n    ],\n    down: [\n      {\n        code: 83,\n        pressed: false,\n      },\n      {\n        code: 40,\n        pressed: false,\n      }\n    ],\n    left: [\n      {\n        code: 68,\n        pressed: false,\n      },\n      {\n        code: 39,\n        pressed: false,\n      }\n    ],\n    right: [\n      {\n        code: 65,\n        pressed: false,\n      },\n      {\n        code: 37,\n        pressed: false,\n      }\n    ],\n  }\n}\n\n\nexport default class Controls extends Unit {\n  constructor(props) {\n    super(props)\n\n    Object.keys(initialThis)\n      .forEach(key => this[key] = initialThis[key])\n\n    if (isTouchDevice()) {  \n      // this.handleScroll()\n      // this.scrollUpdateInterval = setInterval(() => this.handleScroll(), 5)\n    }\n    else {\n      window.addEventListener('mousemove', this.handleMouseMove, false)\n      window.addEventListener('keydown', this.handleKeyDown, false)\n      window.addEventListener('keyup', this.handleKeyUp, false)\n    }\n  }\n\n  init = () => {\n    const zoneJoystick = document.getElementById('zone-joystick')\n    var options = {\n      zone: zoneJoystick,\n      mode: 'static',\n      position: {\n        x: Math.round(window.innerWidth / 4 * 3),\n        y: Math.round(window.innerHeight / 5 * 4),\n      },\n      // size: 200,\n    }\n    this.joystickManager = nipplejs.create(options)\n\n    this.joystickManager[0].on('move', (e, data) => {\n      this.move.set(-data.force / 7, 0, 0)\n        .applyAxisAngle(yAxis, data.angle.radian)\n    })\n    this.joystickManager[0].on('end', e => {\n      this.move.set(0, 0, 0)\n    })\n  }\n\n  // handleScroll = e => {\n  //   const threeSceneElement = document.getElementById(\"three-scene\")\n  //   const getBodyScrollTop = () => Math.max(-threeSceneElement.getBoundingClientRect().top, 0)\n\n  //   this.scroll.alphaY = clamp(getBodyScrollTop() / threeSceneElement.offsetHeight * .5, 0, .5)\n  // }\n\n  animate = props => {\n    const getDirectionState = direction =>\n      direction\n        .map(key => key.pressed)\n        .reduce((a, b) => a || b)\n      ? 1 : 0\n\n    if (!isTouchDevice())\n      this.move\n        .set(\n          getDirectionState(this.moveFlags.right) - getDirectionState(this.moveFlags.left),\n          0,\n          getDirectionState(this.moveFlags.up) - getDirectionState(this.moveFlags.down))\n        .normalize()\n        .multiplyScalar(.35)\n  }\n\n  \n  handleMouseMove = e => {\n    if (!e.pageX || !e.pageY) {\n      console.log(\"no mouse found\")\n      return\n    }\n  \n    this.mouse.alphaX = -clamp(e.pageX / window.innerWidth - .5, -.5, .5)\n    this.mouse.alphaY = clamp(e.pageY / window.innerHeight - .5, -.5, .5)\n  }\n\n  handleKeyDown = e =>\n    Object.keys(this.moveFlags)\n      .forEach(direction =>\n        this.moveFlags[direction]\n          .forEach(key =>\n            key.pressed |= (key.code === e.keyCode)))\n\n  handleKeyUp = e =>\n    Object.keys(this.moveFlags)\n      .forEach(direction =>\n        this.moveFlags[direction]\n          .forEach(key =>\n            key.pressed &= !(key.code === e.keyCode)))\n\n\n  dispose = () => {\n    if (isTouchDevice())\n      ;\n      // clearInterval(this.scrollUpdateInterval)\n    else\n      window.removeEventListener('mousemove', this.handleMouseMove, false)\n  }\n}\n","/**\n * @author spidersharma / http://eduperiment.com/\n */\n\nimport {\n\tAdditiveBlending,\n\tColor,\n\tLinearFilter,\n\tMeshBasicMaterial,\n\tRGBAFormat,\n\tShaderMaterial,\n\tUniformsUtils,\n\tVector2,\n\tVector3,\n\tWebGLRenderTarget\n} from \"three\";\nimport { Pass } from \"three/examples/jsm/postprocessing/Pass.js\";\nimport { CopyShader } from \"three/examples/jsm/shaders/CopyShader.js\";\nimport { LuminosityHighPassShader } from \"three/examples/jsm/shaders/LuminosityHighPassShader.js\";\n\n/**\n * UnrealBloomPass is inspired by the bloom pass of Unreal Engine. It creates a\n * mip map chain of bloom textures and blurs them with different radii. Because\n * of the weighted combination of mips, and because larger blurs are done on\n * higher mips, this effect provides good quality and performance.\n *\n * Reference:\n * - https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\n */\nvar UnrealBloomPass = function ( resolution, strength, radius, threshold ) {\n\n\tPass.call( this );\n\n\tthis.strength = ( strength !== undefined ) ? strength : 1;\n\tthis.radius = radius;\n\tthis.threshold = threshold;\n\tthis.resolution = ( resolution !== undefined ) ? new Vector2( resolution.x, resolution.y ) : new Vector2( 256, 256 );\n\n\t// create color only once here, reuse it later inside the render function\n\tthis.clearColor = new Color( 0, 0, 0 );\n\n\t// render targets\n\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\tthis.renderTargetsHorizontal = [];\n\tthis.renderTargetsVertical = [];\n\tthis.nMips = 5;\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tthis.renderTargetBright = new WebGLRenderTarget( resx, resy, pars );\n\tthis.renderTargetBright.texture.name = \"UnrealBloomPass.bright\";\n\tthis.renderTargetBright.texture.generateMipmaps = false;\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tvar renderTargetHorizonal = new WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetHorizonal.texture.name = \"UnrealBloomPass.h\" + i;\n\t\trenderTargetHorizonal.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsHorizontal.push( renderTargetHorizonal );\n\n\t\tvar renderTargetVertical = new WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetVertical.texture.name = \"UnrealBloomPass.v\" + i;\n\t\trenderTargetVertical.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsVertical.push( renderTargetVertical );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// luminosity high pass material\n\n\tif ( LuminosityHighPassShader === undefined )\n\t\tconsole.error( \"UnrealBloomPass relies on LuminosityHighPassShader\" );\n\n\tvar highPassShader = LuminosityHighPassShader;\n\tthis.highPassUniforms = UniformsUtils.clone( highPassShader.uniforms );\n\n\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = threshold;\n\tthis.highPassUniforms[ \"smoothWidth\" ].value = 0.01;\n\n\tthis.materialHighPassFilter = new ShaderMaterial( {\n\t\tuniforms: this.highPassUniforms,\n\t\tvertexShader: highPassShader.vertexShader,\n\t\tfragmentShader: highPassShader.fragmentShader,\n\t\tdefines: {}\n\t} );\n\n\t// Gaussian Blur Materials\n\tthis.separableBlurMaterials = [];\n\tvar kernelSizeArray = [ 3, 5, 7, 9, 11 ];\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tthis.separableBlurMaterials.push( this.getSeperableBlurMaterial( kernelSizeArray[ i ] ) );\n\n\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new Vector2( resx, resy );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// Composite material\n\tthis.compositeMaterial = this.getCompositeMaterial( this.nMips );\n\tthis.compositeMaterial.uniforms[ \"blurTexture1\" ].value = this.renderTargetsVertical[ 0 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture2\" ].value = this.renderTargetsVertical[ 1 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture3\" ].value = this.renderTargetsVertical[ 2 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture4\" ].value = this.renderTargetsVertical[ 3 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture5\" ].value = this.renderTargetsVertical[ 4 ].texture;\n\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = strength;\n\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = 0.1;\n\tthis.compositeMaterial.needsUpdate = true;\n\n\tvar bloomFactors = [ 1.0, 0.8, 0.6, 0.4, 0.2 ];\n\tthis.compositeMaterial.uniforms[ \"bloomFactors\" ].value = bloomFactors;\n\tthis.bloomTintColors = [ new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ),\n\t\t\t\t\t\t\t new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ) ];\n\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\n\n\t// copy material\n\tif ( CopyShader === undefined ) {\n\n\t\tconsole.error( \"UnrealBloomPass relies on CopyShader\" );\n\n\t}\n\n\tvar copyShader = CopyShader;\n\n\tthis.copyUniforms = UniformsUtils.clone( copyShader.uniforms );\n\tthis.copyUniforms[ \"opacity\" ].value = 1.0;\n\n\tthis.materialCopy = new ShaderMaterial( {\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: AdditiveBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\n\tthis.oldClearColor = new Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.basic = new MeshBasicMaterial();\n\n\tthis.fsQuad = new Pass.FullScreenQuad( null );\n\n};\n\nUnrealBloomPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: UnrealBloomPass,\n\n\tdispose: function () {\n\n\t\tfor ( var i = 0; i < this.renderTargetsHorizontal.length; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].dispose();\n\n\t\t}\n\n\t\tfor ( var i = 0; i < this.renderTargetsVertical.length; i ++ ) {\n\n\t\t\tthis.renderTargetsVertical[ i ].dispose();\n\n\t\t}\n\n\t\tthis.renderTargetBright.dispose();\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar resx = Math.round( width / 2 );\n\t\tvar resy = Math.round( height / 2 );\n\n\t\tthis.renderTargetBright.setSize( resx, resy );\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].setSize( resx, resy );\n\t\t\tthis.renderTargetsVertical[ i ].setSize( resx, resy );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new Vector2( resx, resy );\n\n\t\t\tresx = Math.round( resx / 2 );\n\t\t\tresy = Math.round( resy / 2 );\n\n\t\t}\n\n\t},\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( this.clearColor, 0 );\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( false );\n\n\t\t// Render input to screen\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\tthis.fsQuad.material = this.basic;\n\t\t\tthis.basic.map = readBuffer.texture;\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// 1. Extract Bright Areas\n\n\t\tthis.highPassUniforms[ \"tDiffuse\" ].value = readBuffer.texture;\n\t\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = this.threshold;\n\t\tthis.fsQuad.material = this.materialHighPassFilter;\n\n\t\trenderer.setRenderTarget( this.renderTargetBright );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// 2. Blur All the mips progressively\n\n\t\tvar inputRenderTarget = this.renderTargetBright;\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.fsQuad.material = this.separableBlurMaterials[ i ];\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = inputRenderTarget.texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = UnrealBloomPass.BlurDirectionX;\n\t\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = this.renderTargetsHorizontal[ i ].texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = UnrealBloomPass.BlurDirectionY;\n\t\t\trenderer.setRenderTarget( this.renderTargetsVertical[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tinputRenderTarget = this.renderTargetsVertical[ i ];\n\n\t\t}\n\n\t\t// Composite All the mips\n\n\t\tthis.fsQuad.material = this.compositeMaterial;\n\t\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = this.strength;\n\t\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = this.radius;\n\t\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\n\n\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ 0 ] );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// Blend it additively over the input texture\n\n\t\tthis.fsQuad.material = this.materialCopy;\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetsHorizontal[ 0 ].texture;\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( true );\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( readBuffer );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// Restore renderer settings\n\n\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t},\n\n\tgetSeperableBlurMaterial: function ( kernelRadius ) {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"KERNEL_RADIUS\": kernelRadius,\n\t\t\t\t\"SIGMA\": kernelRadius\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"colorTexture\": { value: null },\n\t\t\t\t\"texSize\": { value: new Vector2( 0.5, 0.5 ) },\n\t\t\t\t\"direction\": { value: new Vector2( 0.5, 0.5 ) }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"#include <common>\\\n\t\t\t\tvarying vec2 vUv;\\n\\\n\t\t\t\tuniform sampler2D colorTexture;\\n\\\n\t\t\t\tuniform vec2 texSize;\\\n\t\t\t\tuniform vec2 direction;\\\n\t\t\t\t\\\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\n\t\t\t\t}\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\n\t\t\t\t\tfloat fSigma = float(SIGMA);\\\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\n\t\t\t\t\t\tfloat x = float(i);\\\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\\\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\\\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\\\n\t\t\t\t\t\tweightSum += 2.0 * w;\\\n\t\t\t\t\t}\\\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 0.1);\\n\\\n\t\t\t\t}\"\n\t\t} );\n\n\t},\n\n\tgetCompositeMaterial: function ( nMips ) {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"NUM_MIPS\": nMips\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"blurTexture1\": { value: null },\n\t\t\t\t\"blurTexture2\": { value: null },\n\t\t\t\t\"blurTexture3\": { value: null },\n\t\t\t\t\"blurTexture4\": { value: null },\n\t\t\t\t\"blurTexture5\": { value: null },\n\t\t\t\t\"dirtTexture\": { value: null },\n\t\t\t\t\"bloomStrength\": { value: 1.0 },\n\t\t\t\t\"bloomFactors\": { value: null },\n\t\t\t\t\"bloomTintColors\": { value: null },\n\t\t\t\t\"bloomRadius\": { value: 0.0 }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"varying vec2 vUv;\\\n\t\t\t\tuniform sampler2D blurTexture1;\\\n\t\t\t\tuniform sampler2D blurTexture2;\\\n\t\t\t\tuniform sampler2D blurTexture3;\\\n\t\t\t\tuniform sampler2D blurTexture4;\\\n\t\t\t\tuniform sampler2D blurTexture5;\\\n\t\t\t\tuniform sampler2D dirtTexture;\\\n\t\t\t\tuniform float bloomStrength;\\\n\t\t\t\tuniform float bloomRadius;\\\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\n\t\t\t\t\\\n\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\n\t\t\t\t}\\\n\t\t\t\t\\\n\t\t\t\tvoid main() {\\\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\n\t\t\t\t}\"\n\t\t} );\n\n\t}\n\n} );\n\nUnrealBloomPass.BlurDirectionX = new Vector2( 1.0, 0.0 );\nUnrealBloomPass.BlurDirectionY = new Vector2( 0.0, 1.0 );\n\nexport { UnrealBloomPass };\n","import { UnrealBloomPass } from './customUnrealBloomPass'\nimport Unit from 'libs/engines/3d/Unit'\n\n\nexport default class BloomPostprocessing extends Unit {\n  constructor(props) {\n    super(props)\n\n    const {\n      renderer,\n      composer,\n      THREE,\n    } = props\n\n    this.params = [\n      .5,\n      1,\n      1,\n    ]\n    this.pass = new UnrealBloomPass(\n      new THREE.Vector2(renderer.getSize(new THREE.Vector2()).x, renderer.getSize(new THREE.Vector2()).y),\n      ...this.params\n    )\n    composer.addPass(this.pass)\n  }\n\n  animate = props => {\n    this.pass.strength = this.params[0]\n    this.pass.radius = this.params[1]\n    this.pass.threshold = this.params[2]\n  }\n  dispose = () => {}\n}\n","import React, { Component } from 'react'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nimport Scene from 'libs/engines/3d/Scene'\nimport Character from 'libs/engines/3d/units/Character'\nimport Landscape from 'libs/engines/3d/units/Landscape'\nimport Coins from 'libs/engines/3d/units/Coins'\nimport Lights from 'libs/engines/3d/units/Lights'\nimport Fog from 'libs/engines/3d/units/Fog'\nimport Controls from 'libs/engines/3d/units/Controls'\nimport VignettePostprocessing from 'libs/engines/3d/units/VignettePostprocessing'\nimport FilmGrainPostprocessing from 'libs/engines/3d/units/FilmGrainPostprocessing'\nimport BloomPostprocessing from 'libs/engines/3d/units/BloomPostprocessing'\n// import EasterEgg from 'libs/engines/3d/units/EasterEgg'\n\n\nexport default class ThreeScene extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      FilmGrainPostprocessing: true,\n      BloomPostprocessing: true,\n      VignettePostprocessing: true,\n\n      params: [0, 0, 0]\n    }\n\n    this.viewerRef = new React.createRef()\n\n    this.scene = new Scene({\n      units: {\n        Character: {\n          unit: Character,\n          disabled: false,\n        },\n        Landscape: {\n          unit: Landscape,\n          disabled: false,\n        },\n        Coins: {\n          unit: Coins,\n          disabled: false,\n        },\n        Lights: {\n          unit: Lights,\n          disabled: false,\n        },\n        Fog: {\n          unit: Fog,\n          disabled: false,\n        },\n        Controls: {\n          unit: Controls,\n          disabled: false,\n        },\n        // FilmGrainPostprocessing: {\n        //   unit: FilmGrainPostprocessing,\n        //   disabled: false,\n        // },\n        BloomPostprocessing: {\n          unit: BloomPostprocessing,\n          disabled: false,\n        },\n        // VignettePostprocessing: {\n        //   unit: VignettePostprocessing,\n        //   disabled: false,\n        // },\n        // EasterEgg: {\n        //   unit: EasterEgg,\n        //   disabled: false,\n        // },\n      }\n    })\n  }\n\n  componentDidMount() {\n    this.resizeObs = new ResizeObserver(this.resize.bind(this))\n      .observe(this.viewerRef.current)\n\n    this.scene.init(this.viewerRef.current)\n\n    setTimeout(() => this.setState({params: this.scene.scene.units.BloomPostprocessing.params}), 1250)\n  }\n\n  componentWillUnmount = () => {\n    this.scene.dispose()\n    // this.viewerRef.removeChild(this.renderer.domElement)\n  }\n\n  resize() {\n    const ViewerDiv = this.viewerRef && this.viewerRef.current\n    \n    if (!ViewerDiv)\n      return\n\n    this.scene.resize(ViewerDiv.clientWidth, ViewerDiv.clientHeight)\n  }\n\n  render = () =>\n    <>\n      <div\n        className=\"Viewer\"\n        ref={this.viewerRef}\n      >\n        <div id=\"zone-joystick\" />\n      </div>\n      <div className=\"buttons\">\n        {/* {Object.keys(this.state).map((key, index) =>\n          <div\n            className=\"buttons__item\"\n            onClick={() => {\n              // this.scene.toggleUnit(key)\n              this.scene.scene.composer.passes[index + 1].enabled = !this.state[key]\n              this.setState({[key]: !this.state[key]})\n            }}\n          >\n            {key} {this.state[key] ? \"on\" : \"off\"}\n          </div>\n        )} */}\n        {this.scene.scene.units.BloomPostprocessing &&\n          this.scene.scene.units.BloomPostprocessing.params.map((param, index) =>\n            <input\n              className=\"buttons__item\"\n              value={this.state.params[index]}\n              onChange={e => {\n                this.scene.scene.units.BloomPostprocessing.params[index] = e.target.value\n                let newParams = this.state.params.slice()\n                newParams[index] = e.target.value\n\n                this.setState({params: this.scene.scene.units.BloomPostprocessing.params})\n              }}\n            />\n        )}\n      </div>\n    </>\n}\n","import React, { Component } from 'react'\n\n\nexport default class TextArea extends Component {\n  constructor(props) {\n    super(props)\n  }\n  \n  render = () =>\n    <div className=\"text-area\">\n      <div className=\"text-area__left-column\">\n        <div className=\"text-area__left-column__text\">\n          что голодная смерть британца в тяжёлой депрессии может рассказать нам о том, как мы распоряжаемся ресурсами и будем распоряжаться ими в будущем? что такое безусловный базовый доход? как изменится ваша жизнь, получай вы каждый месяц зарплату только за то, что живёте? \n        </div>\n      </div>\n      <div className=\"text-area__right-column\">\n        <h1 className=\"h1\">\n          SITTING&nbsp;IN&nbsp;A<br />\n          ROOM.&nbsp;I&nbsp;AM.\n        </h1>\n      </div>\n    </div>\n}\n\n","import React from 'react'\n\nimport ThreeScene from './components/ThreeScene'\nimport TextArea from './components/TextArea'\n\nimport 'styles/index.sass'\n\n\nconst App = () =>\n  <>\n    <ThreeScene/>\n    <TextArea/>\n  </>\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}