{"version":3,"sources":["libs/engines/3d/models/Astronaut.glb","libs/engines/3d/models/tree.glb","libs/engines/3d/textures/blackgrid.jpg","libs/engines/3d/models/coin.glb","libs/engines/3d/three.js","libs/engines/3d/Unit.js","libs/utils/handlers/transitionHandler/timingFunctions.js","libs/utils/handlers/transitionHandler/index.js","libs/utils/isTouchDevice.js","libs/utils/handlers/inputHandler.js","libs/engines/3d/Scene.js","libs/engines/3d/modelLoader.js","libs/engines/3d/units/Character.js","libs/engines/3d/textureLoader.js","libs/engines/3d/units/Landscape.js","libs/engines/3d/units/Coins.js","libs/engines/3d/units/Lights.js","libs/engines/3d/units/Fog.js","libs/engines/3d/units/BloomPostprocessing/customUnrealBloomPass.js","libs/engines/3d/units/BloomPostprocessing/index.js","components/ThreeScene.js","components/TextArea.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","window","THREE","Unit","props","animate","frame","dispose","this","fns","t","k","easeIn","easeOut","easeInOut","TransitionsHandler","animateTransitions","unregisteredTransitions","transitions","forEach","transition","index","currentFrame","numberOfFrames","push","alpha","timingFuntion","timingFuntions","variable","copy","initialValue","clone","lerp","value","transitionIndex","onComplete","slice","registerTransition","unregisterAllTransitions","length","noActiveTransitions","document","createEvent","e","inputVariables","mouse","alphaX","alphaY","moveFlags","up","code","pressed","down","left","right","sceneVariables","renderer","undefined","camera","scene","Scene","composer","controls","clock","Clock","frameNumber","units","unitsToggled","init","ViewerDiv","inputHandlerInit","W","clientWidth","H","clientHeight","WebGLRenderer","antialias","setClearColor","setSize","setPixelRatio","devicePixelRatio","shadowMap","enabled","appendChild","domElement","PerspectiveCamera","OrbitControls","position","z","update","EffectComposer","addPass","RenderPass","initUnits","frameId","requestAnimationFrame","disposeUnits","cancelAnimationFrame","resize","aspect","updateProjectionMatrix","Object","keys","unitName","input","maxFrameNumber","render","unit","disabled","children","remove","toggleUnits","classes","transitionHandler","options","zone","getElementById","mode","x","Math","round","innerWidth","y","innerHeight","joystickManager","nipplejs","create","processOnMove","move","set","offsetX","offsetY","processOnEnd","handleMouseMove","pageX","pageY","clamp","console","log","handleKeyDown","direction","key","keyCode","handleKeyUp","isTouchDevice","removeEventListener","addEventListener","model","a","Promise","res","rej","GLTFLoader","load","gltf","progress","loaded","total","error","minPosition","Vector3","maxPosition","xAxis","yAxis","nextPos","cameraAngle","Vector2","cameraToTarget","modelQuaternion","Quaternion","Character","loadModel","modelLoader","AstronautModel","add","scale","setY","PI","updateMove","applyAxisAngle","collisionFlag","trees","Landscape","i","distanceTo","quaternion","slerp","setFromAxisAngle","target","getDirectionState","map","reduce","b","setX","setZ","file","TextureLoader","texture","textureLoader","planeTextureImage","planeTexture","wrapS","RepeatWrapping","wrapT","repeat","plane","Mesh","PlaneGeometry","MeshBasicMaterial","side","DoubleSide","rotateX","treeModel","treeMesh","dummy","Object3D","treePos","treeInstance","InstancedMesh","geometry","material","instanceMatrix","setUsage","DynamicDrawUsage","randomX","max","random","sign","randomZ","ArenaRadius","rotation","updateMatrix","setMatrixAt","matrix","needsUpdate","charachterPos","coinInitialPos","Coins","coinModel","coinMesh","coinInstance","emmitCoin","coins","coin","emitted","shownSprite","sprites","clearTimeout","emmitCoinTimeout","hiddenCoins","filter","coinAmount","coinToEmmit","setTimeout","text","sprite","TextSprite","color","redrawInterval","textSize","minFontSize","maxFontSize","Array","from","Lowpoly","angle2","angle3","cos2","cos","cos3","light2","light3","light0","HemisphereLight","DirectionalLight","castShadow","sin","Fog","fog","UnrealBloomPass","resolution","strength","radius","threshold","Pass","call","clearColor","Color","pars","minFilter","LinearFilter","magFilter","format","RGBAFormat","renderTargetsHorizontal","renderTargetsVertical","nMips","resx","resy","renderTargetBright","WebGLRenderTarget","name","generateMipmaps","renderTargetHorizonal","renderTargetVertical","LuminosityHighPassShader","highPassShader","highPassUniforms","UniformsUtils","uniforms","materialHighPassFilter","ShaderMaterial","vertexShader","fragmentShader","defines","separableBlurMaterials","kernelSizeArray","getSeperableBlurMaterial","compositeMaterial","getCompositeMaterial","bloomTintColors","CopyShader","copyShader","copyUniforms","materialCopy","blending","AdditiveBlending","depthTest","depthWrite","transparent","needsSwap","oldClearColor","oldClearAlpha","basic","fsQuad","FullScreenQuad","prototype","assign","constructor","width","height","writeBuffer","readBuffer","deltaTime","maskActive","getClearColor","getClearAlpha","oldAutoClear","autoClear","state","buffers","stencil","setTest","renderToScreen","setRenderTarget","clear","inputRenderTarget","BlurDirectionX","BlurDirectionY","kernelRadius","BloomPostprocessing","pass","params","getSize","ThreeScene","componentWillUnmount","className","ref","viewerRef","id","check","param","onChange","setState","FilmGrainPostprocessing","VignettePostprocessing","React","createRef","Lights","resizeObs","ResizeObserver","bind","observe","current","Component","TextArea","App","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c7de0f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Astronaut.f3152ab1.glb\";","module.exports = __webpack_public_path__ + \"static/media/tree.46613934.glb\";","module.exports = __webpack_public_path__ + \"static/media/blackgrid.3d7d5793.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coin.e8a0d624.glb\";","import * as THREE from 'three'\n\nwindow.THREE = THREE\n\nexport default THREE","export default class Unit {\n  constructor(props) { this.props = props }\n  animate = frame => {}\n  dispose = () => {}\n}","let fns = {}\n\nfns.linear = t => t\nfns.easeInQuad = t => t * t\nfns.easeOutQuad = t => t * (2 - t)\nfns.easeInOutQuad = t => t < .5 ? 2 * (t ** 2) : -1 + (4 - 2 * t) * t\nfns.easeInCubic = t => t * t * t\nfns.easeOutCubic = t => (--t) * t * t + 1\nfns.easeInOutCubic = t => t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\nfns.easeInQuart = t => t * t * t * t\nfns.easeOutQuart = t => 1-(--t) * t * t * t\nfns.easeInOutQuart = t => t < .5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t\nfns.easeInQuint = t => t * t * t * t * t\nfns.easeOutQuint = t => 1 + (--t) * t * t * t * t\nfns.easeInOutQuint = t => t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t\n\nfns.easeIn = (t, k) => (t ** k)\nfns.easeOut = (t, k) => 1 - fns.easeIn(1 - t, k)\nfns.easeInOut = (t, k) => t < .5 ?\n  fns.easeIn(t * 2, k) / 2\n  :\n  1 - fns.easeIn((1 - t) * 2, k) / 2\n\nfns.easeIn2 = t => fns.easeIn(t, 1.5)\nfns.easeOut2 = t => fns.easeOut(t, 1.5)\nfns.easeInOut2 = t => fns.easeInOut(t, 1.5)\n\n\nexport default fns","import Unit from 'libs/engines/3d/Unit'\n\nimport timingFuntions from './timingFunctions'\n\nexport default class TransitionsHandler extends Unit {\n  constructor(props) {\n    super(props)\n    this.transitions = []\n  }\n\n  animateTransitions = () => {\n    let unregisteredTransitions = []\n    this.transitions.forEach((transition, index) => {\n      if (transition.currentFrame === transition.numberOfFrames)\n        unregisteredTransitions.push(index)\n      else {\n        // const alpha = 1 / (transition.numberOfFrames - transition.currentFrame)\n        const alpha = transition.currentFrame / transition.numberOfFrames\n        const timingFuntion = timingFuntions[transition.timingFuntion] || (t => t)\n\n        transition.variable.copy(transition.initialValue\n          .clone()\n          .lerp(transition.value, timingFuntion(alpha)))\n\n        transition.currentFrame++\n      }\n    })\n    unregisteredTransitions.forEach(transitionIndex => {\n      this.transitions[transitionIndex] && this.transitions[transitionIndex].onComplete()\n\n      this.transitions = [\n        ...this.transitions.slice(0, transitionIndex),\n        ...this.transitions.slice(transitionIndex + 1)\n      ]\n    })\n  }\n\n  registerTransition = props => {\n    this.transitions.push({\n      variable: props.variable,\n      value: props.value,\n      initialValue: props.variable.clone(),\n      numberOfFrames: props.numberOfFrames || 10,\n      currentFrame: 0,\n      timingFuntion: props.timingFuntion || \"none\",\n      onComplete: props.onComplete || (() => {}),\n    })\n  }\n\n  unregisterAllTransitions = () => this.transitions.length = 0\n\n  noActiveTransitions = () => this.transitions.length === 0\n\n}","export default () => {\n  try {  \n    document.createEvent(\"TouchEvent\")  \n    return true  \n  } catch (e) {  \n    return false  \n  }  \n}\n","import MouseSpeed from 'mouse-speed'\nimport nipplejs from 'nipplejs'\nimport clamp from 'clamp'\nimport THREE from 'libs/engines/3d/three'\nimport isTouchDevice from 'libs/utils/isTouchDevice'\n\n\nvar inputVariables = {\n  // scroll: {\n  //   alphaX: 0,\n  //   alphaY: 0,\n  // },\n  mouse: {\n    alphaX: 0,\n    alphaY: 0,\n  },\n  moveFlags: {\n    up: [\n      {\n        code: 87,\n        pressed: false,\n      },\n      {\n        code: 38,\n        pressed: false,\n      }\n    ],\n    down: [\n      {\n        code: 83,\n        pressed: false,\n      },\n      {\n        code: 40,\n        pressed: false,\n      }\n    ],\n    left: [\n      {\n        code: 68,\n        pressed: false,\n      },\n      {\n        code: 39,\n        pressed: false,\n      }\n    ],\n    right: [\n      {\n        code: 65,\n        pressed: false,\n      },\n      {\n        code: 37,\n        pressed: false,\n      }\n    ],\n  }\n  // cameraAngle: new THREE.Vector2(0, 0),\n  // move: new THREE.Vector3(0, 0, 0),\n}\n\n\nexport default class inputHandler {\n  constructor(props) {\n    this.props = props\n\n    this.input = inputVariables\n\n    if (isTouchDevice()) {  \n      // this.handleScroll()\n      // this.scrollUpdateInterval = setInterval(() => this.handleScroll(), 5)\n    }\n    else {\n      window.addEventListener('mousemove', this.handleMouseMove, false)\n      // this.speed = new MouseSpeed()\n      // this.speed.init(() => {\n      //   this.input.cameraAngle.setX((this.input.cameraAngle.x - Math.sign(this.speed.speedX) * Math.abs(this.speed.speedX) ** 1.5 / window.innerWidth / 2) % (Math.PI * 2))\n      //   this.input.cameraAngle.setY(clamp(this.input.cameraAngle.y + Math.sign(this.speed.speedY) * Math.abs(this.speed.speedY) ** 1.5 / window.innerHeight / 2, 0, Math.PI / 4))\n      // })\n\n      window.addEventListener('keydown', this.handleKeyDown, false)\n      window.addEventListener('keyup', this.handleKeyUp, false)\n    }\n  }\n\n  inputHandlerInit = () => {\n    const zoneJoystick = document.getElementById('zone-joystick')\n    var options = {\n      zone: zoneJoystick,\n      mode: 'static',\n      position: {\n        x: Math.round(window.innerWidth / 4 * 3),\n        y: Math.round(window.innerHeight / 5 * 4),\n      },\n      // size: 200,\n    }\n    this.joystickManager = nipplejs.create(options)\n\n    this.joystickManager.processOnMove = e => this.input.move.set(-e.offsetX / 1000, 0, -e.offsetY / 1000)\n    this.joystickManager.processOnEnd = e => this.input.move.set(0, 0, 0)\n\n    // this.joystickManager.on('added', (e, nipple) => {\n    //   nipple.on('start move end dir plain', e => {\n    //     console.log(e)\n    //     console.log(nipple)\n    //     // this.move.set()\n    //   })\n    // }).on('removed', (e, nipple) => {\n    //   nipple.off('start move end dir plain')\n    // })\n  }\n\n  // handleScroll = e => {\n  //   const threeSceneElement = document.getElementById(\"three-scene\")\n  //   const getBodyScrollTop = () => Math.max(-threeSceneElement.getBoundingClientRect().top, 0)\n\n  //   this.scroll.alphaY = clamp(getBodyScrollTop() / threeSceneElement.offsetHeight * .5, 0, .5)\n  // }\n  \n  handleMouseMove = e => {\n    if (!e.pageX || !e.pageY) {\n      console.log(\"no mouse found\")\n      return\n    }\n  \n    this.input.mouse.alphaX = -clamp(e.pageX / window.innerWidth - .5, -.5, .5)\n    this.input.mouse.alphaY = clamp(e.pageY / window.innerHeight - .5, -.5, .5)\n  }\n\n  handleKeyDown = e =>\n    Object.keys(this.input.moveFlags)\n      .forEach(direction =>\n        this.input.moveFlags[direction]\n          .forEach(key =>\n            key.pressed = (key.code === e.keyCode)))\n\n  handleKeyUp = e =>\n    Object.keys(this.input.moveFlags)\n      .forEach(direction =>\n        this.input.moveFlags[direction]\n          .forEach(key =>\n            key.pressed &= !(key.code === e.keyCode)))\n\n\n  dispose = () => {\n    if (isTouchDevice())\n      ;\n      // clearInterval(this.scrollUpdateInterval)\n    else\n      window.removeEventListener('mousemove', this.handleMouseMove, false)\n  }\n}","import THREE from 'libs/engines/3d/three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\nimport classes from 'multiple-extend'\n\nimport transitionHandler from 'libs/utils/handlers/transitionHandler'\nimport inputHandler from 'libs/utils/handlers/inputHandler'\n\n\nconst targetToCamera = -15\nconst maxFrameNumber = 5000\n\nvar sceneVariables = {\n  renderer: undefined,\n  camera: undefined,\n  scene: new THREE.Scene(),\n  composer: undefined,\n  controls: undefined,\n\n  clock: new THREE.Clock(),\n  frameNumber: 0,\n\n  units: {},\n  unitsToggled: false,\n}\n\n\nexport default class Scene extends\n  classes(transitionHandler, inputHandler) {\n\n  constructor(props) {\n    super(props)\n    this.scene = sceneVariables\n  }\n\n  init = ViewerDiv => {\n    this.inputHandlerInit()\n\n    const W = ViewerDiv.clientWidth\n    const H = ViewerDiv.clientHeight\n\n    //ADD RENDERER\n    this.scene.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\n    this.scene.renderer.setClearColor(0x000000, 0)\n    this.scene.renderer.setSize(W, H)\n    this.scene.renderer.setPixelRatio(window.devicePixelRatio)\n    this.scene.renderer.shadowMap.enabled = true\n\n    ViewerDiv.appendChild(this.scene.renderer.domElement)\n\n    //ADD CAMERA\n    this.scene.camera = new THREE.PerspectiveCamera(\n      75,\n      W / H,\n      0.1,\n      1000\n    )\n    this.scene.controls = new OrbitControls(this.scene.camera, this.scene.renderer.domElement)\n    this.scene.controls.enabled = false\n    this.scene.camera.position.z = targetToCamera\n    this.scene.controls.update()\n\n    this.scene.composer = new EffectComposer(this.scene.renderer)\n    this.scene.composer.addPass(new RenderPass(this.scene.scene, this.scene.camera))\n\n    this.initUnits()\n\n    if (!this.frameId)\n      this.frameId = requestAnimationFrame(this.animate)\n  }\n\n  dispose = () => {\n    this.disposeUnits()\n    cancelAnimationFrame(this.frameId)\n  }\n\n  resize = (W, H) => {\n    if (!this.scene.renderer || !this.scene.camera)\n      return\n\n    this.scene.camera.aspect = W / H\n    this.scene.camera.updateProjectionMatrix()\n\n    this.scene.renderer.setSize(W, H)\n    this.scene.renderer.setPixelRatio(window.devicePixelRatio)\n  }\n\n  animate = () => {\n    this.scene.frameNumber = (this.scene.frameNumber + 1) % maxFrameNumber\n\n    const {\n      composer,\n      controls,\n      units,\n    } = this.scene\n\n    Object.keys(units)\n      .forEach(unitName =>\n        units[unitName].animate({\n          THREE: THREE,\n          ...this.scene,\n          input: this.input,\n          maxFrameNumber: maxFrameNumber,\n        }))\n\n    controls.update()\n    composer.render()\n\n    this.frameId = window.requestAnimationFrame(this.animate)\n  }\n\n\n  initUnits = () => {\n    const props = {\n      THREE: THREE,\n      ...this.scene,\n      input: this.input,\n      maxFrameNumber: maxFrameNumber,\n    }\n\n    Object.keys(this.props.units)\n      .forEach(unitName => {\n        const unit = this.props.units[unitName]\n\n        if (!unit.disabled ^ this.scene.unitsToggled)\n        this.scene.units[unitName] = new unit.unit(props)\n      })\n  }\n\n  disposeUnits = () => {\n    const {\n      scene,\n      units,\n    } = this.scene\n\n    Object.keys(units)\n      .forEach(unitName => units[unitName].dispose())\n\n    //REDO THIS SHIT: units should unregister themselves\n    while(scene.children.length > 0)\n      scene.remove(scene.children[0])\n  }\n\n  toggleUnits = () => {\n    this.disposeUnits()\n    this.scene.unitsToggled = !this.scene.unitsToggled\n    this.initUnits()\n  }\n\n  // toggleUnit = unitName => {\n  //   // if (this.scene[unitName].enabled)\n  //   console.log(this.scene.scene.children)\n  // }\n}\n","import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\n\n\nexport default async model =>\n  new Promise((res, rej) =>\n    new GLTFLoader()\n      .load(\n        model,\n        gltf =>\n          res(gltf.scene),\n        progress =>\n          console.log((progress.loaded / progress.total * 100) + '% loaded'),\n        error =>\n          rej(error),\n      )\n  )\n","import clamp from 'clamp'\nimport THREE from 'libs/engines/3d/three'\nimport Unit from 'libs/engines/3d/Unit'\nimport modelLoader from 'libs/engines/3d/modelLoader'\nimport AstronautModel from 'libs/engines/3d/models/Astronaut.glb'\n\n\nconst ArenaRadius = 300\nconst minPosition = new THREE.Vector3(-ArenaRadius, -ArenaRadius, -ArenaRadius)\nconst maxPosition = new THREE.Vector3( ArenaRadius,  ArenaRadius,  ArenaRadius)\nconst xAxis = new THREE.Vector3(1, 0, 0)\nconst yAxis = new THREE.Vector3(0, 1, 0)\n// const zAxis = new THREE.Vector3(0, 0, 1)\n\nvar move = new THREE.Vector3(0, 0, 0)\nvar nextPos = new THREE.Vector3(0, 0, 0)\nvar cameraAngle = new THREE.Vector2(0, 0)\nvar cameraToTarget = new THREE.Vector3()\nvar modelQuaternion = new THREE.Quaternion()\n\nvar aaaa = true\nexport default class Character extends Unit {\n  constructor(props) {\n    super(props)\n\n    this.loadModel()\n  }\n\n  loadModel = async () => {\n    this.model = await modelLoader(AstronautModel)\n    this.props.scene.add(this.model)\n    this.model.scale.set(2, 2, 2)\n    this.model.position.setY(.05)\n  }\n\n  animate = props => {\n    if (!this.model)\n      return\n\n    cameraAngle.set(\n      (cameraAngle.x + props.input.mouse.alphaX / 7) % (Math.PI * 2),\n      clamp(cameraAngle.y + props.input.mouse.alphaY / 15, 0, Math.PI / 3)\n    )\n\n    this.updateMove(props.input)\n\n    \n    nextPos.copy(this.model.position)\n      .add(move.clone()\n        .applyAxisAngle(yAxis, cameraAngle.x))\n    nextPos.clamp(minPosition, maxPosition)\n\n    let collisionFlag = false\n    const trees = props.units?.Landscape?.trees\n\n    if (trees)\n      for (let i = 0; i < trees.length && !collisionFlag; i++) {\n        const distance = nextPos.distanceTo(trees[i].position)\n\n        if (distance < trees[i].scale * 1.25)\n          collisionFlag = true\n      }\n\n    if (!collisionFlag)\n      this.model.position.copy(nextPos)\n\n    this.model.quaternion.slerp(\n      modelQuaternion.setFromAxisAngle(yAxis, cameraAngle.x)\n      , .1)\n\n    cameraToTarget = (new THREE.Vector3(0, 0, -15))\n      .applyAxisAngle(xAxis, cameraAngle.y - Math.PI / 16)\n      .applyAxisAngle(yAxis, cameraAngle.x)\n\n    this.props.controls.target.copy(this.model.position)\n    this.props.controls.target.setY(5)\n    this.props.camera.position.copy(this.props.controls.target.clone().add(cameraToTarget))\n  }\n\n  updateMove = input => {\n    const getDirectionState = direction =>\n      direction\n        .map(key => key.pressed)\n        .reduce((a, b) => a || b)\n      ? 1 : 0\n\n    move.setX(\n      (getDirectionState(input.moveFlags.right) - getDirectionState(input.moveFlags.left)) * .35)\n    move.setZ(\n      (getDirectionState(input.moveFlags.up) - getDirectionState(input.moveFlags.down)) * .35)\n  }\n\n\n  dispose = () => {}\n}\n","import THREE from 'libs/engines/3d/three'\n\n\nexport default async file =>\n  new Promise((res, rej) =>\n    new THREE.TextureLoader()\n      .load(file,\n        texture =>\n          res(texture),\n        progress => {},\n        error =>\n          rej(error)\n      )\n  )","import clamp from 'clamp'\nimport THREE from 'libs/engines/3d/three'\nimport Unit from 'libs/engines/3d/Unit'\nimport modelLoader from 'libs/engines/3d/modelLoader'\nimport textureLoader from 'libs/engines/3d/textureLoader'\n\nimport treeModel from 'libs/engines/3d/models/tree.glb'\nimport planeTextureImage from 'libs/engines/3d/textures/blackgrid.jpg'\n\n\nconst treeAmount = 75\nconst ArenaRadius = 300\nconst xAxis = new THREE.Vector3(1, 0, 0)\nconst yAxis = new THREE.Vector3(0, 1, 0)\n// const zAxis = new THREE.Vector3(0, 0, 1)\n\nexport default class Character extends Unit {\n  constructor(props) {\n    super(props)\n\n    this.loadModel()\n  }\n\n  loadModel = async () => {\n    var planeTexture = await textureLoader(planeTextureImage)\n    planeTexture.wrapS = THREE.RepeatWrapping\n    planeTexture.wrapT = THREE.RepeatWrapping\n    planeTexture.repeat.set( 27, 27 )\n    this.plane = new THREE.Mesh(\n      new THREE.PlaneGeometry( 2 * ArenaRadius, 2 * ArenaRadius, 1, 1 ),\n      new THREE.MeshBasicMaterial({\n        map: planeTexture,\n        side: THREE.DoubleSide,\n      })\n    )\n    this.plane.rotateX(Math.PI / 2)\n    this.props.scene.add( this.plane )\n\n    const treeMesh = await modelLoader(treeModel)\n    var dummy = new THREE.Object3D()\n    var treePos = new THREE.Vector3()\n\n    this.treeInstance = new THREE.InstancedMesh(treeMesh.children[0].geometry, treeMesh.children[0].material, treeAmount)\n    this.treeInstance.instanceMatrix.setUsage( THREE.DynamicDrawUsage )\n    this.props.scene.add(this.treeInstance)\n\n    this.trees = []\n    for (let i = 0; i < treeAmount; i++) {\n      let randomX = Math.max(Math.random(), .1) * Math.sign(Math.random() - .5)\n      let randomZ = Math.max(Math.random(), .1) * Math.sign(Math.random() - .5)\n\n      treePos\n        .set(\n          ArenaRadius * randomX,\n          ArenaRadius / 8 * Math.random(),\n          ArenaRadius * randomZ,\n        )\n\n      let scale = (1 + Math.random()) * 10\n      dummy.scale.set(scale, scale, scale)\n      dummy.position.copy(treePos)\n      this.trees.push({\n        position: (new THREE.Vector3()).copy(dummy.position),\n        scale: scale,\n      })\n      dummy.rotation.y = (-.5 + Math.random()) * Math.PI / 2\n      dummy.rotation.x = (.5 + Math.random()) * Math.PI / 2\n      dummy.updateMatrix()\n      this.treeInstance.setMatrixAt(i, dummy.matrix)\n    }\n\n    this.treeInstance.instanceMatrix.needsUpdate = true\n  }\n\n  animate = props => {}\n  dispose = () => {}\n}\n","import TextSprite from 'three.textsprite'\nimport THREE from 'libs/engines/3d/three'\nimport transitionHandler from 'libs/utils/handlers/transitionHandler'\nimport modelLoader from 'libs/engines/3d/modelLoader'\n\nimport coinModel from 'libs/engines/3d/models/coin.glb'\n\n\nconst coinAmount = 300\nconst ArenaRadius = 300\n// const xAxis = new THREE.Vector3(1, 0, 0)\n// const yAxis = new THREE.Vector3(0, 1, 0)\n// const zAxis = new THREE.Vector3(0, 0, 1)\n\nvar dummy = new THREE.Object3D()\nvar charachterPos = new THREE.Vector3()\n\n\nconst coinInitialPos = () =>\n  new THREE.Vector3(\n    (Math.random() - .5) * 2 * ArenaRadius * .7,\n    35,\n    (Math.random() - .5) * 2 * ArenaRadius * .7,\n  )\n\n\nexport default class Coins extends transitionHandler {\n  constructor(props) {\n    super(props)\n\n    this.sprites = [\n      \"🌅\",\n      \"🏆\",\n      \"✨\",\n      \"👌🏻\",\n      \"❤️\",\n    ].map(text => {\n      let sprite = new TextSprite({\n        material: {\n          color: 0xFFFFFF,\n          // fog: false,\n        },\n        redrawInterval: false,\n        textSize: 3,\n        minFontSize: 128,\n        maxFontSize: 128,\n        texture: {\n          // fontFamily: `'RF-Dewi', sans-serif`,\n          // fontWeight: 700,\n          text: text,\n        },  \n      })\n      sprite.position.set(0, ArenaRadius * 2, 0)\n      props.scene.add(sprite)\n    \n      return sprite\n    })\n\n    this.coins = Array\n      .from(\n        {length: coinAmount},\n        (coin, index) => ({\n          index: index,\n          emitted: false,\n          position: coinInitialPos()\n        })\n      )\n\n    this.loadModel()\n  }\n\n  loadModel = async () => {\n    const coinMesh = await modelLoader(coinModel)\n\n    this.coinInstance = new THREE.InstancedMesh(coinMesh.children[0].geometry, coinMesh.children[0].material, coinAmount)\n    this.coinInstance.instanceMatrix.setUsage( THREE.DynamicDrawUsage )\n    this.props.scene.add(this.coinInstance)\n\n    for (let i = 0; i < coinAmount; i++) {\n      dummy.position.copy(coinInitialPos())\n      dummy.scale.set(5, 5, 5)\n      dummy.updateMatrix()\n      this.coinInstance.setMatrixAt(i, dummy.matrix)\n    }\n    this.coinInstance.instanceMatrix.needsUpdate = true\n\n    this.emmitCoin()\n  }\n\n  animate = props => {\n    if (!this.coinInstance)\n      return\n\n    // super.animate(props)\n    this.animateTransitions()\n\n    charachterPos.copy(props.controls.target)\n    charachterPos.setY(charachterPos.y - 3)\n\n    this.coins.forEach((coin, index) => {\n      const distance = coin.position.distanceTo(charachterPos)\n\n      if (distance < 3) {\n        coin.emitted = false\n        var shownSprite = this.sprites[Math.round(Math.random() * (this.sprites.length - 1))]\n        shownSprite.position.copy(charachterPos)\n        shownSprite.position.setY(shownSprite.position.y + 4)\n        this.registerTransition({\n          variable: shownSprite.position,\n          value: new THREE.Vector3(shownSprite.position.x, shownSprite.position.y + 3, shownSprite.position.z),\n          numberOfFrames: 25,\n          timingFuntion: 'easeOutQuad',\n          onComplete: () => shownSprite.position.setY(ArenaRadius * 2),\n        })\n      }\n\n      if (coin.emitted) {\n        dummy.position.copy(coin.position)\n        switch (index % 3) {\n          case 0:\n            dummy.rotation.x = (index * 1000 + props.frameNumber * 100) / props.maxFrameNumber * Math.PI\n            break\n          case 1:\n            dummy.rotation.y = (index * 1000 + props.frameNumber * 100) / props.maxFrameNumber * Math.PI\n            break\n          case 2:\n            dummy.rotation.z = (index * 1000 + props.frameNumber * 100) / props.maxFrameNumber * Math.PI\n            break\n        }  \n      }\n      else\n        dummy.position.set(0, ArenaRadius * 5, 0)\n\n      dummy.updateMatrix()\n      this.coinInstance.setMatrixAt(index, dummy.matrix)\n    })\n    this.coinInstance.instanceMatrix.needsUpdate = true\n  }\n\n  dispose = () =>\n    clearTimeout(this.emmitCoinTimeout)\n\n\n  emmitCoin = () => {\n    const hiddenCoins = this.coins\n      .filter(coin => !coin.emitted)\n\n    if (hiddenCoins.length > coinAmount / 3) {\n      var coinToEmmit = hiddenCoins[0]\n\n      coinToEmmit.position = coinInitialPos()\n      coinToEmmit.emitted = true\n      this.registerTransition({\n        variable: coinToEmmit.position,\n        value: (new THREE.Vector3()).copy(coinToEmmit.position).setY(-1),\n        numberOfFrames: Math.round((1 + Math.random()) * 250),\n        onComplete: () => coinToEmmit.emitted = false\n      })\n\n      dummy.position.copy(coinToEmmit.position)\n      this.coinInstance.setMatrixAt(coinToEmmit.index, dummy.matrix)\n    }\n\n    this.emmitCoinTimeout = setTimeout(\n      () => this.emmitCoin(),\n      Math.round((1 + Math.random()) * 2)\n    )\n  }\n}\n","import Unit from 'libs/engines/3d/Unit'\n\n\nconst lightDistanceToModel = 15\n\n\nexport default class Lowpoly extends Unit {\n  constructor(props) {\n    super(props)\n\n    const { scene, THREE } = props\n\n    this.light0 = new THREE.HemisphereLight( 0xffffff, 0x444444, 1.25 )\n    this.light0.position.set( 0, lightDistanceToModel, 0 )\n    scene.add( this.light0 )\n\n    // this.light1 = new THREE.HemisphereLight( 0xffffff, 0x444444, 0.95 )\n    // this.light1.position.set( 0, -lightDistanceToModel, 0 )\n    // scene.add( this.light1 )\n    \n    this.light2 = new THREE.DirectionalLight( 0xee55ee, 2.95 )\n    this.light2.position.set( lightDistanceToModel, 7, 0 )\n    this.light2.castShadow = true\n    scene.add( this.light2 )\n\n    this.light3 = new THREE.DirectionalLight( 0x77bbee, 2.95 )\n    this.light3.position.set( lightDistanceToModel * Math.cos(Math.PI * 2 / 3), 7, lightDistanceToModel * Math.sin(Math.PI * 2 / 3) )\n    this.light3.castShadow = true\n    scene.add( this.light3 )\n\n    // this.light4 = new THREE.DirectionalLight( 0x0088ff, 2.95 )\n    // this.light4.position.set( lightDistanceToModel * Math.cos(Math.PI * 4 / 3), 3, lightDistanceToModel * Math.sin(Math.PI * 4 / 3) )\n    // this.light4.castShadow = true\n    // scene.add( this.light4 )\n  }\n\n  animate = props => {\n    const angle2 = props.frameNumber * 10 / props.maxFrameNumber * Math.PI * 2\n    const angle3 = angle2 + Math.PI * 2 / 3\n    // const angle4 = angle3 + Math.PI * 2 / 3\n    const cos2 = Math.cos(angle2)\n    const cos3 = Math.cos(angle3)\n    // const cos4 = Math.cos(angle4)\n\n    this.light2.position.set(lightDistanceToModel * cos2, 3, lightDistanceToModel * ((1 - cos2 * cos2) ** .5))\n    this.light3.position.set(lightDistanceToModel * cos3, 3, lightDistanceToModel * ((1 - cos3 * cos3) ** .5))\n    // this.light4.position.set(lightDistanceToModel * cos4, 3, lightDistanceToModel * ((1 - cos4 * cos4) ** .5))\n  }\n\n  dispose = () => {}\n}\n","import Unit from 'libs/engines/3d/Unit'\n\n\nexport default class Fog extends Unit {\n  constructor(props) {\n    super(props)\n\n    const { scene, THREE } = props\n\n    this.fog = new THREE.Fog(0x444444, 35, 155)\n    scene.fog = this.fog\n  }\n\n  animate = props => {}\n  dispose = () => {}\n}\n","/**\n * @author spidersharma / http://eduperiment.com/\n */\n\nimport {\n\tAdditiveBlending,\n\tColor,\n\tLinearFilter,\n\tMeshBasicMaterial,\n\tRGBAFormat,\n\tShaderMaterial,\n\tUniformsUtils,\n\tVector2,\n\tVector3,\n\tWebGLRenderTarget\n} from \"three\";\nimport { Pass } from \"three/examples/jsm/postprocessing/Pass.js\";\nimport { CopyShader } from \"three/examples/jsm/shaders/CopyShader.js\";\nimport { LuminosityHighPassShader } from \"three/examples/jsm/shaders/LuminosityHighPassShader.js\";\n\n/**\n * UnrealBloomPass is inspired by the bloom pass of Unreal Engine. It creates a\n * mip map chain of bloom textures and blurs them with different radii. Because\n * of the weighted combination of mips, and because larger blurs are done on\n * higher mips, this effect provides good quality and performance.\n *\n * Reference:\n * - https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\n */\nvar UnrealBloomPass = function ( resolution, strength, radius, threshold ) {\n\n\tPass.call( this );\n\n\tthis.strength = ( strength !== undefined ) ? strength : 1;\n\tthis.radius = radius;\n\tthis.threshold = threshold;\n\tthis.resolution = ( resolution !== undefined ) ? new Vector2( resolution.x, resolution.y ) : new Vector2( 256, 256 );\n\n\t// create color only once here, reuse it later inside the render function\n\tthis.clearColor = new Color( 0, 0, 0 );\n\n\t// render targets\n\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\tthis.renderTargetsHorizontal = [];\n\tthis.renderTargetsVertical = [];\n\tthis.nMips = 5;\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tthis.renderTargetBright = new WebGLRenderTarget( resx, resy, pars );\n\tthis.renderTargetBright.texture.name = \"UnrealBloomPass.bright\";\n\tthis.renderTargetBright.texture.generateMipmaps = false;\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tvar renderTargetHorizonal = new WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetHorizonal.texture.name = \"UnrealBloomPass.h\" + i;\n\t\trenderTargetHorizonal.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsHorizontal.push( renderTargetHorizonal );\n\n\t\tvar renderTargetVertical = new WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetVertical.texture.name = \"UnrealBloomPass.v\" + i;\n\t\trenderTargetVertical.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsVertical.push( renderTargetVertical );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// luminosity high pass material\n\n\tif ( LuminosityHighPassShader === undefined )\n\t\tconsole.error( \"UnrealBloomPass relies on LuminosityHighPassShader\" );\n\n\tvar highPassShader = LuminosityHighPassShader;\n\tthis.highPassUniforms = UniformsUtils.clone( highPassShader.uniforms );\n\n\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = threshold;\n\tthis.highPassUniforms[ \"smoothWidth\" ].value = 0.01;\n\n\tthis.materialHighPassFilter = new ShaderMaterial( {\n\t\tuniforms: this.highPassUniforms,\n\t\tvertexShader: highPassShader.vertexShader,\n\t\tfragmentShader: highPassShader.fragmentShader,\n\t\tdefines: {}\n\t} );\n\n\t// Gaussian Blur Materials\n\tthis.separableBlurMaterials = [];\n\tvar kernelSizeArray = [ 3, 5, 7, 9, 11 ];\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tthis.separableBlurMaterials.push( this.getSeperableBlurMaterial( kernelSizeArray[ i ] ) );\n\n\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new Vector2( resx, resy );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// Composite material\n\tthis.compositeMaterial = this.getCompositeMaterial( this.nMips );\n\tthis.compositeMaterial.uniforms[ \"blurTexture1\" ].value = this.renderTargetsVertical[ 0 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture2\" ].value = this.renderTargetsVertical[ 1 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture3\" ].value = this.renderTargetsVertical[ 2 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture4\" ].value = this.renderTargetsVertical[ 3 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture5\" ].value = this.renderTargetsVertical[ 4 ].texture;\n\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = strength;\n\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = 0.1;\n\tthis.compositeMaterial.needsUpdate = true;\n\n\tvar bloomFactors = [ 1.0, 0.8, 0.6, 0.4, 0.2 ];\n\tthis.compositeMaterial.uniforms[ \"bloomFactors\" ].value = bloomFactors;\n\tthis.bloomTintColors = [ new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ),\n\t\t\t\t\t\t\t new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ) ];\n\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\n\n\t// copy material\n\tif ( CopyShader === undefined ) {\n\n\t\tconsole.error( \"UnrealBloomPass relies on CopyShader\" );\n\n\t}\n\n\tvar copyShader = CopyShader;\n\n\tthis.copyUniforms = UniformsUtils.clone( copyShader.uniforms );\n\tthis.copyUniforms[ \"opacity\" ].value = 1.0;\n\n\tthis.materialCopy = new ShaderMaterial( {\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: AdditiveBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\n\tthis.oldClearColor = new Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.basic = new MeshBasicMaterial();\n\n\tthis.fsQuad = new Pass.FullScreenQuad( null );\n\n};\n\nUnrealBloomPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: UnrealBloomPass,\n\n\tdispose: function () {\n\n\t\tfor ( var i = 0; i < this.renderTargetsHorizontal.length; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].dispose();\n\n\t\t}\n\n\t\tfor ( var i = 0; i < this.renderTargetsVertical.length; i ++ ) {\n\n\t\t\tthis.renderTargetsVertical[ i ].dispose();\n\n\t\t}\n\n\t\tthis.renderTargetBright.dispose();\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar resx = Math.round( width / 2 );\n\t\tvar resy = Math.round( height / 2 );\n\n\t\tthis.renderTargetBright.setSize( resx, resy );\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].setSize( resx, resy );\n\t\t\tthis.renderTargetsVertical[ i ].setSize( resx, resy );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new Vector2( resx, resy );\n\n\t\t\tresx = Math.round( resx / 2 );\n\t\t\tresy = Math.round( resy / 2 );\n\n\t\t}\n\n\t},\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( this.clearColor, 0 );\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( false );\n\n\t\t// Render input to screen\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\tthis.fsQuad.material = this.basic;\n\t\t\tthis.basic.map = readBuffer.texture;\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// 1. Extract Bright Areas\n\n\t\tthis.highPassUniforms[ \"tDiffuse\" ].value = readBuffer.texture;\n\t\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = this.threshold;\n\t\tthis.fsQuad.material = this.materialHighPassFilter;\n\n\t\trenderer.setRenderTarget( this.renderTargetBright );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// 2. Blur All the mips progressively\n\n\t\tvar inputRenderTarget = this.renderTargetBright;\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.fsQuad.material = this.separableBlurMaterials[ i ];\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = inputRenderTarget.texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = UnrealBloomPass.BlurDirectionX;\n\t\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = this.renderTargetsHorizontal[ i ].texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = UnrealBloomPass.BlurDirectionY;\n\t\t\trenderer.setRenderTarget( this.renderTargetsVertical[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tinputRenderTarget = this.renderTargetsVertical[ i ];\n\n\t\t}\n\n\t\t// Composite All the mips\n\n\t\tthis.fsQuad.material = this.compositeMaterial;\n\t\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = this.strength;\n\t\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = this.radius;\n\t\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\n\n\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ 0 ] );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// Blend it additively over the input texture\n\n\t\tthis.fsQuad.material = this.materialCopy;\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetsHorizontal[ 0 ].texture;\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( true );\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( readBuffer );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// Restore renderer settings\n\n\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t},\n\n\tgetSeperableBlurMaterial: function ( kernelRadius ) {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"KERNEL_RADIUS\": kernelRadius,\n\t\t\t\t\"SIGMA\": kernelRadius\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"colorTexture\": { value: null },\n\t\t\t\t\"texSize\": { value: new Vector2( 0.5, 0.5 ) },\n\t\t\t\t\"direction\": { value: new Vector2( 0.5, 0.5 ) }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"#include <common>\\\n\t\t\t\tvarying vec2 vUv;\\n\\\n\t\t\t\tuniform sampler2D colorTexture;\\n\\\n\t\t\t\tuniform vec2 texSize;\\\n\t\t\t\tuniform vec2 direction;\\\n\t\t\t\t\\\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\n\t\t\t\t}\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\n\t\t\t\t\tfloat fSigma = float(SIGMA);\\\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\n\t\t\t\t\t\tfloat x = float(i);\\\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\\\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\\\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\\\n\t\t\t\t\t\tweightSum += 2.0 * w;\\\n\t\t\t\t\t}\\\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 0.1);\\n\\\n\t\t\t\t}\"\n\t\t} );\n\n\t},\n\n\tgetCompositeMaterial: function ( nMips ) {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"NUM_MIPS\": nMips\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"blurTexture1\": { value: null },\n\t\t\t\t\"blurTexture2\": { value: null },\n\t\t\t\t\"blurTexture3\": { value: null },\n\t\t\t\t\"blurTexture4\": { value: null },\n\t\t\t\t\"blurTexture5\": { value: null },\n\t\t\t\t\"dirtTexture\": { value: null },\n\t\t\t\t\"bloomStrength\": { value: 1.0 },\n\t\t\t\t\"bloomFactors\": { value: null },\n\t\t\t\t\"bloomTintColors\": { value: null },\n\t\t\t\t\"bloomRadius\": { value: 0.0 }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"varying vec2 vUv;\\\n\t\t\t\tuniform sampler2D blurTexture1;\\\n\t\t\t\tuniform sampler2D blurTexture2;\\\n\t\t\t\tuniform sampler2D blurTexture3;\\\n\t\t\t\tuniform sampler2D blurTexture4;\\\n\t\t\t\tuniform sampler2D blurTexture5;\\\n\t\t\t\tuniform sampler2D dirtTexture;\\\n\t\t\t\tuniform float bloomStrength;\\\n\t\t\t\tuniform float bloomRadius;\\\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\n\t\t\t\t\\\n\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\n\t\t\t\t}\\\n\t\t\t\t\\\n\t\t\t\tvoid main() {\\\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\n\t\t\t\t}\"\n\t\t} );\n\n\t}\n\n} );\n\nUnrealBloomPass.BlurDirectionX = new Vector2( 1.0, 0.0 );\nUnrealBloomPass.BlurDirectionY = new Vector2( 0.0, 1.0 );\n\nexport { UnrealBloomPass };\n","import { UnrealBloomPass } from './customUnrealBloomPass'\nimport Unit from 'libs/engines/3d/Unit'\n\n\nexport default class BloomPostprocessing extends Unit {\n  constructor(props) {\n    super(props)\n\n    const {\n      renderer,\n      composer,\n      THREE,\n    } = props\n\n    this.params = [\n      1.5,\n      1.6,\n      0.01,\n    ]\n    this.pass = new UnrealBloomPass(\n      new THREE.Vector2(renderer.getSize(new THREE.Vector2()).x, renderer.getSize(new THREE.Vector2()).y),\n      ...this.params\n    )\n    composer.addPass(this.pass)\n    console.log(this.pass)\n  }\n\n  animate = props => {\n    this.pass.strength = this.params[0]\n    this.pass.radius = this.params[1]\n    this.pass.threshold = this.params[2]\n  }\n  dispose = () => {}\n}\n","import React, { Component } from 'react'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nimport Scene from 'libs/engines/3d/Scene'\nimport Character from 'libs/engines/3d/units/Character'\nimport Landscape from 'libs/engines/3d/units/Landscape'\nimport Coins from 'libs/engines/3d/units/Coins'\nimport Lights from 'libs/engines/3d/units/Lights'\nimport Fog from 'libs/engines/3d/units/Fog'\nimport VignettePostprocessing from 'libs/engines/3d/units/VignettePostprocessing'\nimport FilmGrainPostprocessing from 'libs/engines/3d/units/FilmGrainPostprocessing'\nimport BloomPostprocessing from 'libs/engines/3d/units/BloomPostprocessing'\n// import EasterEgg from 'libs/engines/3d/units/EasterEgg'\n\n\nexport default class ThreeScene extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      FilmGrainPostprocessing: true,\n      BloomPostprocessing: true,\n      VignettePostprocessing: true,\n\n      check: false,\n      params: [0, 0, 0]\n    }\n\n    this.viewerRef = new React.createRef()\n\n    this.scene = new Scene({\n      units: {\n        Character: {\n          unit: Character,\n          disabled: false,\n        },\n        Landscape: {\n          unit: Landscape,\n          disabled: false,\n        },\n        Coins: {\n          unit: Coins,\n          disabled: false,\n        },\n        Lights: {\n          unit: Lights,\n          disabled: false,\n        },\n        Fog: {\n          unit: Fog,\n          disabled: false,\n        },\n        // FilmGrainPostprocessing: {\n        //   unit: FilmGrainPostprocessing,\n        //   disabled: false,\n        // },\n        BloomPostprocessing: {\n          unit: BloomPostprocessing,\n          disabled: false,\n        },\n        // VignettePostprocessing: {\n        //   unit: VignettePostprocessing,\n        //   disabled: false,\n        // },\n        // EasterEgg: {\n        //   unit: EasterEgg,\n        //   disabled: false,\n        // },\n      }\n    })\n  }\n\n  componentDidMount() {\n    this.resizeObs = new ResizeObserver(this.resize.bind(this))\n      .observe(this.viewerRef.current)\n\n    this.scene.init(this.viewerRef.current)\n\n    setTimeout(() => this.setState({check: true}), 1000)\n  }\n\n  componentWillUnmount = () => {\n    this.scene.dispose()\n    // this.viewerRef.removeChild(this.renderer.domElement)\n  }\n\n  resize() {\n    const ViewerDiv = this.viewerRef && this.viewerRef.current\n    \n    if (!ViewerDiv)\n      return\n\n    this.scene.resize(ViewerDiv.clientWidth, ViewerDiv.clientHeight)\n  }\n\n  render = () =>\n    <>\n      <div\n        className=\"Viewer\"\n        ref={this.viewerRef}\n      >\n        <div id=\"zone-joystick\" />\n      </div>\n      <div className=\"buttons\">\n        {/* {Object.keys(this.state).map((key, index) =>\n          <div\n            className=\"buttons__item\"\n            onClick={() => {\n              // this.scene.toggleUnit(key)\n              this.scene.scene.composer.passes[index + 1].enabled = !this.state[key]\n              this.setState({[key]: !this.state[key]})\n            }}\n          >\n            {key} {this.state[key] ? \"on\" : \"off\"}\n          </div>\n        )} */}\n        {this.scene.scene.units.BloomPostprocessing && this.state.check &&\n          this.scene.scene.units.BloomPostprocessing.params.map((param, index) =>\n            <input\n              className=\"buttons__item\"\n              value={this.state.params[index]}\n              onChange={e => {\n                this.scene.scene.units.BloomPostprocessing.params[index] = e.target.value\n                let newParams = this.state.params.slice()\n                newParams[index] = e.target.value\n\n                this.setState({params: this.scene.scene.units.BloomPostprocessing.params})\n              }}\n            />\n        )}\n      </div>\n    </>\n}\n","import React, { Component } from 'react'\n\n\nexport default class TextArea extends Component {\n  constructor(props) {\n    super(props)\n  }\n  \n  render = () =>\n    <div className=\"text-area\">\n      <div className=\"text-area__left-column\">\n        <div className=\"text-area__left-column__text\">\n          что голодная смерть британца в тяжёлой депрессии может рассказать нам о том, как мы распоряжаемся ресурсами и будем распоряжаться ими в будущем? что такое безусловный базовый доход? как изменится ваша жизнь, получай вы каждый месяц зарплату только за то, что живёте? \n        </div>\n      </div>\n      <div className=\"text-area__right-column\">\n        <h1 className=\"h1\">\n          SITTING&nbsp;IN&nbsp;A<br />\n          ROOM.&nbsp;I&nbsp;AM.\n        </h1>\n      </div>\n    </div>\n}\n\n","import React from 'react'\n\nimport ThreeScene from './components/ThreeScene'\nimport TextArea from './components/TextArea'\n\nimport 'styles/index.sass'\n\n\nconst App = () =>\n  <>\n    <ThreeScene/>\n    <TextArea/>\n  </>\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}