{"version":3,"sources":["libs/engines/3d/models/Astronaut.glb","libs/engines/3d/models/tree.glb","libs/engines/3d/textures/blackgrid.jpg","libs/engines/3d/models/coin.glb","libs/engines/3d/three.js","libs/engines/3d/Unit.js","libs/utils/handlers/transitionHandler/timingFunctions.js","libs/utils/handlers/transitionHandler/index.js","libs/utils/isTouchDevice.js","libs/utils/handlers/inputHandler.js","libs/engines/3d/Scene.js","libs/engines/3d/modelLoader.js","libs/engines/3d/units/Character.js","libs/engines/3d/textureLoader.js","libs/engines/3d/units/Landscape.js","libs/engines/3d/units/Coins.js","libs/engines/3d/units/Lights.js","libs/engines/3d/units/VignettePostprocessing.js","libs/engines/3d/units/FilmGrainPostprocessing.js","libs/engines/3d/units/BloomPostprocessing/customUnrealBloomPass.js","libs/engines/3d/units/BloomPostprocessing/index.js","components/ThreeScene.js","components/TextArea.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","window","THREE","Unit","props","animate","frame","dispose","this","fns","t","k","easeIn","easeOut","easeInOut","TransitionsHandler","animateTransitions","unregisteredTransitions","transitions","forEach","transition","index","currentFrame","numberOfFrames","push","alpha","timingFuntion","timingFuntions","variable","copy","initialValue","clone","lerp","value","transitionIndex","onComplete","slice","registerTransition","unregisterAllTransitions","length","noActiveTransitions","document","createEvent","e","inputVariables","mouse","alphaX","alphaY","move","Vector3","moveFlags","up","code","pressed","down","left","right","sceneVariables","renderer","undefined","camera","scene","Scene","composer","controls","clock","Clock","frameNumber","units","unitsToggled","init","ViewerDiv","inputHandlerInit","W","clientWidth","H","clientHeight","WebGLRenderer","antialias","setClearColor","setSize","setPixelRatio","devicePixelRatio","shadowMap","enabled","appendChild","domElement","PerspectiveCamera","OrbitControls","position","z","update","EffectComposer","addPass","RenderPass","initUnits","frameId","requestAnimationFrame","disposeUnits","cancelAnimationFrame","resize","aspect","updateProjectionMatrix","Object","keys","unitName","input","maxFrameNumber","render","unit","disabled","children","remove","toggleUnits","classes","transitionHandler","options","zone","getElementById","mode","x","Math","round","innerWidth","y","innerHeight","joystickManager","nipplejs","create","processOnMove","set","offsetX","offsetY","processOnEnd","handleScroll","threeSceneElement","scroll","clamp","max","getBoundingClientRect","top","offsetHeight","handleMouseMove","pageX","pageY","console","log","handleKeyDown","direction","key","keyCode","updateMove","handleKeyUp","getDirectionState","map","reduce","a","b","setX","setZ","isTouchDevice","removeEventListener","addEventListener","model","Promise","res","rej","GLTFLoader","load","gltf","progress","loaded","total","error","minPosition","maxPosition","xAxis","yAxis","Character","loadModel","modelLoader","AstronautModel","add","applyAxisAngle","PI","quaternion","slerp","Quaternion","setFromAxisAngle","cameraToTarget","target","file","TextureLoader","texture","textureLoader","planeTextureImage","planeTexture","wrapS","RepeatWrapping","wrapT","repeat","plane","Mesh","PlaneGeometry","MeshBasicMaterial","side","DoubleSide","rotateX","treeModel","treeMesh","dummy","Object3D","treePos","treeInstance","InstancedMesh","geometry","material","instanceMatrix","setUsage","DynamicDrawUsage","i","random","scale","rotation","updateMatrix","setMatrixAt","matrix","needsUpdate","coinInitialPos","ArenaRadius","Coins","coinModel","coinMesh","coinInstance","emmitCoin","coins","coin","emitted","clearInterval","emmitCoinTimeout","hiddenCoins","filter","coinToEmmit","setY","setTimeout","Array","from","Lowpoly","angle2","angle3","cos2","cos","cos3","light2","light3","light0","HemisphereLight","DirectionalLight","castShadow","sin","VignettePostprocessing","vignetteShader","uniforms","getSize","uselessVec2","Vector2","vignetteEffect","type","vertexShader","fragmentShader","ShaderPass","FilmGrainPostprocessing","filmGrainShader","filmGrainEffect","UnrealBloomPass","resolution","strength","radius","threshold","Pass","call","clearColor","Color","pars","minFilter","LinearFilter","magFilter","format","RGBAFormat","renderTargetsHorizontal","renderTargetsVertical","nMips","resx","resy","renderTargetBright","WebGLRenderTarget","name","generateMipmaps","renderTargetHorizonal","renderTargetVertical","LuminosityHighPassShader","highPassShader","highPassUniforms","UniformsUtils","materialHighPassFilter","ShaderMaterial","defines","separableBlurMaterials","kernelSizeArray","getSeperableBlurMaterial","compositeMaterial","getCompositeMaterial","bloomTintColors","CopyShader","copyShader","copyUniforms","materialCopy","blending","AdditiveBlending","depthTest","depthWrite","transparent","needsSwap","oldClearColor","oldClearAlpha","basic","fsQuad","FullScreenQuad","prototype","assign","constructor","width","height","writeBuffer","readBuffer","deltaTime","maskActive","getClearColor","getClearAlpha","oldAutoClear","autoClear","state","buffers","stencil","setTest","renderToScreen","setRenderTarget","clear","inputRenderTarget","BlurDirectionX","BlurDirectionY","kernelRadius","BloomPostprocessing","pass","ThreeScene","componentWillUnmount","className","ref","viewerRef","id","onClick","passes","setState","React","createRef","Landscape","Lights","resizeObs","ResizeObserver","bind","observe","current","Component","TextArea","App","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4eba740b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Astronaut.f3152ab1.glb\";","module.exports = __webpack_public_path__ + \"static/media/tree.46613934.glb\";","module.exports = __webpack_public_path__ + \"static/media/blackgrid.3d7d5793.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coin.e8a0d624.glb\";","import * as THREE from 'three'\n\nwindow.THREE = THREE\n\nexport default THREE","export default class Unit {\n  constructor(props) { this.props = props }\n  animate = frame => {}\n  dispose = () => {}\n}","let fns = {}\n\nfns.linear = t => t\nfns.easeInQuad = t => t * t\nfns.easeOutQuad = t => t * (2 - t)\nfns.easeInOutQuad = t => t < .5 ? 2 * (t ** 2) : -1 + (4 - 2 * t) * t\nfns.easeInCubic = t => t * t * t\nfns.easeOutCubic = t => (--t) * t * t + 1\nfns.easeInOutCubic = t => t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\nfns.easeInQuart = t => t * t * t * t\nfns.easeOutQuart = t => 1-(--t) * t * t * t\nfns.easeInOutQuart = t => t < .5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t\nfns.easeInQuint = t => t * t * t * t * t\nfns.easeOutQuint = t => 1 + (--t) * t * t * t * t\nfns.easeInOutQuint = t => t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t\n\nfns.easeIn = (t, k) => (t ** k)\nfns.easeOut = (t, k) => 1 - fns.easeIn(1 - t, k)\nfns.easeInOut = (t, k) => t < .5 ?\n  fns.easeIn(t * 2, k) / 2\n  :\n  1 - fns.easeIn((1 - t) * 2, k) / 2\n\nfns.easeIn2 = t => fns.easeIn(t, 1.5)\nfns.easeOut2 = t => fns.easeOut(t, 1.5)\nfns.easeInOut2 = t => fns.easeInOut(t, 1.5)\n\n\nexport default fns","import Unit from 'libs/engines/3d/Unit'\n\nimport timingFuntions from './timingFunctions'\n\nexport default class TransitionsHandler extends Unit {\n  constructor(props) {\n    super(props)\n    this.transitions = []\n  }\n\n  animateTransitions = () => {\n    let unregisteredTransitions = []\n    this.transitions.forEach((transition, index) => {\n      if (transition.currentFrame === transition.numberOfFrames)\n        unregisteredTransitions.push(index)\n      else {\n        // const alpha = 1 / (transition.numberOfFrames - transition.currentFrame)\n        const alpha = transition.currentFrame / transition.numberOfFrames\n        const timingFuntion = timingFuntions[transition.timingFuntion] || (t => t)\n\n        transition.variable.copy(transition.initialValue\n          .clone()\n          .lerp(transition.value, timingFuntion(alpha)))\n\n        transition.currentFrame++\n      }\n    })\n    unregisteredTransitions.forEach(transitionIndex => {\n      this.transitions[transitionIndex].onComplete()\n\n      this.transitions = [\n        ...this.transitions.slice(0, transitionIndex),\n        ...this.transitions.slice(transitionIndex + 1)\n      ]\n    })\n  }\n\n  registerTransition = props => {\n    this.transitions.push({\n      variable: props.variable,\n      value: props.value,\n      initialValue: props.variable.clone(),\n      numberOfFrames: props.numberOfFrames || 10,\n      currentFrame: 0,\n      timingFuntion: props.timingFuntion || \"none\",\n      onComplete: props.onComplete || (() => {}),\n    })\n  }\n\n  unregisterAllTransitions = () => this.transitions.length = 0\n\n  noActiveTransitions = () => this.transitions.length === 0\n\n}","export default () => {\n  try {  \n    document.createEvent(\"TouchEvent\")  \n    return true  \n  } catch (e) {  \n    return false  \n  }  \n}\n","import nipplejs from 'nipplejs'\nimport clamp from 'clamp'\nimport THREE from 'libs/engines/3d/three'\nimport isTouchDevice from 'libs/utils/isTouchDevice'\n\n\nvar inputVariables = {\n  // scroll: {\n  //   alphaX: 0,\n  //   alphaY: 0,\n  // },\n  mouse: {\n    alphaX: 0,\n    alphaY: 0,    \n  },\n  move: new THREE.Vector3(0, 0, 0),\n}\n\nvar moveFlags = {\n  up: [\n    {\n      code: 87,\n      pressed: false,\n    },\n    {\n      code: 38,\n      pressed: false,\n    }\n  ],\n  down: [\n    {\n      code: 83,\n      pressed: false,\n    },\n    {\n      code: 40,\n      pressed: false,\n    }\n  ],\n  left: [\n    {\n      code: 68,\n      pressed: false,\n    },\n    {\n      code: 39,\n      pressed: false,\n    }\n  ],\n  right: [\n    {\n      code: 65,\n      pressed: false,\n    },\n    {\n      code: 37,\n      pressed: false,\n    }\n  ],\n}\n\n\nexport default class inputHandler {\n  constructor(props) {\n    this.props = props\n\n    this.input = inputVariables\n\n    if (isTouchDevice()) {  \n      // this.handleScroll()\n      // this.scrollUpdateInterval = setInterval(() => this.handleScroll(), 5)\n    }\n    else {\n      window.addEventListener('mousemove', this.handleMouseMove, false)\n      window.addEventListener('keydown', this.handleKeyDown, false)\n      window.addEventListener('keyup', this.handleKeyUp, false)\n    }\n  }\n\n  inputHandlerInit = () => {\n    const zoneJoystick = document.getElementById('zone-joystick')\n    var options = {\n      zone: zoneJoystick,\n      mode: 'static',\n      position: {\n        x: Math.round(window.innerWidth / 4 * 3),\n        y: Math.round(window.innerHeight / 5 * 4),\n      },\n      // size: 200,\n    }\n    this.joystickManager = nipplejs.create(options)\n\n    this.joystickManager.processOnMove = e => this.input.move.set(-e.offsetX / 1000, 0, -e.offsetY / 1000)\n    this.joystickManager.processOnEnd = e => this.input.move.set(0, 0, 0)\n\n    // this.joystickManager.on('added', (e, nipple) => {\n    //   nipple.on('start move end dir plain', e => {\n    //     console.log(e)\n    //     console.log(nipple)\n    //     // this.move.set()\n    //   })\n    // }).on('removed', (e, nipple) => {\n    //   nipple.off('start move end dir plain')\n    // })\n  }\n\n  handleScroll = e => {\n    const threeSceneElement = document.getElementById(\"three-scene\")\n    const getBodyScrollTop = () => Math.max(-threeSceneElement.getBoundingClientRect().top, 0)\n\n    this.scroll.alphaY = clamp(getBodyScrollTop() / threeSceneElement.offsetHeight * .5, 0, .5)\n  }\n  \n  handleMouseMove = e => {\n    if (!e.pageX || !e.pageY) {\n      console.log(\"no mouse found\")\n      return\n    }\n  \n    this.input.mouse.alphaX = -clamp(e.pageX / window.innerWidth - .5, -.5, .5)\n    this.input.mouse.alphaY = clamp(e.pageY / window.innerHeight - .5, -.5, .5)\n  }\n\n  handleKeyDown = e => {\n    Object.keys(moveFlags)\n      .forEach(direction =>\n        moveFlags[direction]\n          .forEach(key =>\n            key.pressed = (key.code === e.keyCode)))\n\n    this.updateMove()\n  }\n  handleKeyUp = e => {\n    Object.keys(moveFlags)\n      .forEach(direction =>\n        moveFlags[direction]\n          .forEach(key =>\n            key.pressed &= !(key.code === e.keyCode)))\n\n    this.updateMove()\n  }\n\n  updateMove = () => {\n    const getDirectionState = direction =>\n      direction\n        .map(key => key.pressed)\n        .reduce((a, b) => a || b)\n      ? 1 : 0\n\n    this.input.move.setX(\n      (getDirectionState(moveFlags.right) - getDirectionState(moveFlags.left)) * .1)\n    this.input.move.setZ(\n      (getDirectionState(moveFlags.up) - getDirectionState(moveFlags.down)) * .1)\n  }\n\n  dispose = () => {\n    if (isTouchDevice())\n      ;\n      // clearInterval(this.scrollUpdateInterval)\n    else\n      window.removeEventListener('mousemove', this.handleMouseMove, false)\n  }\n}","import THREE from 'libs/engines/3d/three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\nimport classes from 'multiple-extend'\n\nimport transitionHandler from 'libs/utils/handlers/transitionHandler'\nimport inputHandler from 'libs/utils/handlers/inputHandler'\n\n\nconst targetToCamera = -15\nconst maxFrameNumber = 5000\n\nvar sceneVariables = {\n  renderer: undefined,\n  camera: undefined,\n  scene: new THREE.Scene(),\n  composer: undefined,\n  controls: undefined,\n\n  clock: new THREE.Clock(),\n  frameNumber: 0,\n\n  units: {},\n  unitsToggled: false,\n}\n\n\nexport default class Scene extends\n  classes(transitionHandler, inputHandler) {\n\n  constructor(props) {\n    super(props)\n    this.scene = sceneVariables\n  }\n\n  init = ViewerDiv => {\n    this.inputHandlerInit()\n\n    const W = ViewerDiv.clientWidth\n    const H = ViewerDiv.clientHeight\n\n    //ADD RENDERER\n    this.scene.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\n    this.scene.renderer.setClearColor(0x000000, 0)\n    this.scene.renderer.setSize(W, H)\n    this.scene.renderer.setPixelRatio(window.devicePixelRatio)\n    this.scene.renderer.shadowMap.enabled = true\n\n    ViewerDiv.appendChild(this.scene.renderer.domElement)\n\n    //ADD CAMERA\n    this.scene.camera = new THREE.PerspectiveCamera(\n      75,\n      W / H,\n      0.1,\n      1000\n    )\n    this.scene.controls = new OrbitControls(this.scene.camera, this.scene.renderer.domElement)\n    this.scene.controls.enabled = false\n    this.scene.camera.position.z = targetToCamera\n    this.scene.controls.update()\n\n    this.scene.composer = new EffectComposer(this.scene.renderer)\n    this.scene.composer.addPass(new RenderPass(this.scene.scene, this.scene.camera))\n\n    this.initUnits()\n\n    if (!this.frameId)\n      this.frameId = requestAnimationFrame(this.animate)\n  }\n\n  dispose = () => {\n    this.disposeUnits()\n    cancelAnimationFrame(this.frameId)\n  }\n\n  resize = (W, H) => {\n    if (!this.scene.renderer || !this.scene.camera)\n      return\n\n    this.scene.camera.aspect = W / H\n    this.scene.camera.updateProjectionMatrix()\n\n    this.scene.renderer.setSize(W, H)\n    this.scene.renderer.setPixelRatio(window.devicePixelRatio)\n  }\n\n  animate = () => {\n    this.scene.frameNumber = (this.scene.frameNumber + 1) % maxFrameNumber\n\n    const {\n      composer,\n      controls,\n      units,\n    } = this.scene\n\n    Object.keys(units)\n      .forEach(unitName =>\n        units[unitName].animate({\n          THREE: THREE,\n          ...this.scene,\n          input: this.input,\n          maxFrameNumber: maxFrameNumber,\n        }))\n\n    controls.update()\n    composer.render()\n\n    this.frameId = window.requestAnimationFrame(this.animate)\n  }\n\n\n  initUnits = () => {\n    const props = {\n      THREE: THREE,\n      ...this.scene,\n      input: this.input,\n      maxFrameNumber: maxFrameNumber,\n    }\n\n    Object.keys(this.props.units)\n      .forEach(unitName => {\n        const unit = this.props.units[unitName]\n\n        if (!unit.disabled ^ this.scene.unitsToggled)\n        this.scene.units[unitName] = new unit.unit(props)\n      })\n  }\n\n  disposeUnits = () => {\n    const {\n      scene,\n      units,\n    } = this.scene\n\n    Object.keys(units)\n      .forEach(unitName => units[unitName].dispose())\n\n    //REDO THIS SHIT: units should unregister themselves\n    while(scene.children.length > 0)\n      scene.remove(scene.children[0])\n  }\n\n  toggleUnits = () => {\n    this.disposeUnits()\n    this.scene.unitsToggled = !this.scene.unitsToggled\n    this.initUnits()\n  }\n\n  // toggleUnit = unitName => {\n  //   // if (this.scene[unitName].enabled)\n  //   console.log(this.scene.scene.children)\n  // }\n}\n","import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\n\n\nexport default async model =>\n  new Promise((res, rej) =>\n    new GLTFLoader()\n      .load(\n        model,\n        gltf =>\n          res(gltf.scene),\n        progress =>\n          console.log((progress.loaded / progress.total * 100) + '% loaded'),\n        error =>\n          rej(error),\n      )\n  )\n","import THREE from 'libs/engines/3d/three'\nimport Unit from 'libs/engines/3d/Unit'\nimport modelLoader from 'libs/engines/3d/modelLoader'\nimport AstronautModel from 'libs/engines/3d/models/Astronaut.glb'\n\n\nconst ArenaRadius = 10\nconst minPosition = new THREE.Vector3(-ArenaRadius, -ArenaRadius, -ArenaRadius)\nconst maxPosition = new THREE.Vector3( ArenaRadius,  ArenaRadius,  ArenaRadius)\nconst xAxis = new THREE.Vector3(1, 0, 0)\nconst yAxis = new THREE.Vector3(0, 1, 0)\n// const zAxis = new THREE.Vector3(0, 0, 1)\n\n\nexport default class Character extends Unit {\n  constructor(props) {\n    super(props)\n\n    this.loadModel()\n  }\n\n  loadModel = async () =>\n    this.props.scene\n      .add(this.model = await modelLoader(AstronautModel))\n\n  animate = props => {\n    if (!this.model)\n      return\n\n    this.model.position\n      .add(props.input.move.clone()\n        .applyAxisAngle(yAxis, props.input.mouse.alphaX * Math.PI * 2))\n    this.model.position.clamp(minPosition, maxPosition)\n\n    this.model.quaternion.slerp(\n      (new THREE.Quaternion()).setFromAxisAngle(yAxis, props.input.mouse.alphaX * Math.PI * 2)\n      , .1)\n\n    const cameraToTarget = (new THREE.Vector3(0, 0, -15))\n      .applyAxisAngle(xAxis, (props.input.mouse.alphaY + .5) * Math.PI / 4)\n      .applyAxisAngle(yAxis, props.input.mouse.alphaX * Math.PI * 2)\n\n    this.props.controls.target.copy(this.model.position)\n    this.props.camera.position.copy(this.props.controls.target.clone().add(cameraToTarget))\n  }\n\n  dispose = () => {}\n}\n","import THREE from 'libs/engines/3d/three'\n\n\nexport default async file =>\n  new Promise((res, rej) =>\n    new THREE.TextureLoader()\n      .load(file,\n        texture =>\n          res(texture),\n        progress => {},\n        error =>\n          rej(error)\n      )\n  )","import THREE from 'libs/engines/3d/three'\nimport Unit from 'libs/engines/3d/Unit'\nimport modelLoader from 'libs/engines/3d/modelLoader'\nimport textureLoader from 'libs/engines/3d/textureLoader'\n\nimport treeModel from 'libs/engines/3d/models/tree.glb'\nimport planeTextureImage from 'libs/engines/3d/textures/blackgrid.jpg'\n\n\nconst treeAmount = 10\nconst ArenaRadius = 10\nconst xAxis = new THREE.Vector3(1, 0, 0)\nconst yAxis = new THREE.Vector3(0, 1, 0)\n// const zAxis = new THREE.Vector3(0, 0, 1)\n\n\nexport default class Character extends Unit {\n  constructor(props) {\n    super(props)\n\n    this.loadModel()\n  }\n\n  loadModel = async () => {\n    var planeTexture = await textureLoader(planeTextureImage)\n    planeTexture.wrapS = THREE.RepeatWrapping\n    planeTexture.wrapT = THREE.RepeatWrapping\n    planeTexture.repeat.set( 3, 3 )\n    this.plane = new THREE.Mesh(\n      new THREE.PlaneGeometry( 2 * ArenaRadius, 2 * ArenaRadius, 1, 1 ),\n      new THREE.MeshBasicMaterial({\n        map: planeTexture,\n        side: THREE.DoubleSide,\n      })\n    )\n    this.plane.rotateX(Math.PI / 2)\n    this.props.scene.add( this.plane )\n\n    const treeMesh = await modelLoader(treeModel)\n    var dummy = new THREE.Object3D()\n    var treePos = new THREE.Vector3()\n\n    this.treeInstance = new THREE.InstancedMesh(treeMesh.children[0].geometry, treeMesh.children[0].material, treeAmount)\n    this.treeInstance.instanceMatrix.setUsage( THREE.DynamicDrawUsage )\n    this.props.scene.add(this.treeInstance)\n\n    for (let i = 0; i < treeAmount; i++) {\n      treePos\n        .set(0, ArenaRadius * (1 + Math.random()), 0)\n        .applyAxisAngle(xAxis, (.25 + Math.random()) * Math.PI / 2)\n        .applyAxisAngle(yAxis, Math.random() * Math.PI * 2)\n\n      let scale = (1 + Math.random()) * 2\n      dummy.scale.set(scale, scale, scale)\n      dummy.position.copy(treePos)\n      dummy.rotation.y = (.5 + Math.random() * 3) * Math.PI / 2\n      dummy.rotation.x = (.5 + Math.random()) * Math.PI / 2\n      dummy.updateMatrix()\n      this.treeInstance.setMatrixAt(i, dummy.matrix)\n    }\n\n    this.treeInstance.instanceMatrix.needsUpdate = true\n  }\n\n  animate = props => {}\n  dispose = () => {}\n}\n","// import classes from 'multiple-extend'\nimport THREE from 'libs/engines/3d/three'\n// import Unit from 'libs/engines/3d/Unit'\nimport transitionHandler from 'libs/utils/handlers/transitionHandler'\nimport modelLoader from 'libs/engines/3d/modelLoader'\n\nimport coinModel from 'libs/engines/3d/models/coin.glb'\n\n\nconst coinAmount = 25\nconst ArenaRadius = 10\n// const xAxis = new THREE.Vector3(1, 0, 0)\n// const yAxis = new THREE.Vector3(0, 1, 0)\n// const zAxis = new THREE.Vector3(0, 0, 1)\n\nvar dummy = new THREE.Object3D()\n\nconst coinInitialPos = () =>\n  new THREE.Vector3(\n    (Math.random() - .5) * 2 * ArenaRadius * .7,\n    ArenaRadius * 2,\n    (Math.random() - .5) * 2 * ArenaRadius * .7,\n  )\n\n\nexport default class Coins extends transitionHandler {\n  constructor(props) {\n    super(props)\n\n    this.coins = Array\n      .from(\n        {length: coinAmount},\n        (coin, index) => ({\n          index: index,\n          emitted: false,\n          position: coinInitialPos()\n        })\n      )\n\n    this.loadModel()\n  }\n\n  loadModel = async () => {\n    const coinMesh = await modelLoader(coinModel)\n\n    this.coinInstance = new THREE.InstancedMesh(coinMesh.children[0].geometry, coinMesh.children[0].material, coinAmount)\n    this.coinInstance.instanceMatrix.setUsage( THREE.DynamicDrawUsage )\n    this.props.scene.add(this.coinInstance)\n\n    for (let i = 0; i < coinAmount; i++) {\n      dummy.position.copy(coinInitialPos())\n      dummy.scale.set(5, 5, 5)\n      dummy.updateMatrix()\n      this.coinInstance.setMatrixAt(i, dummy.matrix)\n    }\n    this.coinInstance.instanceMatrix.needsUpdate = true\n\n    this.emmitCoin()\n  }\n\n  animate = props => {\n    if (!this.coinInstance)\n      return\n\n    // super.animate(props)\n    this.animateTransitions()\n\n    this.coins.forEach((coin, index) => {\n      if (coin.emitted)\n        dummy.position.copy(coin.position)\n      else\n        dummy.position.set(0, ArenaRadius * 5, 0)\n\n      dummy.rotation.y = (index * 1000 + props.frameNumber * 100) / props.maxFrameNumber * Math.PI\n\n      dummy.updateMatrix()\n      this.coinInstance.setMatrixAt(index, dummy.matrix)\n    })\n    this.coinInstance.instanceMatrix.needsUpdate = true\n  }\n\n  dispose = () =>\n    clearInterval(this.emmitCoinTimeout)\n\n\n  emmitCoin = () => {\n    const hiddenCoins = this.coins\n      .filter(coin => !coin.emitted)\n\n    if (hiddenCoins.length > 0) {\n      const coinToEmmit = hiddenCoins[0]\n\n      this.coins[coinToEmmit.index].position = coinInitialPos()\n      this.coins[coinToEmmit.index].emitted = true\n      this.registerTransition({\n        variable: this.coins[coinToEmmit.index].position,\n        value: (new THREE.Vector3()).copy(this.coins[coinToEmmit.index].position).setY(-1),\n        numberOfFrames: 350,\n        onComplete: () => this.coins[coinToEmmit.index].emitted = false\n      })\n\n      dummy.position.copy(this.coins[coinToEmmit.index].position)\n      this.coinInstance.setMatrixAt(coinToEmmit.index, dummy.matrix)\n    }\n\n    this.emmitCoinTimeout = setTimeout(\n      () => this.emmitCoin(),\n      Math.round((1 + Math.random()) * 255)\n    )\n  }\n}\n","import Unit from 'libs/engines/3d/Unit'\n\n\nconst lightDistanceToModel = 15\n\n\nexport default class Lowpoly extends Unit {\n  constructor(props) {\n    super(props)\n\n    const { scene, THREE } = props\n\n    this.light0 = new THREE.HemisphereLight( 0xffffff, 0x444444, 1.25 )\n    this.light0.position.set( 0, lightDistanceToModel, 0 )\n    scene.add( this.light0 )\n\n    // this.light1 = new THREE.HemisphereLight( 0xffffff, 0x444444, 0.95 )\n    // this.light1.position.set( 0, -lightDistanceToModel, 0 )\n    // scene.add( this.light1 )\n    \n    this.light2 = new THREE.DirectionalLight( 0xee55ee, 2.95 )\n    this.light2.position.set( lightDistanceToModel, 7, 0 )\n    this.light2.castShadow = true\n    scene.add( this.light2 )\n\n    this.light3 = new THREE.DirectionalLight( 0x77bbee, 2.95 )\n    this.light3.position.set( lightDistanceToModel * Math.cos(Math.PI * 2 / 3), 7, lightDistanceToModel * Math.sin(Math.PI * 2 / 3) )\n    this.light3.castShadow = true\n    scene.add( this.light3 )\n\n    // this.light4 = new THREE.DirectionalLight( 0x0088ff, 2.95 )\n    // this.light4.position.set( lightDistanceToModel * Math.cos(Math.PI * 4 / 3), 3, lightDistanceToModel * Math.sin(Math.PI * 4 / 3) )\n    // this.light4.castShadow = true\n    // scene.add( this.light4 )\n  }\n\n  animate = props => {\n    const angle2 = props.frameNumber * 10 / props.maxFrameNumber * Math.PI * 2\n    const angle3 = angle2 + Math.PI * 2 / 3\n    // const angle4 = angle3 + Math.PI * 2 / 3\n    const cos2 = Math.cos(angle2)\n    const cos3 = Math.cos(angle3)\n    // const cos4 = Math.cos(angle4)\n\n    this.light2.position.set(lightDistanceToModel * cos2, 3, lightDistanceToModel * ((1 - cos2 * cos2) ** .5))\n    this.light3.position.set(lightDistanceToModel * cos3, 3, lightDistanceToModel * ((1 - cos3 * cos3) ** .5))\n    // this.light4.position.set(lightDistanceToModel * cos4, 3, lightDistanceToModel * ((1 - cos4 * cos4) ** .5))\n  }\n\n  dispose = () => {}\n}\n","import { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\nimport Unit from 'libs/engines/3d/Unit'\n\n\nconst vertShader = `\n  varying vec2 vUv;\n\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }\n`\nconst fragShader = `\n  uniform sampler2D tDiffuse;\n  uniform vec2 u_resolution;\n  varying vec2 vUv;\n\n  void main() {\n    vec2 pos = gl_FragCoord.xy / u_resolution.xy - 1.0;\n    float alpha = clamp(pow(pow(abs(pos.x), 2.25) + pow(abs(pos.y), 2.25), 0.5) / 1.35, 0.0, 1.0);\n\n    vec4 color = texture2D( tDiffuse, vUv );\n    vec3 backgroundColor = vec3(0.5, 0.5, 0.5);\n    color.rgb = color.rgb * (1.0 - alpha) + backgroundColor * alpha;\n    gl_FragColor = vec4(color.rgb, 1.0);\n  }\n`\n\n\nexport default class VignettePostprocessing extends Unit {\n  constructor(props) {\n    super(props)\n\n    this.uselessVec2 = new props.THREE.Vector2()\n\n    const vignetteEffect = {\n      uniforms: {\n        \"tDiffuse\": { value: null },\n        \"u_resolution\": {type: \"v2\", value: props.renderer.getSize(this.uselessVec2)}\n      },\n      vertexShader: vertShader,\n      fragmentShader: fragShader,\n    }\n    \n    this.vignetteShader = new ShaderPass(vignetteEffect)\n    props.composer.addPass(this.vignetteShader)\n  }\n\n  animate = props =>\n    this.vignetteShader.uniforms &&\n      (this.vignetteShader.uniforms[\"u_resolution\"].value =\n        (this.props.renderer.getSize(this.uselessVec2)))\n\n  dispose = () => {}\n}\n","import { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\nimport Unit from 'libs/engines/3d/Unit'\n\n\nconst vertShader = `\n  varying vec2 vUv;\n\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }\n`\nconst fragShader = `\n  uniform float amount;\n  uniform sampler2D tDiffuse;\n  varying vec2 vUv;\n\n  float random( vec2 p )\n  {\n    vec2 K1 = vec2(\n      23.14069263277926,\n      2.665144142690225\n    );\n    return fract( cos( dot(p,K1) ) * 12345.6789 );\n  }\n\n  void main() {\n\n    vec4 color = texture2D( tDiffuse, vUv );\n    vec2 uvRandom = vUv;\n    uvRandom.y *= random(vec2(uvRandom.y,amount));\n    color.rgb = color.rgb * 0.8 + random(uvRandom) * 0.12;\n    gl_FragColor = vec4( color );\n  }\n`\n\n\nexport default class FilmGrainPostprocessing extends Unit {\n  constructor(props) {\n    super(props)\n\n    const filmGrainEffect = {\n      uniforms: {\n        \"tDiffuse\": { value: null },\n        \"amount\": { value: 1 }\n      },\n      vertexShader: vertShader,\n      fragmentShader: fragShader,\n    }\n    \n    this.filmGrainShader = new ShaderPass(filmGrainEffect)\n    props.composer.addPass(this.filmGrainShader)\n  }\n\n  animate = props =>\n    this.filmGrainShader.uniforms && (this.filmGrainShader.uniforms[\"amount\"].value = props.frameNumber)\n\n  dispose = () => {}\n}\n","/**\n * @author spidersharma / http://eduperiment.com/\n */\n\nimport {\n\tAdditiveBlending,\n\tColor,\n\tLinearFilter,\n\tMeshBasicMaterial,\n\tRGBAFormat,\n\tShaderMaterial,\n\tUniformsUtils,\n\tVector2,\n\tVector3,\n\tWebGLRenderTarget\n} from \"three\";\nimport { Pass } from \"three/examples/jsm/postprocessing/Pass.js\";\nimport { CopyShader } from \"three/examples/jsm/shaders/CopyShader.js\";\nimport { LuminosityHighPassShader } from \"three/examples/jsm/shaders/LuminosityHighPassShader.js\";\n\n/**\n * UnrealBloomPass is inspired by the bloom pass of Unreal Engine. It creates a\n * mip map chain of bloom textures and blurs them with different radii. Because\n * of the weighted combination of mips, and because larger blurs are done on\n * higher mips, this effect provides good quality and performance.\n *\n * Reference:\n * - https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\n */\nvar UnrealBloomPass = function ( resolution, strength, radius, threshold ) {\n\n\tPass.call( this );\n\n\tthis.strength = ( strength !== undefined ) ? strength : 1;\n\tthis.radius = radius;\n\tthis.threshold = threshold;\n\tthis.resolution = ( resolution !== undefined ) ? new Vector2( resolution.x, resolution.y ) : new Vector2( 256, 256 );\n\n\t// create color only once here, reuse it later inside the render function\n\tthis.clearColor = new Color( 0, 0, 0 );\n\n\t// render targets\n\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\tthis.renderTargetsHorizontal = [];\n\tthis.renderTargetsVertical = [];\n\tthis.nMips = 5;\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tthis.renderTargetBright = new WebGLRenderTarget( resx, resy, pars );\n\tthis.renderTargetBright.texture.name = \"UnrealBloomPass.bright\";\n\tthis.renderTargetBright.texture.generateMipmaps = false;\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tvar renderTargetHorizonal = new WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetHorizonal.texture.name = \"UnrealBloomPass.h\" + i;\n\t\trenderTargetHorizonal.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsHorizontal.push( renderTargetHorizonal );\n\n\t\tvar renderTargetVertical = new WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetVertical.texture.name = \"UnrealBloomPass.v\" + i;\n\t\trenderTargetVertical.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsVertical.push( renderTargetVertical );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// luminosity high pass material\n\n\tif ( LuminosityHighPassShader === undefined )\n\t\tconsole.error( \"UnrealBloomPass relies on LuminosityHighPassShader\" );\n\n\tvar highPassShader = LuminosityHighPassShader;\n\tthis.highPassUniforms = UniformsUtils.clone( highPassShader.uniforms );\n\n\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = threshold;\n\tthis.highPassUniforms[ \"smoothWidth\" ].value = 0.01;\n\n\tthis.materialHighPassFilter = new ShaderMaterial( {\n\t\tuniforms: this.highPassUniforms,\n\t\tvertexShader: highPassShader.vertexShader,\n\t\tfragmentShader: highPassShader.fragmentShader,\n\t\tdefines: {}\n\t} );\n\n\t// Gaussian Blur Materials\n\tthis.separableBlurMaterials = [];\n\tvar kernelSizeArray = [ 3, 5, 7, 9, 11 ];\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tthis.separableBlurMaterials.push( this.getSeperableBlurMaterial( kernelSizeArray[ i ] ) );\n\n\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new Vector2( resx, resy );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// Composite material\n\tthis.compositeMaterial = this.getCompositeMaterial( this.nMips );\n\tthis.compositeMaterial.uniforms[ \"blurTexture1\" ].value = this.renderTargetsVertical[ 0 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture2\" ].value = this.renderTargetsVertical[ 1 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture3\" ].value = this.renderTargetsVertical[ 2 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture4\" ].value = this.renderTargetsVertical[ 3 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture5\" ].value = this.renderTargetsVertical[ 4 ].texture;\n\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = strength;\n\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = 0.1;\n\tthis.compositeMaterial.needsUpdate = true;\n\n\tvar bloomFactors = [ 1.0, 0.8, 0.6, 0.4, 0.2 ];\n\tthis.compositeMaterial.uniforms[ \"bloomFactors\" ].value = bloomFactors;\n\tthis.bloomTintColors = [ new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ),\n\t\t\t\t\t\t\t new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ) ];\n\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\n\n\t// copy material\n\tif ( CopyShader === undefined ) {\n\n\t\tconsole.error( \"UnrealBloomPass relies on CopyShader\" );\n\n\t}\n\n\tvar copyShader = CopyShader;\n\n\tthis.copyUniforms = UniformsUtils.clone( copyShader.uniforms );\n\tthis.copyUniforms[ \"opacity\" ].value = 1.0;\n\n\tthis.materialCopy = new ShaderMaterial( {\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: AdditiveBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\n\tthis.oldClearColor = new Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.basic = new MeshBasicMaterial();\n\n\tthis.fsQuad = new Pass.FullScreenQuad( null );\n\n};\n\nUnrealBloomPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: UnrealBloomPass,\n\n\tdispose: function () {\n\n\t\tfor ( var i = 0; i < this.renderTargetsHorizontal.length; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].dispose();\n\n\t\t}\n\n\t\tfor ( var i = 0; i < this.renderTargetsVertical.length; i ++ ) {\n\n\t\t\tthis.renderTargetsVertical[ i ].dispose();\n\n\t\t}\n\n\t\tthis.renderTargetBright.dispose();\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar resx = Math.round( width / 2 );\n\t\tvar resy = Math.round( height / 2 );\n\n\t\tthis.renderTargetBright.setSize( resx, resy );\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].setSize( resx, resy );\n\t\t\tthis.renderTargetsVertical[ i ].setSize( resx, resy );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new Vector2( resx, resy );\n\n\t\t\tresx = Math.round( resx / 2 );\n\t\t\tresy = Math.round( resy / 2 );\n\n\t\t}\n\n\t},\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( this.clearColor, 0 );\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( false );\n\n\t\t// Render input to screen\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\tthis.fsQuad.material = this.basic;\n\t\t\tthis.basic.map = readBuffer.texture;\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// 1. Extract Bright Areas\n\n\t\tthis.highPassUniforms[ \"tDiffuse\" ].value = readBuffer.texture;\n\t\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = this.threshold;\n\t\tthis.fsQuad.material = this.materialHighPassFilter;\n\n\t\trenderer.setRenderTarget( this.renderTargetBright );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// 2. Blur All the mips progressively\n\n\t\tvar inputRenderTarget = this.renderTargetBright;\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.fsQuad.material = this.separableBlurMaterials[ i ];\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = inputRenderTarget.texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = UnrealBloomPass.BlurDirectionX;\n\t\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = this.renderTargetsHorizontal[ i ].texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = UnrealBloomPass.BlurDirectionY;\n\t\t\trenderer.setRenderTarget( this.renderTargetsVertical[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tinputRenderTarget = this.renderTargetsVertical[ i ];\n\n\t\t}\n\n\t\t// Composite All the mips\n\n\t\tthis.fsQuad.material = this.compositeMaterial;\n\t\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = this.strength;\n\t\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = this.radius;\n\t\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\n\n\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ 0 ] );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// Blend it additively over the input texture\n\n\t\tthis.fsQuad.material = this.materialCopy;\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetsHorizontal[ 0 ].texture;\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( true );\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( readBuffer );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// Restore renderer settings\n\n\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t},\n\n\tgetSeperableBlurMaterial: function ( kernelRadius ) {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"KERNEL_RADIUS\": kernelRadius,\n\t\t\t\t\"SIGMA\": kernelRadius\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"colorTexture\": { value: null },\n\t\t\t\t\"texSize\": { value: new Vector2( 0.5, 0.5 ) },\n\t\t\t\t\"direction\": { value: new Vector2( 0.5, 0.5 ) }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"#include <common>\\\n\t\t\t\tvarying vec2 vUv;\\n\\\n\t\t\t\tuniform sampler2D colorTexture;\\n\\\n\t\t\t\tuniform vec2 texSize;\\\n\t\t\t\tuniform vec2 direction;\\\n\t\t\t\t\\\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\n\t\t\t\t}\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\n\t\t\t\t\tfloat fSigma = float(SIGMA);\\\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\n\t\t\t\t\t\tfloat x = float(i);\\\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\\\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\\\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\\\n\t\t\t\t\t\tweightSum += 2.0 * w;\\\n\t\t\t\t\t}\\\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 0.1);\\n\\\n\t\t\t\t}\"\n\t\t} );\n\n\t},\n\n\tgetCompositeMaterial: function ( nMips ) {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"NUM_MIPS\": nMips\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"blurTexture1\": { value: null },\n\t\t\t\t\"blurTexture2\": { value: null },\n\t\t\t\t\"blurTexture3\": { value: null },\n\t\t\t\t\"blurTexture4\": { value: null },\n\t\t\t\t\"blurTexture5\": { value: null },\n\t\t\t\t\"dirtTexture\": { value: null },\n\t\t\t\t\"bloomStrength\": { value: 1.0 },\n\t\t\t\t\"bloomFactors\": { value: null },\n\t\t\t\t\"bloomTintColors\": { value: null },\n\t\t\t\t\"bloomRadius\": { value: 0.0 }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"varying vec2 vUv;\\\n\t\t\t\tuniform sampler2D blurTexture1;\\\n\t\t\t\tuniform sampler2D blurTexture2;\\\n\t\t\t\tuniform sampler2D blurTexture3;\\\n\t\t\t\tuniform sampler2D blurTexture4;\\\n\t\t\t\tuniform sampler2D blurTexture5;\\\n\t\t\t\tuniform sampler2D dirtTexture;\\\n\t\t\t\tuniform float bloomStrength;\\\n\t\t\t\tuniform float bloomRadius;\\\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\n\t\t\t\t\\\n\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\n\t\t\t\t}\\\n\t\t\t\t\\\n\t\t\t\tvoid main() {\\\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\n\t\t\t\t}\"\n\t\t} );\n\n\t}\n\n} );\n\nUnrealBloomPass.BlurDirectionX = new Vector2( 1.0, 0.0 );\nUnrealBloomPass.BlurDirectionY = new Vector2( 0.0, 1.0 );\n\nexport { UnrealBloomPass };\n","import { UnrealBloomPass } from './customUnrealBloomPass'\nimport Unit from 'libs/engines/3d/Unit'\n\n\nexport default class BloomPostprocessing extends Unit {\n  constructor(props) {\n    super(props)\n\n    const {\n      renderer,\n      composer,\n      THREE,\n    } = props\n\n    this.pass = new UnrealBloomPass(\n      new THREE.Vector2(renderer.getSize(new THREE.Vector2()).x, renderer.getSize(new THREE.Vector2()).y),\n      1.5,\n      1.5,\n      0.01,\n    )\n    composer.addPass(this.pass)\n  }\n\n  animate = props => {}\n  dispose = () => {}\n}\n","import React, { Component } from 'react'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nimport Scene from 'libs/engines/3d/Scene'\nimport Character from 'libs/engines/3d/units/Character'\nimport Landscape from 'libs/engines/3d/units/Landscape'\nimport Coins from 'libs/engines/3d/units/Coins'\nimport Lights from 'libs/engines/3d/units/Lights'\nimport VignettePostprocessing from 'libs/engines/3d/units/VignettePostprocessing'\nimport FilmGrainPostprocessing from 'libs/engines/3d/units/FilmGrainPostprocessing'\nimport BloomPostprocessing from 'libs/engines/3d/units/BloomPostprocessing'\n// import EasterEgg from 'libs/engines/3d/units/EasterEgg'\n\n\nexport default class ThreeScene extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      FilmGrainPostprocessing: true,\n      BloomPostprocessing: true,\n      VignettePostprocessing: true,\n    }\n\n    this.viewerRef = new React.createRef()\n\n    this.scene = new Scene({\n      units: {\n        Character: {\n          unit: Character,\n          disabled: false,\n        },\n        Landscape: {\n          unit: Landscape,\n          disabled: false,\n        },\n        Coins: {\n          unit: Coins,\n          disabled: false,\n        },\n        Lights: {\n          unit: Lights,\n          disabled: false,\n        },\n        FilmGrainPostprocessing: {\n          unit: FilmGrainPostprocessing,\n          disabled: false,\n        },\n        BloomPostprocessing: {\n          unit: BloomPostprocessing,\n          disabled: false,\n        },\n        VignettePostprocessing: {\n          unit: VignettePostprocessing,\n          disabled: false,\n        },\n        // EasterEgg: {\n        //   unit: EasterEgg,\n        //   disabled: false,\n        // },\n      }\n    })\n  }\n\n  componentDidMount() {\n    this.resizeObs = new ResizeObserver(this.resize.bind(this))\n      .observe(this.viewerRef.current)\n\n    this.scene.init(this.viewerRef.current)\n  }\n\n  componentWillUnmount = () => {\n    this.scene.dispose()\n    // this.viewerRef.removeChild(this.renderer.domElement)\n  }\n\n  resize() {\n    const ViewerDiv = this.viewerRef && this.viewerRef.current\n    \n    if (!ViewerDiv)\n      return\n\n    this.scene.resize(ViewerDiv.clientWidth, ViewerDiv.clientHeight)\n  }\n\n  render = () =>\n    <>\n      <div\n        className=\"Viewer\"\n        ref={this.viewerRef}\n      >\n        <div id=\"zone-joystick\" />\n      </div>\n      <div className=\"buttons\">\n        {Object.keys(this.state).map((key, index) =>\n          <div\n            className=\"buttons__item\"\n            onClick={() => {\n              // this.scene.toggleUnit(key)\n              this.scene.scene.composer.passes[index + 1].enabled = !this.state[key]\n              this.setState({[key]: !this.state[key]})\n            }}\n          >\n            {key} {this.state[key] ? \"on\" : \"off\"}\n          </div>\n        )}\n      </div>\n    </>\n}\n","import React, { Component } from 'react'\n\n\nexport default class TextArea extends Component {\n  constructor(props) {\n    super(props)\n  }\n  \n  render = () =>\n    <div className=\"text-area\">\n      <div className=\"text-area__left-column\">\n        <div className=\"text-area__left-column__text\">\n          что голодная смерть британца в тяжёлой депрессии может рассказать нам о том, как мы распоряжаемся ресурсами и будем распоряжаться ими в будущем? что такое безусловный базовый доход? как изменится ваша жизнь, получай вы каждый месяц зарплату только за то, что живёте? \n        </div>\n      </div>\n      <div className=\"text-area__right-column\">\n        <h1 className=\"h1\">\n          SITTING&nbsp;IN&nbsp;A<br />\n          ROOM.&nbsp;I&nbsp;AM.\n        </h1>\n      </div>\n    </div>\n}\n\n","import React from 'react'\n\nimport ThreeScene from './components/ThreeScene'\nimport TextArea from './components/TextArea'\n\nimport 'styles/index.sass'\n\n\nconst App = () =>\n  <>\n    <ThreeScene/>\n    <TextArea/>\n  </>\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}