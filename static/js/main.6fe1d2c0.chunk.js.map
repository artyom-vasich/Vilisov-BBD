{"version":3,"sources":["libs/engines/3d/models/Astronaut.glb","libs/engines/3d/models/VoxelGuy.glb","libs/engines/3d/models/Woman.glb","libs/engines/3d/models/tree.glb","libs/engines/3d/textures/blackgrid.jpg","libs/engines/3d/models/coin.glb","libs/engines/3d/three.js","libs/engines/3d/Unit.js","libs/utils/handlers/transitionHandler/timingFunctions.js","libs/utils/handlers/transitionHandler/index.js","libs/engines/3d/Scene.js","libs/utils/isTouchDevice.js","libs/engines/3d/modelLoader.js","libs/engines/3d/units/Character.js","libs/engines/3d/textureLoader.js","libs/engines/3d/units/Landscape.js","libs/engines/3d/units/Coins.js","libs/engines/3d/units/Lights.js","libs/engines/3d/units/Fog.js","libs/engines/3d/units/Controls.js","libs/engines/3d/units/BloomPostprocessing/index.js","components/ThreeScene.js","components/TextArea.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","window","THREE","Unit","props","animate","frame","dispose","this","fns","t","k","easeIn","easeOut","easeInOut","TransitionsHandler","animateTransitions","unregisteredTransitions","transitions","forEach","transition","currentFrame","numberOfFrames","push","alpha","timingFuntion","timingFuntions","variable","copy","initialValue","clone","lerp","value","transitionToUnregister","onComplete","unregisterTransition","id","registerTransition","currentId","Number","MAX_SAFE_INTEGER","transitionId","transitionIndex","map","indexOf","splice","unregisterAllTransitions","length","noActiveTransitions","sceneVariables","renderer","undefined","camera","scene","Scene","composer","controls","clock","Clock","frameNumber","units","unitsToggled","init","ViewerDiv","W","clientWidth","H","clientHeight","optimise","WebGLRenderer","antialias","setClearColor","setSize","setPixelRatio","devicePixelRatio","shadowMap","enabled","appendChild","domElement","PerspectiveCamera","OrbitControls","position","z","update","EffectComposer","addPass","RenderPass","initUnits","frameId","requestAnimationFrame","disposeUnits","cancelAnimationFrame","resize","aspect","updateProjectionMatrix","Object","keys","unitName","input","Controls","maxFrameNumber","render","getDelta","unit","disabled","children","remove","toggleUnits","transitionHandler","document","createEvent","e","model","a","Promise","res","rej","GLTFLoader","load","gltf","progress","console","log","loaded","total","error","minPosition","Vector3","maxPosition","xAxis","yAxis","zAxis","nextPos","cameraAngleX","cameraAngleConrolsApplied","Vector2","moveCameraAngleApplied","cameraToTarget","modelQuaternion","Quaternion","tmpVector","models","file","VoxelGuyModel","scale","AstronautModel","WomanModel","Character","loadModel","randomModel","Math","round","random","modelLoader","gtlf","mixer","AnimationMixer","action","clipAction","animations","play","set","add","move","angleTo","sign","x","PI","isTouchDevice","mouse","alphaX","alphaY","applyAxisAngle","clamp","collisionFlag","trees","Landscape","i","distanceTo","quaternion","slerp","setFromUnitVectors","normalize","y","target","setY","TextureLoader","texture","textureLoader","planeTextureImage","planeTexture","wrapS","RepeatWrapping","wrapT","repeat","plane","Mesh","PlaneGeometry","MeshBasicMaterial","side","DoubleSide","rotateX","treeModel","treeMesh","dummy","Object3D","treePos","treeInstance","InstancedMesh","geometry","material","instanceMatrix","setUsage","DynamicDrawUsage","randomX","max","randomZ","ArenaRadius","rotation","updateMatrix","setMatrixAt","matrix","needsUpdate","initialScale","finalScale","charachterPos","coinInitialPos","Coins","coinModel","coinMesh","coinInstance","middleOfArray","floor","coins","emmitCoin","setTimeout","coin","shownSprite","sprites","index","text","sprite","TextSprite","color","redrawInterval","textSize","minFontSize","maxFontSize","Array","from","Lowpoly","angle2","angle3","angle4","light2","cos","sin","light3","light4","DirectionalLight","Fog","fog","initialThis","moveFlags","up","code","pressed","down","left","right","options","zone","getElementById","mode","innerWidth","innerHeight","joystickManager","nipplejs","create","on","data","force","angle","radian","getDirectionState","direction","key","reduce","b","multiplyScalar","handleMouseMove","pageX","pageY","handleKeyDown","keyCode","handleKeyUp","removeEventListener","addEventListener","BloomPostprocessing","pass","EffectPass","BloomEffect","ThreeScene","componentWillUnmount","className","ref","viewerRef","state","React","createRef","Lights","resizeObs","ResizeObserver","bind","observe","current","Component","TextArea","App","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6fe1d2c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Astronaut.ac9701ba.glb\";","module.exports = __webpack_public_path__ + \"static/media/VoxelGuy.3119f9c6.glb\";","module.exports = __webpack_public_path__ + \"static/media/Woman.c9ed6341.glb\";","module.exports = __webpack_public_path__ + \"static/media/tree.46613934.glb\";","module.exports = __webpack_public_path__ + \"static/media/blackgrid.3d7d5793.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coin.e8a0d624.glb\";","import * as THREE from 'three'\n\nwindow.THREE = THREE\n\nexport default THREE","export default class Unit {\n  constructor(props) { this.props = props }\n  animate = frame => {}\n  dispose = () => {}\n}","let fns = {}\n\nfns.linear = t => t\nfns.easeInQuad = t => t * t\nfns.easeOutQuad = t => t * (2 - t)\nfns.easeInOutQuad = t => t < .5 ? 2 * (t ** 2) : -1 + (4 - 2 * t) * t\nfns.easeInCubic = t => t * t * t\nfns.easeOutCubic = t => (--t) * t * t + 1\nfns.easeInOutCubic = t => t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\nfns.easeInQuart = t => t * t * t * t\nfns.easeOutQuart = t => 1-(--t) * t * t * t\nfns.easeInOutQuart = t => t < .5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t\nfns.easeInQuint = t => t * t * t * t * t\nfns.easeOutQuint = t => 1 + (--t) * t * t * t * t\nfns.easeInOutQuint = t => t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t\n\nfns.easeIn = (t, k) => (t ** k)\nfns.easeOut = (t, k) => 1 - fns.easeIn(1 - t, k)\nfns.easeInOut = (t, k) => t < .5 ?\n  fns.easeIn(t * 2, k) / 2\n  :\n  1 - fns.easeIn((1 - t) * 2, k) / 2\n\nfns.easeIn2 = t => fns.easeIn(t, 1.5)\nfns.easeOut2 = t => fns.easeOut(t, 1.5)\nfns.easeInOut2 = t => fns.easeInOut(t, 1.5)\n\n\nexport default fns","import Unit from 'libs/engines/3d/Unit'\n\nimport timingFuntions from './timingFunctions'\n\nexport default class TransitionsHandler extends Unit {\n  constructor(props) {\n    super(props)\n    this.transitions = []\n    this.currentId = 0\n  }\n\n  animateTransitions = () => {\n    let unregisteredTransitions = []\n\n    this.transitions.forEach(transition => {\n      if (transition.currentFrame >= transition.numberOfFrames)\n        unregisteredTransitions.push(transition)\n      else {\n        // const alpha = 1 / (transition.numberOfFrames - transition.currentFrame)\n        const alpha = transition.currentFrame / transition.numberOfFrames\n        const timingFuntion = timingFuntions[transition.timingFuntion] || (t => t)\n\n        transition.variable.copy(transition.initialValue\n          .clone()\n          .lerp(transition.value, timingFuntion(alpha)))\n\n        transition.currentFrame++\n      }\n    })\n\n    unregisteredTransitions.forEach(transitionToUnregister => {\n      transitionToUnregister.onComplete && transitionToUnregister.onComplete()\n      this.unregisterTransition(transitionToUnregister.id)\n    })\n  }\n\n  registerTransition = props => {\n    this.transitions.push({\n      id: this.currentId = (this.currentId + 1) % Number.MAX_SAFE_INTEGER,\n      variable: props.variable,\n      value: props.value.clone(),\n      initialValue: props.variable.clone(),\n      numberOfFrames: props.numberOfFrames || 10,\n      currentFrame: 0,\n      timingFuntion: props.timingFuntion || \"none\",\n      onComplete: props.onComplete || (() => {}),\n    })\n\n    return this.currentId\n  }\n\n  unregisterTransition = transitionId => {\n    const transitionIndex = this.transitions\n      .map(transition => transition.id)\n      .indexOf(transitionId)\n\n    if (transitionIndex !== -1)\n      this.transitions.splice(transitionIndex, 1)\n  }\n\n  unregisterAllTransitions = () => this.transitions.length = 0\n\n  noActiveTransitions = () => this.transitions.length === 0\n\n}","import THREE from 'libs/engines/3d/three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\n// import { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\n// import { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\nimport { EffectComposer, RenderPass } from 'postprocessing'\n\nimport transitionHandler from 'libs/utils/handlers/transitionHandler'\n\n\nconst targetToCamera = -15\nconst maxFrameNumber = 5000\n\nvar sceneVariables = {\n  renderer: undefined,\n  camera: undefined,\n  scene: new THREE.Scene(),\n  composer: undefined,\n  controls: undefined,\n\n  clock: new THREE.Clock(),\n  frameNumber: 0,\n\n  units: {},\n  unitsToggled: false,\n}\n\n\nexport default class Scene extends transitionHandler {\n\n  constructor(props) {\n    super(props)\n    this.scene = sceneVariables\n  }\n\n  init = ViewerDiv => {\n    const W = ViewerDiv.clientWidth\n    const H = ViewerDiv.clientHeight\n\n    //ADD RENDERER\n    const optimise = W > 1200\n    this.scene.renderer = new THREE.WebGLRenderer({ antialias: !optimise, alpha: true })\n    this.scene.renderer.setClearColor(0x000000, 0)\n    this.scene.renderer.setSize(W, H)\n    this.scene.renderer.setPixelRatio(!optimise ? window.devicePixelRatio : 1)\n    this.scene.renderer.shadowMap.enabled = true\n\n    ViewerDiv.appendChild(this.scene.renderer.domElement)\n\n    //ADD CAMERA\n    this.scene.camera = new THREE.PerspectiveCamera(\n      75,\n      W / H,\n      0.1,\n      1000\n    )\n    this.scene.controls = new OrbitControls(this.scene.camera, this.scene.renderer.domElement)\n    this.scene.controls.enabled = false\n    this.scene.camera.position.z = targetToCamera\n    this.scene.controls.update()\n\n    this.scene.composer = new EffectComposer(this.scene.renderer)\n    this.scene.composer.addPass(new RenderPass(this.scene.scene, this.scene.camera))\n\n    this.initUnits()\n\n    if (!this.frameId)\n      this.frameId = requestAnimationFrame(this.animate)\n  }\n\n  dispose = () => {\n    this.disposeUnits()\n    cancelAnimationFrame(this.frameId)\n  }\n\n  resize = (W, H) => {\n    if (!this.scene.renderer || !this.scene.camera)\n      return\n\n    const optimise = W > 1200\n\n    this.scene.camera.aspect = W / H\n    this.scene.camera.updateProjectionMatrix()\n\n    this.scene.renderer.setSize(W, H)\n    this.scene.renderer.setPixelRatio(!optimise ? window.devicePixelRatio : 1)\n  }\n\n  animate = () => {\n    this.scene.frameNumber = (this.scene.frameNumber + 1) % maxFrameNumber\n\n    const {\n      composer,\n      controls,\n      units,\n      clock,\n    } = this.scene\n\n    Object.keys(units)\n      .forEach(unitName =>\n        units[unitName].animate({\n          THREE: THREE,\n          ...this.scene,\n          input: this.scene.units.Controls,\n          maxFrameNumber: maxFrameNumber,\n        }))\n\n    controls.update()\n    // composer.render()\n    composer.render(clock.getDelta())\n\n    this.frameId = window.requestAnimationFrame(this.animate)\n  }\n\n\n  initUnits = () => {\n    const props = {\n      THREE: THREE,\n      ...this.scene,\n      input: this.scene.units.Controls,\n      maxFrameNumber: maxFrameNumber,\n    }\n\n    Object.keys(this.props.units)\n      .forEach(unitName => {\n        const unit = this.props.units[unitName]\n\n        if (!unit.disabled ^ this.scene.unitsToggled) {\n          this.scene.units[unitName] = new unit.unit(props)\n          this.scene.units[unitName].init &&\n            this.scene.units[unitName].init()\n        }\n      })\n  }\n\n  disposeUnits = () => {\n    const {\n      scene,\n      units,\n    } = this.scene\n\n    Object.keys(units)\n      .forEach(unitName => units[unitName].dispose())\n\n    //REDO THIS SHIT: units should unregister themselves\n    while(scene.children.length > 0)\n      scene.remove(scene.children[0])\n  }\n\n  toggleUnits = () => {\n    this.disposeUnits()\n    this.scene.unitsToggled = !this.scene.unitsToggled\n    this.initUnits()\n  }\n\n  // toggleUnit = unitName => {\n  //   // if (this.scene[unitName].enabled)\n  //   console.log(this.scene.scene.children)\n  // }\n}\n","export default () => {\n  try {  \n    document.createEvent(\"TouchEvent\")  \n    return true  \n  } catch (e) {  \n    return false  \n  }  \n}\n","import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\n\n\nexport default async model =>\n  new Promise((res, rej) =>\n    new GLTFLoader()\n      .load(\n        model,\n        gltf =>\n          res(gltf),\n        progress =>\n          console.log((progress.loaded / progress.total * 100) + '% loaded'),\n        error =>\n          rej(error),\n      )\n  )\n","import THREE from 'libs/engines/3d/three'\nimport Unit from 'libs/engines/3d/Unit'\nimport isTouchDevice from 'libs/utils/isTouchDevice'\n\nimport modelLoader from 'libs/engines/3d/modelLoader'\nimport AstronautModel from 'libs/engines/3d/models/Astronaut.glb'\nimport VoxelGuyModel from 'libs/engines/3d/models/VoxelGuy.glb'\nimport WomanModel from 'libs/engines/3d/models/Woman.glb'\n\n\nconst ArenaRadius = 300\nconst modelZOffset = -2\nconst minPosition = new THREE.Vector3(-ArenaRadius, -ArenaRadius, -ArenaRadius)\nconst maxPosition = new THREE.Vector3( ArenaRadius,  ArenaRadius,  ArenaRadius)\nconst xAxis = new THREE.Vector3(1, 0, 0)\nconst yAxis = new THREE.Vector3(0, 1, 0)\nconst zAxis = new THREE.Vector3(0, 0, 1)\n\nvar nextPos = new THREE.Vector3(0, 0, 0)\nvar cameraAngleX = 0\nvar cameraAngleConrolsApplied = new THREE.Vector2(0, 0)\nvar moveCameraAngleApplied = new THREE.Vector3()\nvar cameraToTarget = new THREE.Vector3()\nvar modelQuaternion = new THREE.Quaternion()\nvar tmpVector = new THREE.Vector3()\n\nconst models = [\n  {\n    file: VoxelGuyModel,\n    scale: 5,\n  },\n  {\n    file: AstronautModel,\n    scale: 1.25,\n  },\n  {\n    file: WomanModel,\n    scale: 3,\n  },\n]\n\n\nexport default class Character extends Unit {\n  constructor(props) {\n    super(props)\n\n    this.loadModel()\n  }\n\n  loadModel = async () => {\n    const randomModel = models[Math.round(Math.random() * (models.length - 1))]\n\n    this.gtlf = await modelLoader(randomModel.file)\n    this.model = this.gtlf.scene\n    this.mixer = new THREE.AnimationMixer( this.gtlf.scene )\n    this.action = this.mixer.clipAction( this.gtlf.animations[ 0 ] )\n    this.action.play()\n\n    this.model.scale.set(randomModel.scale, randomModel.scale, randomModel.scale)\n\n    this.props.scene.add(this.model)\n  }\n\n  animate = props => {\n    if (!this.model)\n      return\n    \n    cameraAngleX +=\n      props.input.move.z > 0 ?\n        props.input.move.angleTo(zAxis) / 150 * Math.sign(props.input.move.x)\n        :\n        (Math.PI - props.input.move.angleTo(zAxis)) / 150 * Math.sign(props.input.move.x)\n\n    if (!isTouchDevice())\n      cameraAngleConrolsApplied.set(\n        props.input.mouse.alphaX * Math.PI * 1.5 + cameraAngleX,\n        props.input.mouse.alphaY * Math.PI / 12\n      )\n    else\n      cameraAngleConrolsApplied.set(cameraAngleX, -Math.PI / 16)\n\n    moveCameraAngleApplied\n      .copy(props.input.move)\n        .applyAxisAngle(yAxis, cameraAngleConrolsApplied.x)\n\n    nextPos.copy(this.model.position)\n      .add(moveCameraAngleApplied)\n    nextPos.clamp(minPosition, maxPosition)\n\n    let collisionFlag = false\n    const trees = props.units?.Landscape?.trees\n\n    if (trees)\n      for (let i = 0; i < trees.length && !collisionFlag; i++) {\n        const distance = nextPos.distanceTo(trees[i].position)\n\n        if (distance < trees[i].scale * 1.25)\n          collisionFlag = true\n      }\n\n    if (!collisionFlag) {\n      this.model.position.copy(nextPos)\n      if (props.input.move.length() > .01)\n        this.mixer.update(props.clock.getDelta())\n    }\n\n    if (props.input.move.length() > 0)\n      this.model.quaternion.slerp(\n        modelQuaternion\n          .setFromUnitVectors(zAxis, moveCameraAngleApplied.normalize())\n        , .135)\n\n    cameraToTarget = (new THREE.Vector3(0, 0, -15))\n      .applyAxisAngle(xAxis, cameraAngleConrolsApplied.y)\n      .applyAxisAngle(yAxis, cameraAngleConrolsApplied.x)\n\n    this.props.controls.target.copy(this.model.position)\n    this.props.controls.target.setY(isTouchDevice() ? 7 : 5)\n    this.props.camera.position.copy(tmpVector.copy(this.props.controls.target).add(cameraToTarget))\n  }\n\n  dispose = () => {}\n}\n","import THREE from 'libs/engines/3d/three'\n\n\nexport default async file =>\n  new Promise((res, rej) =>\n    new THREE.TextureLoader()\n      .load(file,\n        texture =>\n          res(texture),\n        progress => {},\n        error =>\n          rej(error)\n      )\n  )","import clamp from 'clamp'\nimport THREE from 'libs/engines/3d/three'\nimport Unit from 'libs/engines/3d/Unit'\nimport modelLoader from 'libs/engines/3d/modelLoader'\nimport textureLoader from 'libs/engines/3d/textureLoader'\n\nimport treeModel from 'libs/engines/3d/models/tree.glb'\nimport planeTextureImage from 'libs/engines/3d/textures/blackgrid.jpg'\n\n\nconst treeAmount = 75\nconst ArenaRadius = 300\nconst xAxis = new THREE.Vector3(1, 0, 0)\nconst yAxis = new THREE.Vector3(0, 1, 0)\n// const zAxis = new THREE.Vector3(0, 0, 1)\n\nexport default class Character extends Unit {\n  constructor(props) {\n    super(props)\n\n    this.loadModel()\n  }\n\n  loadModel = async () => {\n    var planeTexture = await textureLoader(planeTextureImage)\n    planeTexture.wrapS = THREE.RepeatWrapping\n    planeTexture.wrapT = THREE.RepeatWrapping\n    planeTexture.repeat.set( 27, 27 )\n    this.plane = new THREE.Mesh(\n      new THREE.PlaneGeometry( 2 * ArenaRadius, 2 * ArenaRadius, 1, 1 ),\n      new THREE.MeshBasicMaterial({\n        map: planeTexture,\n        side: THREE.DoubleSide,\n      })\n    )\n    this.plane.rotateX(Math.PI / 2)\n    this.props.scene.add( this.plane )\n\n    const treeMesh = (await modelLoader(treeModel)).scene\n    var dummy = new THREE.Object3D()\n    var treePos = new THREE.Vector3()\n\n    this.treeInstance = new THREE.InstancedMesh(treeMesh.children[0].geometry, treeMesh.children[0].material, treeAmount)\n    this.treeInstance.instanceMatrix.setUsage( THREE.DynamicDrawUsage )\n    this.props.scene.add(this.treeInstance)\n\n    this.trees = []\n    for (let i = 0; i < treeAmount; i++) {\n      let randomX = Math.max(Math.random(), .1) * Math.sign(Math.random() - .5)\n      let randomZ = Math.max(Math.random(), .1) * Math.sign(Math.random() - .5)\n\n      treePos\n        .set(\n          ArenaRadius * randomX,\n          ArenaRadius / 8 * Math.random(),\n          ArenaRadius * randomZ,\n        )\n\n      let scale = (1 + Math.random()) * 10\n      dummy.scale.set(scale, scale, scale)\n      dummy.position.copy(treePos)\n      this.trees.push({\n        position: (new THREE.Vector3()).copy(dummy.position),\n        scale: scale,\n      })\n      dummy.rotation.y = (-.5 + Math.random()) * Math.PI / 2\n      dummy.rotation.x = (.5 + Math.random()) * Math.PI / 2\n      dummy.updateMatrix()\n      this.treeInstance.setMatrixAt(i, dummy.matrix)\n    }\n\n    this.treeInstance.instanceMatrix.needsUpdate = true\n  }\n\n  animate = props => {}\n  dispose = () => {}\n}\n","import TextSprite from 'three.textsprite'\nimport THREE from 'libs/engines/3d/three'\nimport transitionHandler from 'libs/utils/handlers/transitionHandler'\nimport modelLoader from 'libs/engines/3d/modelLoader'\n\nimport coinModel from 'libs/engines/3d/models/coin.glb'\n\n\nconst coinAmount = 300\nconst ArenaRadius = 300\nconst initialScale = new THREE.Vector3(12, 12, 12)\nconst finalScale = new THREE.Vector3(.1, .1, .1)\n\nvar dummy = new THREE.Object3D()\nvar charachterPos = new THREE.Vector3()\n\n\nconst coinInitialPos = () =>\n  new THREE.Vector3(\n    (Math.random() - .5) * 2 * ArenaRadius * .7,\n    35,\n    (Math.random() - .5) * 2 * ArenaRadius * .7,\n  )\n\n\nexport default class Coins extends transitionHandler {\n  constructor(props) {\n    super(props)\n\n    this.sprites = [\n      \"🌅\",\n      \"✨\",\n      \"❤️\",\n      \"💋🐸\",\n      \"🧠👌🏻\",\n      \"🛹👙\",\n      \"💻\",\n      \"🇮🇱\",\n      \"💜🌙\",\n      \"🇷🇺⬆️\",\n      \"🦊🛏\",\n      \"🔞\",\n      \"🥭\",\n      \"🏳️‍🌈\",\n      \"👨‍👨‍👦📕\",\n      \"🎨🙅🏻‍♀️\",\n      \"😎👮🏾‍♂️\",\n      \"🎤💩\",\n      \"🥖\",\n      \"👑\",\n      \"🧬🏆\",\n      \"🕹\",\n      \"💡\",\n      \"✊🏾🔥\",\n      \"🦠🏡\",\n      \"🐞🧝🏼‍♀\",\n      \"🎭🚧\",\n      \"🐖👃🏻\",\n      \"🐍🚸\",\n      \"⏳😬\",\n    ].map(text => {\n      let sprite = new TextSprite({\n        material: {\n          color: 0xFFFFFF,\n          // fog: false,\n        },\n        redrawInterval: false,\n        textSize: 3,\n        minFontSize: 128,\n        maxFontSize: 128,\n        texture: {\n          // fontFamily: `'RF-Dewi', sans-serif`,\n          // fontWeight: 700,\n          text: text,\n        },  \n      })\n      sprite.position.set(0, ArenaRadius * 2, 0)\n      props.scene.add(sprite)\n    \n      return sprite\n    })\n\n    this.coins = Array\n      .from(\n        {length: coinAmount},\n        (coin, index) => ({\n          index: index,\n          transitionId: undefined,\n          position: coinInitialPos(),\n          scale: initialScale.clone(),\n        })\n      )\n\n    this.loadModel()\n  }\n\n  loadModel = async () => {\n    const coinMesh = (await modelLoader(coinModel)).scene\n\n    this.coinInstance = new THREE.InstancedMesh(coinMesh.children[0].geometry, coinMesh.children[0].material, coinAmount)\n    this.coinInstance.instanceMatrix.setUsage( THREE.DynamicDrawUsage )\n    this.props.scene.add(this.coinInstance)\n\n    const middleOfArray = Math.floor(this.coins.length)\n    for (let i = 0; i < middleOfArray; i++)\n      this.emmitCoin(this.coins[i])\n    \n    setTimeout(() => {\n      for (let i = middleOfArray; i < this.coins.length; i++)\n        this.emmitCoin(this.coins[i])\n    }, 3000)\n  }\n\n  animate = props => {\n    if (!this.coinInstance)\n      return\n\n    this.animateTransitions()\n\n    charachterPos.copy(props.controls.target)\n    charachterPos.setY(charachterPos.y - 3)\n\n    this.coins.forEach(coin => {\n      //COLLISION\n      const distance = coin.position.distanceTo(charachterPos)\n\n      if (distance < 5) {\n        var shownSprite = this.sprites[Math.round(Math.random() * (this.sprites.length - 1))]\n        shownSprite.position.copy(charachterPos)\n        shownSprite.position.setY(shownSprite.position.y + 4)\n\n        this.registerTransition({\n          variable: shownSprite.position,\n          value: new THREE.Vector3(shownSprite.position.x, shownSprite.position.y + 3, shownSprite.position.z),\n          numberOfFrames: 25,\n          timingFuntion: 'easeOutQuad',\n          onComplete: () => shownSprite.position.setY(ArenaRadius * 2),\n        })\n\n        this.emmitCoin(coin)\n      }\n\n      //FALL AND ROTATION\n      dummy.position.copy(coin.position)\n      dummy.scale.copy(coin.scale)\n      switch ((coin.index) % 3) {\n        case 0:\n          dummy.rotation.x = (coin.index * 1000 + props.frameNumber * 100) / props.maxFrameNumber * Math.PI\n          break\n        case 1:\n          dummy.rotation.y = (coin.index * 1000 + props.frameNumber * 100) / props.maxFrameNumber * Math.PI\n          break\n        case 2:\n          dummy.rotation.z = (coin.index * 1000 + props.frameNumber * 100) / props.maxFrameNumber * Math.PI\n          break\n      }  \n\n      dummy.updateMatrix()\n      this.coinInstance.setMatrixAt(coin.index, dummy.matrix)\n    })\n    this.coinInstance.instanceMatrix.needsUpdate = true\n  }\n\n\n  emmitCoin = coin => {\n    coin.position.copy(coinInitialPos())\n    coin.scale.copy(initialScale)\n\n    this.unregisterTransition(coin.transitionId)\n\n    coin.transitionId = this.registerTransition({\n      variable: coin.position,\n      value: (new THREE.Vector3()).copy(coin.position).setY(1),\n      numberOfFrames: Math.round((.25 + Math.random()) * 250),\n      onComplete: () => {\n        coin.transitionId = this.registerTransition({\n          variable: coin.scale,\n          value: finalScale,\n          numberOfFrames: 150,\n          timingFuntion: 'easeInQuad',\n          onComplete: () => this.emmitCoin(coin)\n        })\n      }\n    })\n\n    dummy.position.copy(coin.position)\n    dummy.scale.copy(coin.scale)\n    dummy.updateMatrix()\n    this.coinInstance.setMatrixAt(coin.index, dummy.matrix)\n    this.coinInstance.instanceMatrix.needsUpdate = true\n  }\n}\n","import Unit from 'libs/engines/3d/Unit'\n\n\nconst lightDistanceToModel = 5\n\n\nexport default class Lowpoly extends Unit {\n  constructor(props) {\n    super(props)\n\n    const { scene, THREE } = props\n\n    // this.light0 = new THREE.HemisphereLight( 0xffffff, 0x444444, 5.25 )\n    // this.light0.position.set( 0, lightDistanceToModel * 3, 0 )\n    // scene.add( this.light0 )\n\n    // this.light1 = new THREE.HemisphereLight( 0xffffff, 0x444444, 0.95 )\n    // this.light1.position.set( 0, -lightDistanceToModel, 0 )\n    // scene.add( this.light1 )\n    \n    this.light2 = new THREE.DirectionalLight( 0xee55ee, 2.95 )\n    this.light2.position.set( lightDistanceToModel, lightDistanceToModel, 0 )\n    // this.light2.castShadow = true\n    scene.add( this.light2 )\n\n    this.light3 = new THREE.DirectionalLight( 0x77bbee, 2.95 )\n    this.light3.position.set( lightDistanceToModel * Math.cos(Math.PI * 2 / 3), lightDistanceToModel, lightDistanceToModel * Math.sin(Math.PI * 2 / 3) )\n    // this.light3.castShadow = true\n    scene.add( this.light3 )\n\n    this.light4 = new THREE.DirectionalLight( 0x0088ff, 2.95 )\n    this.light4.position.set( lightDistanceToModel * Math.cos(Math.PI * 4 / 3), 3, lightDistanceToModel * Math.sin(Math.PI * 4 / 3) )\n    // this.light4.castShadow = true\n    scene.add( this.light4 )\n  }\n\n  animate = props => {\n    // this.light0.position\n    //   .lerp(props.controls.target, .025)\n    //   .setY(lightDistanceToModel * 3)\n\n    const angle2 = props.frameNumber * 10 / props.maxFrameNumber * Math.PI * 2\n    const angle3 = angle2 + Math.PI * 2 / 3\n    const angle4 = angle3 + Math.PI * 2 / 3\n\n    // this.light0.position\n    //   .set(0, lightDistanceToModel * 2, 0)\n    //   // .add(props.controls.target)\n    this.light2.position\n      .set(lightDistanceToModel * Math.cos(angle2), 5, lightDistanceToModel * Math.sin(angle2))\n      // .add(props.controls.target)\n    this.light3.position\n      .set(lightDistanceToModel * Math.cos(angle3), 5, lightDistanceToModel * Math.sin(angle3))\n      // .add(props.controls.target)\n    this.light4.position\n      .set(lightDistanceToModel * Math.cos(angle4), 5, lightDistanceToModel * Math.sin(angle4))\n      // .add(props.controls.target)\n  }\n\n  dispose = () => {}\n}\n","import Unit from 'libs/engines/3d/Unit'\n\n\nexport default class Fog extends Unit {\n  constructor(props) {\n    super(props)\n\n    const { scene, THREE } = props\n\n    this.fog = new THREE.Fog(0x444444, 35, 155)\n    scene.fog = this.fog\n  }\n\n  animate = props => {}\n  dispose = () => {}\n}\n","import THREE from 'libs/engines/3d/three'\nimport Unit from 'libs/engines/3d/Unit'\nimport nipplejs from 'nipplejs'\nimport clamp from 'clamp'\nimport isTouchDevice from 'libs/utils/isTouchDevice'\n\n\nconst yAxis = new THREE.Vector3(0, 1, 0)\n\nconst initialThis = {\n  // scroll: {\n  //   alphaX: 0,\n  //   alphaY: 0,\n  // },\n  mouse: {\n    alphaX: 0,\n    alphaY: 0,\n  },\n\n  move: new THREE.Vector3(),\n  moveFlags: {\n    up: [\n      {\n        code: 87,\n        pressed: false,\n      },\n      {\n        code: 38,\n        pressed: false,\n      }\n    ],\n    down: [\n      {\n        code: 83,\n        pressed: false,\n      },\n      {\n        code: 40,\n        pressed: false,\n      }\n    ],\n    left: [\n      {\n        code: 68,\n        pressed: false,\n      },\n      {\n        code: 39,\n        pressed: false,\n      }\n    ],\n    right: [\n      {\n        code: 65,\n        pressed: false,\n      },\n      {\n        code: 37,\n        pressed: false,\n      }\n    ],\n  }\n}\n\n\nexport default class Controls extends Unit {\n  constructor(props) {\n    super(props)\n\n    Object.keys(initialThis)\n      .forEach(key => this[key] = initialThis[key])\n\n    if (isTouchDevice()) {  \n      // this.handleScroll()\n      // this.scrollUpdateInterval = setInterval(() => this.handleScroll(), 5)\n    }\n    else {\n      window.addEventListener('mousemove', this.handleMouseMove, false)\n      window.addEventListener('keydown', this.handleKeyDown, false)\n      window.addEventListener('keyup', this.handleKeyUp, false)\n    }\n  }\n\n  init = () => {\n    const zoneJoystick = document.getElementById('zone-joystick')\n    var options = {\n      zone: zoneJoystick,\n      mode: 'static',\n      position: {\n        x: Math.round(window.innerWidth / 4 * 3),\n        y: Math.round(window.innerHeight / 5 * 4),\n      },\n      // size: 200,\n    }\n    this.joystickManager = nipplejs.create(options)\n\n    this.joystickManager[0].on('move', (e, data) => {\n      this.move.set(-data.force / 7, 0, 0)\n        .applyAxisAngle(yAxis, data.angle.radian)\n    })\n    this.joystickManager[0].on('end', e => {\n      this.move.set(0, 0, 0)\n    })\n  }\n\n  // handleScroll = e => {\n  //   const threeSceneElement = document.getElementById(\"three-scene\")\n  //   const getBodyScrollTop = () => Math.max(-threeSceneElement.getBoundingClientRect().top, 0)\n\n  //   this.scroll.alphaY = clamp(getBodyScrollTop() / threeSceneElement.offsetHeight * .5, 0, .5)\n  // }\n\n  animate = props => {\n    const getDirectionState = direction =>\n      direction\n        .map(key => key.pressed)\n        .reduce((a, b) => a || b)\n      ? 1 : 0\n\n    if (!isTouchDevice())\n      this.move\n        .set(\n          getDirectionState(this.moveFlags.right) - getDirectionState(this.moveFlags.left),\n          0,\n          getDirectionState(this.moveFlags.up) - getDirectionState(this.moveFlags.down))\n        .normalize()\n        .multiplyScalar(.55)\n  }\n\n  \n  handleMouseMove = e => {\n    if (!e.pageX || !e.pageY) {\n      console.log(\"no mouse found\")\n      return\n    }\n  \n    this.mouse.alphaX = -clamp(e.pageX / window.innerWidth - .5, -.5, .5)\n    this.mouse.alphaY = clamp(e.pageY / window.innerHeight - .5, -.5, .5)\n  }\n\n  handleKeyDown = e =>\n    Object.keys(this.moveFlags)\n      .forEach(direction =>\n        this.moveFlags[direction]\n          .forEach(key =>\n            key.pressed |= (key.code === e.keyCode)))\n\n  handleKeyUp = e =>\n    Object.keys(this.moveFlags)\n      .forEach(direction =>\n        this.moveFlags[direction]\n          .forEach(key =>\n            key.pressed &= !(key.code === e.keyCode)))\n\n\n  dispose = () => {\n    if (isTouchDevice())\n      ;\n      // clearInterval(this.scrollUpdateInterval)\n    else\n      window.removeEventListener('mousemove', this.handleMouseMove, false)\n  }\n}\n","// import { UnrealBloomPass } from './customUnrealBloomPass'\nimport { BloomEffect, EffectComposer, EffectPass, RenderPass } from 'postprocessing'\nimport Unit from 'libs/engines/3d/Unit'\n\n\nexport default class BloomPostprocessing extends Unit {\n  constructor(props) {\n    super(props)\n\n    const {\n      renderer,\n      camera,\n      composer,\n      THREE,\n    } = props\n\n    // this.params = [\n    //   .5,\n    //   1,\n    //   1,\n    // ]\n    // this.pass = new UnrealBloomPass(\n    //   new THREE.Vector2(renderer.getSize(new THREE.Vector2()).x, renderer.getSize(new THREE.Vector2()).y),\n    //   ...this.params\n    // )\n    this.pass = new EffectPass(camera, new BloomEffect())\n    composer.addPass(this.pass)\n  }\n\n  animate = props => {\n    // this.pass.strength = this.params[0]\n    // this.pass.radius = this.params[1]\n    // this.pass.threshold = this.params[2]\n  }\n  dispose = () => {}\n}\n","import React, { Component } from 'react'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nimport Scene from 'libs/engines/3d/Scene'\nimport Character from 'libs/engines/3d/units/Character'\nimport Landscape from 'libs/engines/3d/units/Landscape'\nimport Coins from 'libs/engines/3d/units/Coins'\nimport Lights from 'libs/engines/3d/units/Lights'\nimport Fog from 'libs/engines/3d/units/Fog'\nimport Controls from 'libs/engines/3d/units/Controls'\n// import VignettePostprocessing from 'libs/engines/3d/units/VignettePostprocessing'\n// import FilmGrainPostprocessing from 'libs/engines/3d/units/FilmGrainPostprocessing'\nimport BloomPostprocessing from 'libs/engines/3d/units/BloomPostprocessing'\n// import EasterEgg from 'libs/engines/3d/units/EasterEgg'\n\n\nexport default class ThreeScene extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n\n    this.viewerRef = new React.createRef()\n\n    this.scene = new Scene({\n      units: {\n        Character: {\n          unit: Character,\n          disabled: false,\n        },\n        Landscape: {\n          unit: Landscape,\n          disabled: false,\n        },\n        Coins: {\n          unit: Coins,\n          disabled: false,\n        },\n        Lights: {\n          unit: Lights,\n          disabled: false,\n        },\n        Fog: {\n          unit: Fog,\n          disabled: false,\n        },\n        Controls: {\n          unit: Controls,\n          disabled: false,\n        },\n        // FilmGrainPostprocessing: {\n        //   unit: FilmGrainPostprocessing,\n        //   disabled: false,\n        // },\n        BloomPostprocessing: {\n          unit: BloomPostprocessing,\n          disabled: false,\n        },\n        // VignettePostprocessing: {\n        //   unit: VignettePostprocessing,\n        //   disabled: false,\n        // },\n        // EasterEgg: {\n        //   unit: EasterEgg,\n        //   disabled: false,\n        // },\n      }\n    })\n  }\n\n  componentDidMount() {\n    this.resizeObs = new ResizeObserver(this.resize.bind(this))\n      .observe(this.viewerRef.current)\n\n    this.scene.init(this.viewerRef.current)\n  }\n\n  componentWillUnmount = () => {\n    this.scene.dispose()\n    // this.viewerRef.removeChild(this.renderer.domElement)\n  }\n\n  resize() {\n    const ViewerDiv = this.viewerRef && this.viewerRef.current\n    \n    if (!ViewerDiv)\n      return\n\n    this.scene.resize(ViewerDiv.clientWidth, ViewerDiv.clientHeight)\n  }\n\n  render = () =>\n    <div\n      className=\"Viewer\"\n      ref={this.viewerRef}\n    >\n      <div id=\"zone-joystick\" />\n    </div>\n}\n","import React, { Component } from 'react'\n\n\nexport default class TextArea extends Component {\n  constructor(props) {\n    super(props)\n  }\n  \n  render = () =>\n    <div className=\"text-area\">\n        <div className=\"text-area__left-column\">\n          <div className=\"text-area__left-column__text\">\n            что голодная смерть британца в тяжёлой депрессии может рассказать нам о том, как мы распоряжаемся ресурсами и будем распоряжаться ими в будущем? что такое безусловный базовый доход? как изменится ваша жизнь, получай вы каждый месяц зарплату только за то, что живёте? \n          </div>\n        </div>\n        <div className=\"text-area__right-column\">\n          <h1 className=\"h1\">\n            SITTING&nbsp;IN&nbsp;A<br />\n            ROOM.&nbsp;I&nbsp;AM.\n          </h1>\n          <h2 className=\"h2\">COMING SOON</h2>\n        </div>\n        <div className=\"text-area__bottom-text\">\n          спект:&nbsp;виктор вилисов; unity:&nbsp;артём васич; three.js:&nbsp;лев васильев\n        </div>\n    </div>\n}\n\n","import React from 'react'\nimport Div100vh from 'react-div-100vh'\nimport ThreeScene from './components/ThreeScene'\nimport TextArea from './components/TextArea'\n\nimport 'styles/index.sass'\n\n\nconst App = () =>\n  <Div100vh>\n    <ThreeScene/>\n    <TextArea/>\n  </Div100vh>\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}